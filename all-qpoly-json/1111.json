{
    "variables": [
        "b1",
        "b2",
        "s"
    ],
    "pieces": [
        {
            "domain": [
                {
                    "quantifiers": {
                        "e0": "floor((-2 + b1)/4)",
                        "e1": "floor((b2)/4)"
                    },
                    "linear conditions": [
                        "4 * e0 == -2 + b1",
                        "4 * e1 == b2",
                        "b1 >= 2",
                        "b2 >= 2 + b1",
                        "s >= 1 + b1 + b2"
                    ]
                },
                {
                    "quantifiers": {
                        "e0": "floor((b2)/4)",
                        "e1": "floor((-2 + b1 + b2)/4)"
                    },
                    "linear conditions": [
                        "s == b1 + b2",
                        "4 * e0 == b2",
                        "4 * e1 == -2 + b1 + b2",
                        "b1 >= 2",
                        "b2 >= 2 + b1"
                    ]
                },
                {
                    "quantifiers": {
                        "e0": "floor((b2)/4)",
                        "e1": "floor((-2 + b1 + b2)/4)"
                    },
                    "linear conditions": [
                        "s == -1 + b1 + b2",
                        "4 * e0 == b2",
                        "4 * e1 == -2 + b1 + b2",
                        "b1 >= 3",
                        "b2 >= 2 + b1"
                    ]
                }
            ],
            "formula": "((((((1/2 - 1/3 * b1 - 1/24 * b1^2) + (-1/3 + 3/8 * b1 - 1/48 * b1^2) * b2 + (1/48 + 1/48 * b1) * b2^2) + (2/3 - 2/3 * b2) * floor((b1)/3)) + (1/3 - 1/3 * b2) * floor((1 + b1)/3)) + ((2/3 - 1/3 * b1) + floor((b1)/3)) * floor((b2)/3)) + (((1/3 - 2/3 * b1) + floor((b1)/3)) + floor((1 + b1)/3)) * floor((1 + b2)/3))"
        },
        {
            "domain": [
                {
                    "quantifiers": {
                        "e0": "floor((b1)/4)",
                        "e1": "floor((-3 + b2)/4)"
                    },
                    "linear conditions": [
                        "4 * e0 == b1",
                        "4 * e1 == -3 + b2",
                        "b2 >= 1 + b1",
                        "4 * s >= b1 + 2 * b2",
                        "s <= -3 + b1"
                    ]
                },
                {
                    "quantifiers": {
                        "e0": "floor((-2 + b1)/4)",
                        "e1": "floor((-1 + b2)/4)"
                    },
                    "linear conditions": [
                        "4 * e0 == -2 + b1",
                        "4 * e1 == -1 + b2",
                        "b2 >= 1 + b1",
                        "4 * s >= b1 + 2 * b2",
                        "s <= -3 + b1"
                    ]
                }
            ],
            "formula": "(((((((((7/16 - 19/16 * b1 + 19/24 * b1^2 - 1/24 * b1^3) + (-1 + 43/24 * b1 - 1/16 * b1^2) * b2 + (29/48 + 1/16 * b1) * b2^2 + 1/24 * b2^3) + ((-1/12 - 1/6 * b1 + 1/4 * b1^2) + 1/3 * b2 - 1/4 * b2^2) * s + ((1/3 - 1/3 * b1) + 1/3 * b2) * s^2) + (((2/3 - 2/3 * b1) - 4/3 * b2) - 1/3 * s) * floor((b1)/3)) + (((1/3 - 4/3 * b1) - 5/3 * b2) - 2/3 * s) * floor((1 + b1)/3)) + ((((2/3 - 5/3 * b1) - 4/3 * b2) - 2/3 * s) + floor((b1)/3)) * floor((b2)/3)) + (((((1/3 - 4/3 * b1) - 2/3 * b2) - 1/3 * s) + floor((b1)/3)) + floor((1 + b1)/3)) * floor((1 + b2)/3)) + (((((2/3 - 2/3 * b1) - 1/3 * b2) + floor((b1)/3)) + floor((1 + b1)/3)) + floor((b2)/3)) * floor((2b1 + 2b2 + s)/3)) + (((((1/3 - 1/3 * b1) - 2/3 * b2) + floor((1 + b1)/3)) + floor((b2)/3)) + floor((1 + b2)/3)) * floor((1 + 2b1 + 2b2 + s)/3))"
        },
        {
            "domain": [
                {
                    "quantifiers": {
                        "e0": "floor((b2)/4)"
                    },
                    "linear conditions": [
                        "b1 == 2",
                        "s == 1 + b2",
                        "4 * e0 == b2",
                        "b2 >= 4"
                    ]
                }
            ],
            "formula": "1/16 * b2^2"
        },
        {
            "domain": [
                {
                    "quantifiers": {
                        "e0": "floor((-3 + b2)/4)",
                        "e1": "floor((-1 + b2)/4)",
                        "e2": "floor((-1 + b1)/2)",
                        "e3": "floor((-2 + b2)/4)"
                    },
                    "linear conditions": [
                        "2 * e2 == -1 + b1",
                        "4 * e3 == -2 + b2",
                        "b2 >= b1",
                        "4 * s >= b1 + 2 * b2",
                        "s <= -3 + b1",
                        "4 * e0 >= -6 + b2",
                        "4 * e0 <= -4 + b2",
                        "4 * e1 >= -4 + b2",
                        "4 * e1 <= -2 + b2"
                    ]
                },
                {
                    "quantifiers": {
                        "e0": "floor((-2 + b1)/4)",
                        "e1": "floor((-3 + b2)/4)",
                        "e2": "floor((-1 + b1)/2)",
                        "e3": "floor((b2)/4)"
                    },
                    "linear conditions": [
                        "2 * e2 == -1 + b1",
                        "4 * e3 == b2",
                        "b2 >= b1",
                        "4 * s >= b1 + 2 * b2",
                        "s <= -3 + b1",
                        "4 * e0 >= -5 + b1",
                        "4 * e0 <= -3 + b1",
                        "4 * e1 >= -6 + b2",
                        "4 * e1 <= -4 + b2"
                    ]
                }
            ],
            "formula": "(((((((((3/8 - 9/8 * b1 + 19/24 * b1^2 - 1/24 * b1^3) + (-17/16 + 43/24 * b1 - 1/16 * b1^2) * b2 + (29/48 + 1/16 * b1) * b2^2 + 1/24 * b2^3) + ((-1/12 - 1/6 * b1 + 1/4 * b1^2) + 1/3 * b2 - 1/4 * b2^2) * s + ((1/3 - 1/3 * b1) + 1/3 * b2) * s^2) + (((2/3 - 2/3 * b1) - 4/3 * b2) - 1/3 * s) * floor((b1)/3)) + (((1/3 - 4/3 * b1) - 5/3 * b2) - 2/3 * s) * floor((1 + b1)/3)) + ((((2/3 - 5/3 * b1) - 4/3 * b2) - 2/3 * s) + floor((b1)/3)) * floor((b2)/3)) + (((((1/3 - 4/3 * b1) - 2/3 * b2) - 1/3 * s) + floor((b1)/3)) + floor((1 + b1)/3)) * floor((1 + b2)/3)) + (((((2/3 - 2/3 * b1) - 1/3 * b2) + floor((b1)/3)) + floor((1 + b1)/3)) + floor((b2)/3)) * floor((2b1 + 2b2 + s)/3)) + (((((1/3 - 1/3 * b1) - 2/3 * b2) + floor((1 + b1)/3)) + floor((b2)/3)) + floor((1 + b2)/3)) * floor((1 + 2b1 + 2b2 + s)/3))"
        },
        {
            "domain": [
                {
                    "quantifiers": {
                        "e0": "floor((-2 + b1)/4)",
                        "e1": "floor((b2)/4)"
                    },
                    "linear conditions": [
                        "4 * e0 == -2 + b1",
                        "4 * e1 == b2",
                        "4 * s >= 2 + b1 + 2 * b2",
                        "s >= b1",
                        "2 * s <= -4 + b1 + b2"
                    ]
                }
            ],
            "formula": "((((((((((1/2 - 1/2 * b1 + 5/8 * b1^2 + 1/24 * b1^3) + (-1/12 + 23/24 * b1 + 5/48 * b1^2) * b2 + (-1/16 + 1/16 * b1) * b2^2 + 1/24 * b2^3) + ((5/12 + 5/12 * b1 - 1/4 * b1^2) + (1/6 - 1/3 * b1) * b2 - 1/4 * b2^2) * s + ((-1/12 + 5/12 * b1) + 1/2 * b2) * s^2 - 1/3 * s^3) + (((2/3 - 2/3 * b1) - 4/3 * b2) - 1/3 * s) * floor((b1)/3)) + (((1/3 - 4/3 * b1) - 5/3 * b2) - 2/3 * s) * floor((1 + b1)/3)) + ((2/3 - 1/3 * b1) + floor((b1)/3)) * floor((b2)/3)) + (((1/3 - 2/3 * b1) + floor((b1)/3)) + floor((1 + b1)/3)) * floor((1 + b2)/3)) - 1/2 * floor((b2 + s)/2)) + (((1/3 - 2/3 * b1) + floor((b1)/3)) + floor((1 + b1)/3)) * floor((2b1 + 2b2 + s)/3)) + ((-1/3 - 1/3 * b1) + floor((1 + b1)/3)) * floor((1 + 2b1 + 2b2 + s)/3))"
        },
        {
            "domain": [
                {
                    "quantifiers": {
                        "e0": "floor((b2)/4)",
                        "e1": "floor((-2 + b1)/4)"
                    },
                    "linear conditions": [
                        "s == -1 + b1",
                        "4 * e0 == b2",
                        "4 * e1 == -2 + b1",
                        "b2 >= 2 + b1",
                        "2 * b2 <= -6 + 3 * b1"
                    ]
                }
            ],
            "formula": "((((((1/2 - 1/2 * b1 + 3/8 * b1^2 - 1/8 * b1^3) + (1/3 - 29/24 * b1 + 13/48 * b1^2) * b2 + (3/16 - 3/16 * b1) * b2^2 + 1/24 * b2^3) + 2/3 * b2 * floor((b1)/3)) + 4/3 * b2 * floor((1 + b1)/3)) + ((b1 - floor((b1)/3)) - 2 * floor((1 + b1)/3)) * floor((b2)/3)) + ((b1 - floor((b1)/3)) - 2 * floor((1 + b1)/3)) * floor((2 + b2)/3))"
        },
        {
            "domain": [
                {
                    "quantifiers": {
                        "e0": "floor((b2)/4)",
                        "e1": "floor((-2 + b1)/4)"
                    },
                    "linear conditions": [
                        "s == -2 + b1",
                        "4 * e0 == b2",
                        "4 * e1 == -2 + b1",
                        "b2 >= 2 + b1",
                        "2 * b2 <= -10 + 3 * b1"
                    ]
                }
            ],
            "formula": "((((((3/2 - 5/3 * b1 + 19/24 * b1^2 - 1/8 * b1^3) + (3/2 - 29/24 * b1 + 13/48 * b1^2) * b2 + (13/48 - 3/16 * b1) * b2^2 + 1/24 * b2^3) + (1/3 - 1/3 * b2) * floor((b1)/3)) + (-1/3 + 1/3 * b2) * floor((1 + b1)/3)) + (((-1/6 + 2/3 * b2) + floor((b1)/3)) - floor((1 + b1)/3)) * floor((b2)/3) - 1/2 * floor((b2)/3)^2) + ((-1/3 + 1/3 * b2) - floor((b2)/3)) * floor((1 + b2)/3))"
        },
        {
            "domain": [
                {
                    "quantifiers": {
                        "e0": "floor((b2)/4)",
                        "e1": "floor((-2 + b1 + b2)/4)"
                    },
                    "linear conditions": [
                        "2 * s == -2 + b1 + b2",
                        "4 * e0 == b2",
                        "4 * e1 == -2 + b1 + b2",
                        "b1 >= 6",
                        "b2 >= 2 + b1"
                    ]
                }
            ],
            "formula": "((((((((1/4 - 1/6 * b1 - 5/48 * b1^2 - 1/48 * b1^3) + (-1/3 + 1/8 * b1 + 1/48 * b1^2) * b2) + (1/6 * b1 - 1/2 * b2) * floor((b1)/3)) + 1/3 * b1 * floor((1 + b1)/3)) + ((2/3 - 1/3 * b1) + floor((b1)/3)) * floor((b2)/3)) + (((1/3 - 2/3 * b1) + floor((b1)/3)) + floor((1 + b1)/3)) * floor((1 + b2)/3)) + (((-1/3 + 2/3 * b1) - floor((b1)/3)) - floor((1 + b1)/3)) * floor((1 + b1 + b2)/6)) + ((1/3 + 1/3 * b1) - floor((1 + b1)/3)) * floor((5 + b1 + b2)/6))"
        },
        {
            "domain": [
                {
                    "quantifiers": {
                        "e0": "floor((b2)/4)",
                        "e1": "floor((-2 + b1 + b2)/4)"
                    },
                    "linear conditions": [
                        "2 * s == b1 + b2",
                        "4 * e0 == b2",
                        "4 * e1 == -2 + b1 + b2",
                        "b1 >= 2",
                        "b2 >= 4 + b1"
                    ]
                }
            ],
            "formula": "((((((((3/4 - 5/12 * b1 - 3/16 * b1^2 - 1/48 * b1^3) + (-1/4 + 5/24 * b1 + 1/48 * b1^2) * b2) + ((2/3 + 1/6 * b1) - 1/2 * b2) * floor((b1)/3)) + (1/3 + 1/3 * b1) * floor((1 + b1)/3)) + ((2/3 - 1/3 * b1) + floor((b1)/3)) * floor((b2)/3)) + (((1/3 - 2/3 * b1) + floor((b1)/3)) + floor((1 + b1)/3)) * floor((1 + b2)/3)) + ((1/3 + 1/3 * b1) - floor((1 + b1)/3)) * floor((3 + b1 + b2)/6)) + (((-1/3 + 2/3 * b1) - floor((b1)/3)) - floor((1 + b1)/3)) * floor((5 + b1 + b2)/6))"
        },
        {
            "domain": [
                {
                    "quantifiers": {
                        "e0": "floor((-2 + b1)/4)",
                        "e1": "floor((b2)/4)"
                    },
                    "linear conditions": [
                        "4 * e0 == -2 + b1",
                        "4 * e1 == b2",
                        "b1 >= 2",
                        "2 * s >= 2 + b1 + b2",
                        "s <= -2 + b2"
                    ]
                }
            ],
            "formula": "((((((((((1/2 - 1/3 * b1 + 5/8 * b1^2) + (1/12 + 23/24 * b1 - 1/48 * b1^2) * b2 + (-1/16 - 1/16 * b1) * b2^2) + ((1/12 + 5/12 * b1) + (1/6 + 1/6 * b1) * b2) * s + (-1/12 - 1/12 * b1) * s^2) + (((2/3 - 2/3 * b1) - 4/3 * b2) - 1/3 * s) * floor((b1)/3)) + (((1/3 - 4/3 * b1) - 5/3 * b2) - 2/3 * s) * floor((1 + b1)/3)) + ((2/3 - 1/3 * b1) + floor((b1)/3)) * floor((b2)/3)) + (((1/3 - 2/3 * b1) + floor((b1)/3)) + floor((1 + b1)/3)) * floor((1 + b2)/3)) - 1/2 * floor((b2 + s)/2)) + (((1/3 - 2/3 * b1) + floor((b1)/3)) + floor((1 + b1)/3)) * floor((2b1 + 2b2 + s)/3)) + ((-1/3 - 1/3 * b1) + floor((1 + b1)/3)) * floor((1 + 2b1 + 2b2 + s)/3))"
        },
        {
            "domain": [
                {
                    "quantifiers": {
                        "e0": "floor((-2 + b1)/4)"
                    },
                    "linear conditions": [
                        "b2 == 2 + b1",
                        "s == 1 + b1",
                        "4 * e0 == -2 + b1",
                        "b1 >= 2"
                    ]
                }
            ],
            "formula": "(((1/4 + 3/4 * b1 + 1/16 * b1^2) + (-7/6 + 1/3 * b1) * floor((b1)/3) - 1/2 * floor((b1)/3)^2) + (-5/6 - 1/3 * b1) * floor((1 + b1)/3) + 1/2 * floor((1 + b1)/3)^2)"
        },
        {
            "domain": [
                {
                    "quantifiers": {
                        "e0": "floor((-2 + b1)/4)",
                        "e1": "floor((b2)/4)"
                    },
                    "linear conditions": [
                        "4 * e0 == -2 + b1",
                        "4 * e1 == b2",
                        "b1 >= 2",
                        "2 * s >= 2 + b1 + b2",
                        "s >= -1 + b2",
                        "s <= b2"
                    ]
                }
            ],
            "formula": "(((((((((1/2 - 1/6 * b1 + 1/8 * b1^2) + (-1/720 + 23/36 * b1 - 1/48 * b1^2) * b2 + (1/18 - 5/72 * b1) * b2^2 + (-1/24 - 1/72 * b1) * b2^3 + (1/144 + 1/144 * b1) * b2^4 + 1/720 * b2^5) + ((-119/720 - 19/72 * b1) + (-29/72 + 13/72 * b1) * b2 + (1/8 + 1/24 * b1) * b2^2 + (-1/36 - 1/36 * b1) * b2^3 - 1/144 * b2^4) * s + ((-19/144 - 13/144 * b1) + (-1/8 - 1/24 * b1) * b2 + (1/24 + 1/24 * b1) * b2^2 + 1/72 * b2^3) * s^2 + ((1/24 + 1/72 * b1) + (-1/36 - 1/36 * b1) * b2 - 1/72 * b2^2) * s^3 + ((1/144 + 1/144 * b1) + 1/144 * b2) * s^4 - 1/720 * s^5) + ((2/3 - 1/3 * b1) - 4/3 * b2) * floor((b1)/3)) + ((((1/6 - 2/3 * b1) - 4/3 * b2) - 1/3 * s) - 1/3 * floor((b1)/3)) * floor((1 + b1)/3) - 1/6 * floor((1 + b1)/3)^2) + ((2/3 - 1/3 * b1) + floor((b1)/3)) * floor((b2)/3)) + (((1/3 - 2/3 * b1) + floor((b1)/3)) + floor((1 + b1)/3)) * floor((1 + b2)/3)) + ((((1/6 + 1/3 * b2) + 1/3 * s) + 2/3 * floor((b1)/3)) + 2/3 * floor((1 + b1)/3)) * floor((2b1 + 2b2 + s)/3) - 1/6 * floor((2b1 + 2b2 + s)/3)^2) + (((-1/3 + 1/3 * s) + 2/3 * floor((1 + b1)/3)) - 1/3 * floor((2b1 + 2b2 + s)/3)) * floor((1 + 2b1 + 2b2 + s)/3))"
        },
        {
            "domain": [
                {
                    "quantifiers": {
                        "e0": "floor((-2 + b1)/4)",
                        "e1": "floor((b2)/4)"
                    },
                    "linear conditions": [
                        "s == 1 + b2",
                        "4 * e0 == -2 + b1",
                        "4 * e1 == b2",
                        "b1 >= 3",
                        "b2 >= 2 + b1"
                    ]
                }
            ],
            "formula": "((((((1/2 - 1/6 * b1 - 5/24 * b1^2) + (-1/3 + 3/8 * b1 - 1/48 * b1^2) * b2 + (1/48 + 1/48 * b1) * b2^2) + ((2/3 + 1/3 * b1) - 2/3 * b2) * floor((b1)/3)) + (((-1/6 + 2/3 * b1) - 1/3 * b2) - floor((b1)/3)) * floor((1 + b1)/3) - 1/2 * floor((1 + b1)/3)^2) + ((2/3 - 1/3 * b1) + floor((b1)/3)) * floor((b2)/3)) + (((1/3 - 2/3 * b1) + floor((b1)/3)) + floor((1 + b1)/3)) * floor((1 + b2)/3))"
        },
        {
            "domain": [
                {
                    "quantifiers": {
                        "e0": "floor((-2 + b1)/4)",
                        "e1": "floor((b2)/4)"
                    },
                    "linear conditions": [
                        "4 * e0 == -2 + b1",
                        "4 * e1 == b2",
                        "b2 >= 2 + b1",
                        "s >= 2 + b2",
                        "s <= -2 + b1 + b2"
                    ]
                }
            ],
            "formula": "((((((1/2 - 1/3 * b1 - 1/24 * b1^2) + (-1/3 + 3/8 * b1 - 1/48 * b1^2) * b2 + (1/48 + 1/48 * b1) * b2^2) + (2/3 - 2/3 * b2) * floor((b1)/3)) + (1/3 - 1/3 * b2) * floor((1 + b1)/3)) + ((2/3 - 1/3 * b1) + floor((b1)/3)) * floor((b2)/3)) + (((1/3 - 2/3 * b1) + floor((b1)/3)) + floor((1 + b1)/3)) * floor((1 + b2)/3))"
        },
        {
            "domain": [
                {
                    "quantifiers": {
                        "e0": "floor((-3 + b2)/4)",
                        "e1": "floor((-1 + b2)/4)",
                        "e2": "floor((-2 + b2)/4)",
                        "e3": "floor((-2 + b1)/4)",
                        "e4": "floor((b2)/4)"
                    },
                    "linear conditions": [
                        "4 * e3 == -2 + b1",
                        "4 * e4 == b2",
                        "b2 >= 2 + b1",
                        "4 * s >= 2 + b1 + 2 * b2",
                        "s <= -3 + b1",
                        "4 * e1 >= -4 + b2",
                        "4 * e1 <= -2 + b2",
                        "4 * e0 <= -4 + b2",
                        "4 * e0 >= -6 + b2",
                        "4 * e2 >= -5 + b2",
                        "4 * e2 <= -3 + b2"
                    ]
                }
            ],
            "formula": "(((((((((1/2 - b1 + 19/24 * b1^2 - 1/24 * b1^3) + (-1 + 43/24 * b1 - 1/16 * b1^2) * b2 + (29/48 + 1/16 * b1) * b2^2 + 1/24 * b2^3) + ((-1/3 - 1/6 * b1 + 1/4 * b1^2) + 1/3 * b2 - 1/4 * b2^2) * s + ((1/3 - 1/3 * b1) + 1/3 * b2) * s^2) + (((2/3 - 2/3 * b1) - 4/3 * b2) - 1/3 * s) * floor((b1)/3)) + (((1/3 - 4/3 * b1) - 5/3 * b2) - 2/3 * s) * floor((1 + b1)/3)) + ((((2/3 - 5/3 * b1) - 4/3 * b2) - 2/3 * s) + floor((b1)/3)) * floor((b2)/3)) + (((((1/3 - 4/3 * b1) - 2/3 * b2) - 1/3 * s) + floor((b1)/3)) + floor((1 + b1)/3)) * floor((1 + b2)/3)) + (((((2/3 - 2/3 * b1) - 1/3 * b2) + floor((b1)/3)) + floor((1 + b1)/3)) + floor((b2)/3)) * floor((2b1 + 2b2 + s)/3)) + (((((1/3 - 1/3 * b1) - 2/3 * b2) + floor((1 + b1)/3)) + floor((b2)/3)) + floor((1 + b2)/3)) * floor((1 + 2b1 + 2b2 + s)/3))"
        },
        {
            "domain": [
                {
                    "quantifiers": {
                        "e0": "floor((-2 + b1)/4)",
                        "e1": "floor((b1)/4)",
                        "e2": "floor((b2)/4)"
                    },
                    "linear conditions": [
                        "4 * e1 == b1",
                        "4 * e2 == b2",
                        "b1 >= 2",
                        "b2 >= b1",
                        "s >= 1 + b1 + b2",
                        "4 * e0 >= -5 + b1",
                        "4 * e0 <= -3 + b1"
                    ]
                },
                {
                    "quantifiers": {
                        "e0": "floor((-2 + b1 + b2)/4)",
                        "e1": "floor((b2)/4)",
                        "e2": "floor((b1 + b2)/4)"
                    },
                    "linear conditions": [
                        "s == b1 + b2",
                        "4 * e1 == b2",
                        "4 * e2 == b1 + b2",
                        "b1 >= 2",
                        "b2 >= b1",
                        "4 * e0 >= -5 + b1 + b2",
                        "4 * e0 <= -3 + b1 + b2"
                    ]
                },
                {
                    "quantifiers": {
                        "e0": "floor((-2 + b1 + b2)/4)",
                        "e1": "floor((b2)/4)",
                        "e2": "floor((-4 + b1 + b2)/4)"
                    },
                    "linear conditions": [
                        "s == -1 + b1 + b2",
                        "4 * e1 == b2",
                        "4 * e2 == -4 + b1 + b2",
                        "b1 >= 3",
                        "b2 >= b1",
                        "4 * e0 >= -5 + b1 + b2",
                        "4 * e0 <= -3 + b1 + b2"
                    ]
                }
            ],
            "formula": "((((((-1/3 * b1 - 1/24 * b1^2) + (-1/3 + 3/8 * b1 - 1/48 * b1^2) * b2 + (1/48 + 1/48 * b1) * b2^2) + (2/3 - 2/3 * b2) * floor((b1)/3)) + (1/3 - 1/3 * b2) * floor((1 + b1)/3)) + ((2/3 - 1/3 * b1) + floor((b1)/3)) * floor((b2)/3)) + (((1/3 - 2/3 * b1) + floor((b1)/3)) + floor((1 + b1)/3)) * floor((1 + b2)/3))"
        },
        {
            "domain": [
                {
                    "quantifiers": {
                        "e0": "floor((b2)/4)",
                        "e1": "floor((b1)/2)",
                        "e2": "floor((-2 + b2)/4)"
                    },
                    "linear conditions": [
                        "2 * e1 == b1",
                        "4 * e2 == -2 + b2",
                        "b1 >= 2",
                        "b2 >= b1",
                        "s >= 1 + b1 + b2",
                        "4 * e0 >= -3 + b2",
                        "4 * e0 <= -1 + b2"
                    ]
                },
                {
                    "quantifiers": {
                        "e0": "floor((b2)/4)",
                        "e1": "floor((-2 + b2)/4)",
                        "e2": "floor((-2 + b1 + b2)/4)"
                    },
                    "linear conditions": [
                        "s == b1 + b2",
                        "4 * e1 == -2 + b2",
                        "4 * e2 == -2 + b1 + b2",
                        "b1 >= 2",
                        "b2 >= b1",
                        "4 * e0 >= -3 + b2",
                        "4 * e0 <= -1 + b2"
                    ]
                },
                {
                    "quantifiers": {
                        "e0": "floor((-2 + b1 + b2)/4)",
                        "e1": "floor((b2)/4)",
                        "e2": "floor((-2 + b2)/4)",
                        "e3": "floor((b1 + b2)/4)"
                    },
                    "linear conditions": [
                        "s == b1 + b2",
                        "4 * e2 == -2 + b2",
                        "4 * e3 == b1 + b2",
                        "b1 >= 2",
                        "b2 >= b1",
                        "4 * e0 >= -5 + b1 + b2",
                        "4 * e0 <= -3 + b1 + b2",
                        "4 * e1 >= -3 + b2",
                        "4 * e1 <= -1 + b2"
                    ]
                },
                {
                    "quantifiers": {
                        "e0": "floor((-2 + b1 + b2)/4)",
                        "e1": "floor((b2)/4)",
                        "e2": "floor((-2 + b2)/4)",
                        "e3": "floor((-4 + b1 + b2)/4)"
                    },
                    "linear conditions": [
                        "s == -1 + b1 + b2",
                        "4 * e2 == -2 + b2",
                        "4 * e3 == -4 + b1 + b2",
                        "b1 >= 3",
                        "b2 >= b1",
                        "4 * e0 >= -5 + b1 + b2",
                        "4 * e0 <= -3 + b1 + b2",
                        "4 * e1 >= -3 + b2",
                        "4 * e1 <= -1 + b2"
                    ]
                },
                {
                    "quantifiers": {
                        "e0": "floor((b2)/4)",
                        "e1": "floor((-2 + b2)/4)",
                        "e2": "floor((-2 + b1 + b2)/4)"
                    },
                    "linear conditions": [
                        "s == -1 + b1 + b2",
                        "4 * e1 == -2 + b2",
                        "4 * e2 == -2 + b1 + b2",
                        "b1 >= 3",
                        "b2 >= b1",
                        "4 * e0 >= -3 + b2",
                        "4 * e0 <= -1 + b2"
                    ]
                }
            ],
            "formula": "((((((1/4 - 1/3 * b1 - 1/24 * b1^2) + (-1/3 + 3/8 * b1 - 1/48 * b1^2) * b2 + (1/48 + 1/48 * b1) * b2^2) + (2/3 - 2/3 * b2) * floor((b1)/3)) + (1/3 - 1/3 * b2) * floor((1 + b1)/3)) + ((2/3 - 1/3 * b1) + floor((b1)/3)) * floor((b2)/3)) + (((1/3 - 2/3 * b1) + floor((b1)/3)) + floor((1 + b1)/3)) * floor((1 + b2)/3))"
        },
        {
            "domain": [
                {
                    "quantifiers": {
                        "e0": "floor((-1 + b2)/4)"
                    },
                    "linear conditions": [
                        "b1 == 1",
                        "4 * e0 == -1 + b2",
                        "b2 >= 1",
                        "s >= 1 + b2"
                    ]
                },
                {
                    "quantifiers": {
                        "e0": "floor((-1 + b2)/4)"
                    },
                    "linear conditions": [
                        "b1 == 1",
                        "s == -1 + b2",
                        "4 * e0 == -1 + b2",
                        "b2 >= 5"
                    ]
                },
                {
                    "quantifiers": {
                        "e0": "floor((-1 + b2)/4)"
                    },
                    "linear conditions": [
                        "b1 == 1",
                        "s == b2",
                        "4 * e0 == -1 + b2",
                        "b2 >= 3"
                    ]
                }
            ],
            "formula": "(((-1/8 + 1/12 * b2 + 1/24 * b2^2) + 1/3 * floor((b2)/3)) - 1/3 * floor((1 + b2)/3))"
        },
        {
            "domain": [
                {
                    "quantifiers": {
                        "e0": "floor((-1 + b2)/4)"
                    },
                    "linear conditions": [
                        "b1 == 0",
                        "4 * e0 == -1 + b2",
                        "2 * s >= 1 + b2",
                        "s <= -2 + b2"
                    ]
                }
            ],
            "formula": "(((((((7/16 + 7/24 * b2 - 1/16 * b2^2) + (1/12 + 1/6 * b2) * s - 1/12 * s^2) + 1/3 * floor((b2)/3)) - 1/3 * floor((2 + b2)/3)) - 1/2 * floor((b2 + s)/2)) + 1/3 * floor((2b2 + s)/3)) - 1/3 * floor((1 + 2b2 + s)/3))"
        },
        {
            "domain": [
                {
                    "quantifiers": {
                        "e0": "floor((b2)/4)",
                        "e1": "floor((-2 + b2)/4)"
                    },
                    "linear conditions": [
                        "b1 == 2",
                        "s == 1 + b2",
                        "4 * e1 == -2 + b2",
                        "b2 >= 2",
                        "4 * e0 <= -1 + b2",
                        "4 * e0 >= -3 + b2"
                    ]
                }
            ],
            "formula": "(-1/4 + 1/16 * b2^2)"
        },
        {
            "domain": [
                {
                    "quantifiers": {
                        "e0": "floor((-1 + b2)/4)",
                        "e1": "floor((b2)/4)"
                    },
                    "linear conditions": [
                        "b1 == 0",
                        "4 * e1 == b2",
                        "2 * s >= 2 + b2",
                        "s <= -2 + b2",
                        "4 * e0 <= -2 + b2",
                        "4 * e0 >= -4 + b2"
                    ]
                }
            ],
            "formula": "(((((((5/12 * b2 - 1/16 * b2^2) + (1/12 + 1/6 * b2) * s - 1/12 * s^2) + 1/3 * floor((b2)/3)) - 1/3 * floor((2 + b2)/3)) - 1/2 * floor((b2 + s)/2)) + 1/3 * floor((2b2 + s)/3)) - 1/3 * floor((1 + 2b2 + s)/3))"
        },
        {
            "domain": [
                {
                    "quantifiers": {
                        "e0": "floor((-1 + b2)/4)"
                    },
                    "linear conditions": [
                        "b1 == 1",
                        "2 * s == 1 + b2",
                        "4 * e0 == -1 + b2",
                        "b2 >= 5"
                    ]
                }
            ],
            "formula": "((1/4 - 1/4 * b2) + floor((b2)/3))"
        },
        {
            "domain": [
                {
                    "quantifiers": {
                        "e0": "floor((b2)/4)",
                        "e1": "floor((-2 + b2)/4)",
                        "e2": "floor((-1 + b1)/4)",
                        "e3": "floor((-1 + b2)/4)"
                    },
                    "linear conditions": [
                        "4 * e2 == -1 + b1",
                        "4 * e3 == -1 + b2",
                        "b1 >= 2",
                        "b2 >= b1",
                        "s >= 1 + b1 + b2",
                        "4 * e0 >= -3 + b2",
                        "4 * e0 <= -1 + b2",
                        "4 * e1 >= -5 + b2",
                        "4 * e1 <= -3 + b2"
                    ]
                },
                {
                    "quantifiers": {
                        "e0": "floor((b2)/4)",
                        "e1": "floor((-2 + b2)/4)",
                        "e2": "floor((-1 + b2)/4)",
                        "e3": "floor((-2 + b1 + b2)/4)"
                    },
                    "linear conditions": [
                        "s == b1 + b2",
                        "4 * e2 == -1 + b2",
                        "4 * e3 == -2 + b1 + b2",
                        "b1 >= 2",
                        "b2 >= b1",
                        "4 * e0 >= -3 + b2",
                        "4 * e0 <= -1 + b2",
                        "4 * e1 >= -5 + b2",
                        "4 * e1 <= -3 + b2"
                    ]
                },
                {
                    "quantifiers": {
                        "e0": "floor((b2)/4)",
                        "e1": "floor((-2 + b2)/4)",
                        "e2": "floor((-1 + b2)/4)",
                        "e3": "floor((-2 + b1 + b2)/4)"
                    },
                    "linear conditions": [
                        "s == -1 + b1 + b2",
                        "4 * e2 == -1 + b2",
                        "4 * e3 == -2 + b1 + b2",
                        "b1 >= 3",
                        "b2 >= b1",
                        "4 * e0 >= -3 + b2",
                        "4 * e0 <= -1 + b2",
                        "4 * e1 >= -5 + b2",
                        "4 * e1 <= -3 + b2"
                    ]
                }
            ],
            "formula": "((((((3/16 - 13/48 * b1 - 1/24 * b1^2) + (-13/48 + 3/8 * b1 - 1/48 * b1^2) * b2 + (1/48 + 1/48 * b1) * b2^2) + (2/3 - 2/3 * b2) * floor((b1)/3)) + (1/3 - 1/3 * b2) * floor((1 + b1)/3)) + ((2/3 - 1/3 * b1) + floor((b1)/3)) * floor((b2)/3)) + (((1/3 - 2/3 * b1) + floor((b1)/3)) + floor((1 + b1)/3)) * floor((1 + b2)/3))"
        },
        {
            "domain": [
                {
                    "quantifiers": {
                        "e0": "floor((-1 + b2)/4)"
                    },
                    "linear conditions": [
                        "b1 == 1",
                        "4 * e0 == -1 + b2",
                        "2 * s >= 3 + b2",
                        "s <= -2 + b2"
                    ]
                }
            ],
            "formula": "((((((-1/8 + 7/12 * b2 - 1/8 * b2^2) + (1/2 + 1/3 * b2) * s - 1/6 * s^2) + 1/3 * floor((b2)/3)) - 1/3 * floor((1 + b2)/3)) - 2/3 * floor((2b2 + s)/3)) - 1/3 * floor((2 + 2b2 + s)/3))"
        },
        {
            "domain": [
                {
                    "quantifiers": {
                        "e0": "floor((-3 + b2)/4)"
                    },
                    "linear conditions": [
                        "b1 == 0",
                        "4 * e0 == -3 + b2",
                        "b2 >= 1",
                        "s >= b2"
                    ]
                },
                {
                    "quantifiers": {
                        "e0": "floor((-3 + b2)/4)"
                    },
                    "linear conditions": [
                        "b1 == 0",
                        "s == -1 + b2",
                        "4 * e0 == -3 + b2",
                        "b2 >= 3"
                    ]
                }
            ],
            "formula": "(((3/16 - 1/8 * b2 + 1/48 * b2^2) + 1/3 * floor((b2)/3)) - 1/3 * floor((2 + b2)/3))"
        },
        {
            "domain": [
                {
                    "quantifiers": {
                        "e0": "floor((b2)/4)",
                        "e1": "floor((-2 + b2)/4)",
                        "e2": "floor((-1 + b2)/4)",
                        "e3": "floor((-1 + b1)/4)",
                        "e4": "floor((-3 + b2)/4)"
                    },
                    "linear conditions": [
                        "4 * e3 == -1 + b1",
                        "4 * e4 == -3 + b2",
                        "b1 >= 2",
                        "b2 >= 2 + b1",
                        "s >= 1 + b1 + b2",
                        "4 * e0 >= -3 + b2",
                        "4 * e0 <= -1 + b2",
                        "4 * e1 >= -5 + b2",
                        "4 * e1 <= -3 + b2",
                        "4 * e2 >= -4 + b2",
                        "4 * e2 <= -2 + b2"
                    ]
                },
                {
                    "quantifiers": {
                        "e0": "floor((-2 + b1 + b2)/4)",
                        "e1": "floor((b2)/4)",
                        "e2": "floor((-2 + b2)/4)",
                        "e3": "floor((-3 + b2)/4)",
                        "e4": "floor((b1 + b2)/4)"
                    },
                    "linear conditions": [
                        "s == b1 + b2",
                        "4 * e3 == -3 + b2",
                        "4 * e4 == b1 + b2",
                        "b1 >= 2",
                        "b2 >= 2 + b1",
                        "4 * e0 >= -5 + b1 + b2",
                        "4 * e0 <= -3 + b1 + b2",
                        "4 * e1 >= -3 + b2",
                        "4 * e1 <= -1 + b2",
                        "4 * e2 >= -5 + b2",
                        "4 * e2 <= -3 + b2"
                    ]
                },
                {
                    "quantifiers": {
                        "e0": "floor((-2 + b1 + b2)/4)",
                        "e1": "floor((b2)/4)",
                        "e2": "floor((-2 + b2)/4)",
                        "e3": "floor((-3 + b2)/4)",
                        "e4": "floor((-4 + b1 + b2)/4)"
                    },
                    "linear conditions": [
                        "s == -1 + b1 + b2",
                        "4 * e3 == -3 + b2",
                        "4 * e4 == -4 + b1 + b2",
                        "b1 >= 3",
                        "b2 >= 2 + b1",
                        "4 * e0 >= -5 + b1 + b2",
                        "4 * e0 <= -3 + b1 + b2",
                        "4 * e1 >= -3 + b2",
                        "4 * e1 <= -1 + b2",
                        "4 * e2 >= -5 + b2",
                        "4 * e2 <= -3 + b2"
                    ]
                }
            ],
            "formula": "((((((11/16 - 13/48 * b1 - 1/24 * b1^2) + (-13/48 + 3/8 * b1 - 1/48 * b1^2) * b2 + (1/48 + 1/48 * b1) * b2^2) + (2/3 - 2/3 * b2) * floor((b1)/3)) + (1/3 - 1/3 * b2) * floor((1 + b1)/3)) + ((2/3 - 1/3 * b1) + floor((b1)/3)) * floor((b2)/3)) + (((1/3 - 2/3 * b1) + floor((b1)/3)) + floor((1 + b1)/3)) * floor((1 + b2)/3))"
        },
        {
            "domain": [
                {
                    "quantifiers": {
                        "e0": "floor((-1 + b2)/4)",
                        "e1": "floor((-3 + b2)/4)"
                    },
                    "linear conditions": [
                        "b1 == 1",
                        "4 * e1 == -3 + b2",
                        "b2 >= 3",
                        "s >= 2 + b2",
                        "4 * e0 >= -4 + b2",
                        "4 * e0 <= -2 + b2"
                    ]
                },
                {
                    "quantifiers": {
                        "e0": "floor((-1 + b2)/4)",
                        "e1": "floor((1 + b2)/4)"
                    },
                    "linear conditions": [
                        "b1 == 1",
                        "s == 1 + b2",
                        "4 * e1 == 1 + b2",
                        "b2 >= 3",
                        "4 * e0 >= -4 + b2",
                        "4 * e0 <= -2 + b2"
                    ]
                },
                {
                    "quantifiers": {
                        "e0": "floor((-1 + b2)/4)",
                        "e1": "floor((-3 + b2)/4)"
                    },
                    "linear conditions": [
                        "b1 == 1",
                        "s == b2",
                        "4 * e1 == -3 + b2",
                        "b2 >= 3",
                        "4 * e0 >= -4 + b2",
                        "4 * e0 <= -2 + b2"
                    ]
                },
                {
                    "quantifiers": {
                        "e0": "floor((-1 + b2)/4)",
                        "e1": "floor((-3 + b2)/4)"
                    },
                    "linear conditions": [
                        "b1 == 1",
                        "s == -1 + b2",
                        "4 * e1 == -3 + b2",
                        "b2 >= 5",
                        "4 * e0 >= -4 + b2",
                        "4 * e0 <= -2 + b2"
                    ]
                }
            ],
            "formula": "(((3/8 + 1/12 * b2 + 1/24 * b2^2) + 1/3 * floor((b2)/3)) - 1/3 * floor((1 + b2)/3))"
        },
        {
            "domain": [
                {
                    "quantifiers": {
                        "e0": "floor((b2)/4)",
                        "e1": "floor((-2 + b2)/4)",
                        "e2": "floor((-1 + b1)/4)",
                        "e3": "floor((-3 + b1)/4)",
                        "e4": "floor((-1 + b2)/4)"
                    },
                    "linear conditions": [
                        "4 * e3 == -3 + b1",
                        "4 * e4 == -1 + b2",
                        "b1 >= 2",
                        "b2 >= b1",
                        "s >= 1 + b1 + b2",
                        "4 * e0 >= -3 + b2",
                        "4 * e0 <= -1 + b2",
                        "4 * e1 >= -5 + b2",
                        "4 * e1 <= -3 + b2",
                        "4 * e2 >= -4 + b1",
                        "4 * e2 <= -2 + b1"
                    ]
                },
                {
                    "quantifiers": {
                        "e0": "floor((b2)/4)",
                        "e1": "floor((-2 + b2)/4)",
                        "e2": "floor((-1 + b2)/4)",
                        "e3": "floor((-1 + b1)/4)",
                        "e4": "floor((-3 + b1)/4)",
                        "e5": "floor((-3 + b2)/4)"
                    },
                    "linear conditions": [
                        "4 * e4 == -3 + b1",
                        "4 * e5 == -3 + b2",
                        "b1 >= 2",
                        "b2 >= b1",
                        "s >= 1 + b1 + b2",
                        "4 * e0 >= -3 + b2",
                        "4 * e0 <= -1 + b2",
                        "4 * e1 >= -5 + b2",
                        "4 * e1 <= -3 + b2",
                        "4 * e2 >= -4 + b2",
                        "4 * e2 <= -2 + b2",
                        "4 * e3 >= -4 + b1",
                        "4 * e3 <= -2 + b1"
                    ]
                },
                {
                    "quantifiers": {
                        "e0": "floor((b2)/4)",
                        "e1": "floor((-2 + b2)/4)",
                        "e2": "floor((-1 + b2)/4)",
                        "e3": "floor((-3 + b2)/4)",
                        "e4": "floor((-2 + b1 + b2)/4)"
                    },
                    "linear conditions": [
                        "s == b1 + b2",
                        "4 * e3 == -3 + b2",
                        "4 * e4 == -2 + b1 + b2",
                        "b1 >= 2",
                        "b2 >= b1",
                        "4 * e0 >= -3 + b2",
                        "4 * e0 <= -1 + b2",
                        "4 * e1 >= -5 + b2",
                        "4 * e1 <= -3 + b2",
                        "4 * e2 >= -4 + b2",
                        "4 * e2 <= -2 + b2"
                    ]
                },
                {
                    "quantifiers": {
                        "e0": "floor((-2 + b1 + b2)/4)",
                        "e1": "floor((b2)/4)",
                        "e2": "floor((-2 + b2)/4)",
                        "e3": "floor((-3 + b2)/4)",
                        "e4": "floor((-1 + b2)/4)",
                        "e5": "floor((b1 + b2)/4)"
                    },
                    "linear conditions": [
                        "s == b1 + b2",
                        "4 * e4 == -1 + b2",
                        "4 * e5 == b1 + b2",
                        "b1 >= 2",
                        "b2 >= b1",
                        "4 * e0 >= -5 + b1 + b2",
                        "4 * e0 <= -3 + b1 + b2",
                        "4 * e1 >= -3 + b2",
                        "4 * e1 <= -1 + b2",
                        "4 * e2 >= -5 + b2",
                        "4 * e2 <= -3 + b2",
                        "4 * e3 >= -6 + b2",
                        "4 * e3 <= -4 + b2"
                    ]
                },
                {
                    "quantifiers": {
                        "e0": "floor((-2 + b1 + b2)/4)",
                        "e1": "floor((b2)/4)",
                        "e2": "floor((-2 + b2)/4)",
                        "e3": "floor((-3 + b2)/4)",
                        "e4": "floor((-1 + b2)/4)",
                        "e5": "floor((-4 + b1 + b2)/4)"
                    },
                    "linear conditions": [
                        "s == -1 + b1 + b2",
                        "4 * e4 == -1 + b2",
                        "4 * e5 == -4 + b1 + b2",
                        "b1 >= 3",
                        "b2 >= b1",
                        "4 * e0 >= -5 + b1 + b2",
                        "4 * e0 <= -3 + b1 + b2",
                        "4 * e1 >= -3 + b2",
                        "4 * e1 <= -1 + b2",
                        "4 * e2 >= -5 + b2",
                        "4 * e2 <= -3 + b2",
                        "4 * e3 >= -6 + b2",
                        "4 * e3 <= -4 + b2"
                    ]
                },
                {
                    "quantifiers": {
                        "e0": "floor((b2)/4)",
                        "e1": "floor((-2 + b2)/4)",
                        "e2": "floor((-1 + b2)/4)",
                        "e3": "floor((-3 + b2)/4)",
                        "e4": "floor((-2 + b1 + b2)/4)"
                    },
                    "linear conditions": [
                        "s == -1 + b1 + b2",
                        "4 * e3 == -3 + b2",
                        "4 * e4 == -2 + b1 + b2",
                        "b1 >= 3",
                        "b2 >= b1",
                        "4 * e0 >= -3 + b2",
                        "4 * e0 <= -1 + b2",
                        "4 * e1 >= -5 + b2",
                        "4 * e1 <= -3 + b2",
                        "4 * e2 >= -4 + b2",
                        "4 * e2 <= -2 + b2"
                    ]
                }
            ],
            "formula": "((((((7/16 - 13/48 * b1 - 1/24 * b1^2) + (-13/48 + 3/8 * b1 - 1/48 * b1^2) * b2 + (1/48 + 1/48 * b1) * b2^2) + (2/3 - 2/3 * b2) * floor((b1)/3)) + (1/3 - 1/3 * b2) * floor((1 + b1)/3)) + ((2/3 - 1/3 * b1) + floor((b1)/3)) * floor((b2)/3)) + (((1/3 - 2/3 * b1) + floor((b1)/3)) + floor((1 + b1)/3)) * floor((1 + b2)/3))"
        },
        {
            "domain": [
                {
                    "quantifiers": {
                        "e0": "floor((-2 + b2)/4)"
                    },
                    "linear conditions": [
                        "b1 == 0",
                        "2 * s == b2",
                        "4 * e0 == -2 + b2",
                        "b2 >= 4"
                    ]
                }
            ],
            "formula": "((1/2 - 1/4 * b2) + floor((b2)/3))"
        },
        {
            "domain": [
                {
                    "quantifiers": {
                        "e0": "floor((-3 + b2)/4)",
                        "e1": "floor((b2)/4)"
                    },
                    "linear conditions": [
                        "b1 == 0",
                        "4 * e1 == b2",
                        "b2 >= 1",
                        "s >= 1 + b2",
                        "4 * e0 >= -6 + b2",
                        "4 * e0 <= -4 + b2"
                    ]
                },
                {
                    "quantifiers": {
                        "e0": "floor((-3 + b2)/4)",
                        "e1": "floor((b2)/4)"
                    },
                    "linear conditions": [
                        "b1 == 0",
                        "s == b2",
                        "4 * e1 == b2",
                        "b2 >= 2",
                        "4 * e0 >= -6 + b2",
                        "4 * e0 <= -4 + b2"
                    ]
                },
                {
                    "quantifiers": {
                        "e0": "floor((-3 + b2)/4)",
                        "e1": "floor((-4 + b2)/4)"
                    },
                    "linear conditions": [
                        "b1 == 0",
                        "s == -1 + b2",
                        "4 * e1 == -4 + b2",
                        "b2 >= 4",
                        "4 * e0 >= -6 + b2",
                        "4 * e0 <= -4 + b2"
                    ]
                }
            ],
            "formula": "((1/48 * b2^2 + 1/3 * floor((b2)/3)) - 1/3 * floor((2 + b2)/3))"
        },
        {
            "domain": [
                {
                    "quantifiers": {
                        "e0": "floor((-1 + b2)/4)",
                        "e1": "floor((-3 + b2)/4)",
                        "e2": "floor((1 + b2)/4)",
                        "e3": "floor((b2)/4)"
                    },
                    "linear conditions": [
                        "b1 == 1",
                        "4 * e3 == b2",
                        "b2 >= 1",
                        "s >= 1 + b2",
                        "4 * e0 >= -4 + b2",
                        "4 * e0 <= -2 + b2",
                        "4 * e1 >= -6 + b2",
                        "4 * e1 <= -4 + b2",
                        "4 * e2 >= -2 + b2",
                        "4 * e2 <= b2"
                    ]
                },
                {
                    "quantifiers": {
                        "e0": "floor((-1 + b2)/4)",
                        "e1": "floor((-3 + b2)/4)",
                        "e2": "floor((1 + b2)/4)",
                        "e3": "floor((-2 + b2)/4)"
                    },
                    "linear conditions": [
                        "b1 == 1",
                        "4 * e3 == -2 + b2",
                        "b2 >= 1",
                        "s >= 1 + b2",
                        "4 * e0 >= -4 + b2",
                        "4 * e0 <= -2 + b2",
                        "4 * e1 >= -6 + b2",
                        "4 * e1 <= -4 + b2",
                        "4 * e2 >= -2 + b2",
                        "4 * e2 <= b2"
                    ]
                },
                {
                    "quantifiers": {
                        "e0": "floor((-1 + b2)/4)",
                        "e1": "floor((-3 + b2)/4)",
                        "e2": "floor((b2)/4)"
                    },
                    "linear conditions": [
                        "b1 == 1",
                        "s == b2",
                        "4 * e2 == b2",
                        "b2 >= 2",
                        "4 * e0 >= -4 + b2",
                        "4 * e0 <= -2 + b2",
                        "4 * e1 >= -6 + b2",
                        "4 * e1 <= -4 + b2"
                    ]
                },
                {
                    "quantifiers": {
                        "e0": "floor((-1 + b2)/4)",
                        "e1": "floor((-3 + b2)/4)",
                        "e2": "floor((-2 + b2)/4)"
                    },
                    "linear conditions": [
                        "b1 == 1",
                        "s == b2",
                        "4 * e2 == -2 + b2",
                        "b2 >= 2",
                        "4 * e0 >= -4 + b2",
                        "4 * e0 <= -2 + b2",
                        "4 * e1 >= -6 + b2",
                        "4 * e1 <= -4 + b2"
                    ]
                },
                {
                    "quantifiers": {
                        "e0": "floor((-1 + b2)/4)",
                        "e1": "floor((-3 + b2)/4)",
                        "e2": "floor((-4 + b2)/4)"
                    },
                    "linear conditions": [
                        "b1 == 1",
                        "s == -1 + b2",
                        "4 * e2 == -4 + b2",
                        "b2 >= 4",
                        "4 * e0 >= -4 + b2",
                        "4 * e0 <= -2 + b2",
                        "4 * e1 >= -6 + b2",
                        "4 * e1 <= -4 + b2"
                    ]
                },
                {
                    "quantifiers": {
                        "e0": "floor((-1 + b2)/4)",
                        "e1": "floor((-3 + b2)/4)",
                        "e2": "floor((-2 + b2)/4)"
                    },
                    "linear conditions": [
                        "b1 == 1",
                        "s == -1 + b2",
                        "4 * e2 == -2 + b2",
                        "b2 >= 4",
                        "4 * e0 >= -4 + b2",
                        "4 * e0 <= -2 + b2",
                        "4 * e1 >= -6 + b2",
                        "4 * e1 <= -4 + b2"
                    ]
                }
            ],
            "formula": "(((1/12 * b2 + 1/24 * b2^2) + 1/3 * floor((b2)/3)) - 1/3 * floor((1 + b2)/3))"
        },
        {
            "domain": [
                {
                    "quantifiers": {
                        "e0": "floor((b2)/4)",
                        "e1": "floor((-2 + b2)/4)",
                        "e2": "floor((-1 + b2)/4)",
                        "e3": "floor((-1 + b1)/4)",
                        "e4": "floor((-3 + b1)/4)",
                        "e5": "floor((-2 + b1)/4)",
                        "e6": "floor((-3 + b2)/4)"
                    },
                    "linear conditions": [
                        "4 * e5 == -2 + b1",
                        "4 * e6 == -3 + b2",
                        "b1 >= 2",
                        "b2 >= 1 + b1",
                        "s >= 1 + b1 + b2",
                        "4 * e0 >= -3 + b2",
                        "4 * e0 <= -1 + b2",
                        "4 * e1 >= -5 + b2",
                        "4 * e1 <= -3 + b2",
                        "4 * e2 >= -4 + b2",
                        "4 * e2 <= -2 + b2",
                        "4 * e3 >= -4 + b1",
                        "4 * e3 <= -2 + b1",
                        "4 * e4 >= -6 + b1",
                        "4 * e4 <= -4 + b1"
                    ]
                },
                {
                    "quantifiers": {
                        "e0": "floor((-2 + b1 + b2)/4)",
                        "e1": "floor((b1 + b2)/4)",
                        "e2": "floor((-3 + b2)/4)",
                        "e3": "floor((-1 + b1 + b2)/4)"
                    },
                    "linear conditions": [
                        "s == b1 + b2",
                        "4 * e2 == -3 + b2",
                        "4 * e3 == -1 + b1 + b2",
                        "b1 >= 2",
                        "b2 >= 1 + b1",
                        "4 * e0 >= -5 + b1 + b2",
                        "4 * e0 <= -3 + b1 + b2",
                        "4 * e1 >= -3 + b1 + b2",
                        "4 * e1 <= -1 + b1 + b2"
                    ]
                },
                {
                    "quantifiers": {
                        "e0": "floor((-2 + b1 + b2)/4)",
                        "e1": "floor((-4 + b1 + b2)/4)",
                        "e2": "floor((-3 + b2)/4)",
                        "e3": "floor((-1 + b1 + b2)/4)"
                    },
                    "linear conditions": [
                        "s == -1 + b1 + b2",
                        "4 * e2 == -3 + b2",
                        "4 * e3 == -1 + b1 + b2",
                        "b1 >= 3",
                        "b2 >= 1 + b1",
                        "4 * e0 >= -5 + b1 + b2",
                        "4 * e0 <= -3 + b1 + b2",
                        "4 * e1 >= -7 + b1 + b2",
                        "4 * e1 <= -5 + b1 + b2"
                    ]
                }
            ],
            "formula": "((((((-1/16 - 7/48 * b1 - 1/24 * b1^2) + (-11/24 + 3/8 * b1 - 1/48 * b1^2) * b2 + (1/48 + 1/48 * b1) * b2^2) + (2/3 - 2/3 * b2) * floor((b1)/3)) + (1/3 - 1/3 * b2) * floor((1 + b1)/3)) + ((2/3 - 1/3 * b1) + floor((b1)/3)) * floor((b2)/3)) + (((1/3 - 2/3 * b1) + floor((b1)/3)) + floor((1 + b1)/3)) * floor((1 + b2)/3))"
        },
        {
            "domain": [
                {
                    "quantifiers": {
                        "e0": "floor((-1 + b2)/4)",
                        "e1": "floor((b2)/4)",
                        "e2": "floor((-2 + b2)/4)"
                    },
                    "linear conditions": [
                        "b1 == 0",
                        "4 * e2 == -2 + b2",
                        "2 * s >= 2 + b2",
                        "s <= -2 + b2",
                        "4 * e0 <= -2 + b2",
                        "4 * e0 >= -4 + b2",
                        "4 * e1 <= -1 + b2",
                        "4 * e1 >= -3 + b2"
                    ]
                }
            ],
            "formula": "(((((((1/4 + 5/12 * b2 - 1/16 * b2^2) + (1/12 + 1/6 * b2) * s - 1/12 * s^2) + 1/3 * floor((b2)/3)) - 1/3 * floor((2 + b2)/3)) - 1/2 * floor((b2 + s)/2)) + 1/3 * floor((2b2 + s)/3)) - 1/3 * floor((1 + 2b2 + s)/3))"
        },
        {
            "domain": [
                {
                    "quantifiers": {
                        "e0": "floor((b2)/4)",
                        "e1": "floor((-2 + b2)/4)",
                        "e2": "floor((1 + b2)/4)"
                    },
                    "linear conditions": [
                        "b1 == 2",
                        "s == 1 + b2",
                        "4 * e2 == 1 + b2",
                        "b2 >= 3",
                        "4 * e0 <= -1 + b2",
                        "4 * e0 >= -3 + b2",
                        "4 * e1 <= -3 + b2",
                        "4 * e1 >= -5 + b2"
                    ]
                }
            ],
            "formula": "(-3/16 - 1/8 * b2 + 1/16 * b2^2)"
        },
        {
            "domain": [
                {
                    "quantifiers": {
                        "e0": "floor((-3 + b2)/4)",
                        "e1": "floor((b2)/4)",
                        "e2": "floor((-2 + b2)/4)"
                    },
                    "linear conditions": [
                        "b1 == 0",
                        "4 * e2 == -2 + b2",
                        "b2 >= 1",
                        "s >= 1 + b2",
                        "4 * e0 >= -6 + b2",
                        "4 * e0 <= -4 + b2",
                        "4 * e1 >= -3 + b2",
                        "4 * e1 <= -1 + b2"
                    ]
                },
                {
                    "quantifiers": {
                        "e0": "floor((-3 + b2)/4)",
                        "e1": "floor((b2)/4)",
                        "e2": "floor((-2 + b2)/4)"
                    },
                    "linear conditions": [
                        "b1 == 0",
                        "s == b2",
                        "4 * e2 == -2 + b2",
                        "b2 >= 2",
                        "4 * e0 >= -6 + b2",
                        "4 * e0 <= -4 + b2",
                        "4 * e1 >= -3 + b2",
                        "4 * e1 <= -1 + b2"
                    ]
                },
                {
                    "quantifiers": {
                        "e0": "floor((-3 + b2)/4)",
                        "e1": "floor((-4 + b2)/4)",
                        "e2": "floor((-2 + b2)/4)"
                    },
                    "linear conditions": [
                        "b1 == 0",
                        "s == -1 + b2",
                        "4 * e2 == -2 + b2",
                        "b2 >= 4",
                        "4 * e0 >= -6 + b2",
                        "4 * e0 <= -4 + b2",
                        "4 * e1 >= -7 + b2",
                        "4 * e1 <= -5 + b2"
                    ]
                }
            ],
            "formula": "(((1/4 + 1/48 * b2^2) + 1/3 * floor((b2)/3)) - 1/3 * floor((2 + b2)/3))"
        },
        {
            "domain": [
                {
                    "quantifiers": {
                        "e0": "floor((b2)/4)",
                        "e1": "floor((-2 + b2)/4)",
                        "e2": "floor((-1 + b1)/4)",
                        "e3": "floor((-3 + b1)/4)",
                        "e4": "floor((b1)/4)",
                        "e5": "floor((-1 + b2)/4)"
                    },
                    "linear conditions": [
                        "4 * e4 == b1",
                        "4 * e5 == -1 + b2",
                        "b1 >= 2",
                        "b2 >= 1 + b1",
                        "s >= 1 + b1 + b2",
                        "4 * e0 >= -3 + b2",
                        "4 * e0 <= -1 + b2",
                        "4 * e1 >= -5 + b2",
                        "4 * e1 <= -3 + b2",
                        "4 * e2 >= -4 + b1",
                        "4 * e2 <= -2 + b1",
                        "4 * e3 >= -6 + b1",
                        "4 * e3 <= -4 + b1"
                    ]
                },
                {
                    "quantifiers": {
                        "e0": "floor((-2 + b1 + b2)/4)",
                        "e1": "floor((b1 + b2)/4)",
                        "e2": "floor((-3 + b2)/4)",
                        "e3": "floor((-1 + b2)/4)",
                        "e4": "floor((-1 + b1 + b2)/4)"
                    },
                    "linear conditions": [
                        "s == b1 + b2",
                        "4 * e3 == -1 + b2",
                        "4 * e4 == -1 + b1 + b2",
                        "b1 >= 2",
                        "b2 >= 1 + b1",
                        "4 * e0 >= -5 + b1 + b2",
                        "4 * e0 <= -3 + b1 + b2",
                        "4 * e1 >= -3 + b1 + b2",
                        "4 * e1 <= -1 + b1 + b2",
                        "4 * e2 >= -6 + b2",
                        "4 * e2 <= -4 + b2"
                    ]
                },
                {
                    "quantifiers": {
                        "e0": "floor((-2 + b1 + b2)/4)",
                        "e1": "floor((-4 + b1 + b2)/4)",
                        "e2": "floor((-3 + b2)/4)",
                        "e3": "floor((-1 + b2)/4)",
                        "e4": "floor((-1 + b1 + b2)/4)"
                    },
                    "linear conditions": [
                        "s == -1 + b1 + b2",
                        "4 * e3 == -1 + b2",
                        "4 * e4 == -1 + b1 + b2",
                        "b1 >= 3",
                        "b2 >= 1 + b1",
                        "4 * e0 >= -5 + b1 + b2",
                        "4 * e0 <= -3 + b1 + b2",
                        "4 * e1 >= -7 + b1 + b2",
                        "4 * e1 <= -5 + b1 + b2",
                        "4 * e2 >= -6 + b2",
                        "4 * e2 <= -4 + b2"
                    ]
                }
            ],
            "formula": "((((((7/16 - 7/48 * b1 - 1/24 * b1^2) + (-11/24 + 3/8 * b1 - 1/48 * b1^2) * b2 + (1/48 + 1/48 * b1) * b2^2) + (2/3 - 2/3 * b2) * floor((b1)/3)) + (1/3 - 1/3 * b2) * floor((1 + b1)/3)) + ((2/3 - 1/3 * b1) + floor((b1)/3)) * floor((b2)/3)) + (((1/3 - 2/3 * b1) + floor((b1)/3)) + floor((1 + b1)/3)) * floor((1 + b2)/3))"
        },
        {
            "domain": [
                {
                    "quantifiers": {
                        "e0": "floor((-1 + b2)/4)",
                        "e1": "floor((1 + b2)/4)"
                    },
                    "linear conditions": [
                        "b1 == 1",
                        "2 * s == 1 + b2",
                        "4 * e1 == 1 + b2",
                        "b2 >= 5",
                        "4 * e0 <= -2 + b2",
                        "4 * e0 >= -4 + b2"
                    ]
                }
            ],
            "formula": "((3/4 - 1/4 * b2) + floor((b2)/3))"
        },
        {
            "domain": [
                {
                    "quantifiers": {
                        "e0": "floor((b2)/4)",
                        "e1": "floor((-2 + b2)/4)",
                        "e2": "floor((-1 + b1)/4)",
                        "e3": "floor((-3 + b1)/4)",
                        "e4": "floor((b1)/4)",
                        "e5": "floor((-2 + b1)/4)",
                        "e6": "floor((-1 + b2)/4)"
                    },
                    "linear conditions": [
                        "4 * e5 == -2 + b1",
                        "4 * e6 == -1 + b2",
                        "b1 >= 2",
                        "b2 >= 1 + b1",
                        "s >= 1 + b1 + b2",
                        "4 * e0 >= -3 + b2",
                        "4 * e0 <= -1 + b2",
                        "4 * e1 >= -5 + b2",
                        "4 * e1 <= -3 + b2",
                        "4 * e2 >= -4 + b1",
                        "4 * e2 <= -2 + b1",
                        "4 * e3 >= -6 + b1",
                        "4 * e3 <= -4 + b1",
                        "4 * e4 >= -3 + b1",
                        "4 * e4 <= -1 + b1"
                    ]
                },
                {
                    "quantifiers": {
                        "e0": "floor((b2)/4)",
                        "e1": "floor((-2 + b2)/4)",
                        "e2": "floor((-1 + b2)/4)",
                        "e3": "floor((-1 + b1)/4)",
                        "e4": "floor((-3 + b1)/4)",
                        "e5": "floor((-2 + b1)/4)",
                        "e6": "floor((b1)/4)",
                        "e7": "floor((-3 + b2)/4)"
                    },
                    "linear conditions": [
                        "4 * e6 == b1",
                        "4 * e7 == -3 + b2",
                        "b1 >= 2",
                        "b2 >= 1 + b1",
                        "s >= 1 + b1 + b2",
                        "4 * e0 >= -3 + b2",
                        "4 * e0 <= -1 + b2",
                        "4 * e1 >= -5 + b2",
                        "4 * e1 <= -3 + b2",
                        "4 * e2 >= -4 + b2",
                        "4 * e2 <= -2 + b2",
                        "4 * e3 >= -4 + b1",
                        "4 * e3 <= -2 + b1",
                        "4 * e4 >= -6 + b1",
                        "4 * e4 <= -4 + b1",
                        "4 * e5 >= -5 + b1",
                        "4 * e5 <= -3 + b1"
                    ]
                },
                {
                    "quantifiers": {
                        "e0": "floor((-2 + b1 + b2)/4)",
                        "e1": "floor((b1 + b2)/4)",
                        "e2": "floor((-1 + b1 + b2)/4)",
                        "e3": "floor((-1 + b2)/4)",
                        "e4": "floor((-3 + b1 + b2)/4)"
                    },
                    "linear conditions": [
                        "s == b1 + b2",
                        "4 * e3 == -1 + b2",
                        "4 * e4 == -3 + b1 + b2",
                        "b1 >= 2",
                        "b2 >= 1 + b1",
                        "4 * e0 >= -5 + b1 + b2",
                        "4 * e0 <= -3 + b1 + b2",
                        "4 * e1 >= -3 + b1 + b2",
                        "4 * e1 <= -1 + b1 + b2",
                        "4 * e2 >= -4 + b1 + b2",
                        "4 * e2 <= -2 + b1 + b2"
                    ]
                },
                {
                    "quantifiers": {
                        "e0": "floor((-2 + b1 + b2)/4)",
                        "e1": "floor((b1 + b2)/4)",
                        "e2": "floor((-1 + b1 + b2)/4)",
                        "e3": "floor((-3 + b2)/4)",
                        "e4": "floor((-3 + b1 + b2)/4)"
                    },
                    "linear conditions": [
                        "s == b1 + b2",
                        "4 * e3 == -3 + b2",
                        "4 * e4 == -3 + b1 + b2",
                        "b1 >= 2",
                        "b2 >= 1 + b1",
                        "4 * e0 >= -5 + b1 + b2",
                        "4 * e0 <= -3 + b1 + b2",
                        "4 * e1 >= -3 + b1 + b2",
                        "4 * e1 <= -1 + b1 + b2",
                        "4 * e2 >= -4 + b1 + b2",
                        "4 * e2 <= -2 + b1 + b2"
                    ]
                },
                {
                    "quantifiers": {
                        "e0": "floor((-2 + b1 + b2)/4)",
                        "e1": "floor((-4 + b1 + b2)/4)",
                        "e2": "floor((-1 + b1 + b2)/4)",
                        "e3": "floor((-3 + b2)/4)",
                        "e4": "floor((-3 + b1 + b2)/4)"
                    },
                    "linear conditions": [
                        "s == -1 + b1 + b2",
                        "4 * e3 == -3 + b2",
                        "4 * e4 == -3 + b1 + b2",
                        "b1 >= 3",
                        "b2 >= 1 + b1",
                        "4 * e0 >= -5 + b1 + b2",
                        "4 * e0 <= -3 + b1 + b2",
                        "4 * e1 >= -7 + b1 + b2",
                        "4 * e1 <= -5 + b1 + b2",
                        "4 * e2 >= -4 + b1 + b2",
                        "4 * e2 <= -2 + b1 + b2"
                    ]
                },
                {
                    "quantifiers": {
                        "e0": "floor((-2 + b1 + b2)/4)",
                        "e1": "floor((-4 + b1 + b2)/4)",
                        "e2": "floor((-1 + b1 + b2)/4)",
                        "e3": "floor((-1 + b2)/4)",
                        "e4": "floor((-3 + b1 + b2)/4)"
                    },
                    "linear conditions": [
                        "s == -1 + b1 + b2",
                        "4 * e3 == -1 + b2",
                        "4 * e4 == -3 + b1 + b2",
                        "b1 >= 3",
                        "b2 >= 1 + b1",
                        "4 * e0 >= -5 + b1 + b2",
                        "4 * e0 <= -3 + b1 + b2",
                        "4 * e1 >= -7 + b1 + b2",
                        "4 * e1 <= -5 + b1 + b2",
                        "4 * e2 >= -4 + b1 + b2",
                        "4 * e2 <= -2 + b1 + b2"
                    ]
                }
            ],
            "formula": "((((((3/16 - 7/48 * b1 - 1/24 * b1^2) + (-11/24 + 3/8 * b1 - 1/48 * b1^2) * b2 + (1/48 + 1/48 * b1) * b2^2) + (2/3 - 2/3 * b2) * floor((b1)/3)) + (1/3 - 1/3 * b2) * floor((1 + b1)/3)) + ((2/3 - 1/3 * b1) + floor((b1)/3)) * floor((b2)/3)) + (((1/3 - 2/3 * b1) + floor((b1)/3)) + floor((1 + b1)/3)) * floor((1 + b2)/3))"
        },
        {
            "domain": [
                {
                    "quantifiers": {
                        "e0": "floor((-1 + b2)/4)",
                        "e1": "floor((-3 + b2)/4)"
                    },
                    "linear conditions": [
                        "b1 == 1",
                        "4 * e1 == -3 + b2",
                        "2 * s >= 3 + b2",
                        "s <= -2 + b2",
                        "4 * e0 <= -2 + b2",
                        "4 * e0 >= -4 + b2"
                    ]
                }
            ],
            "formula": "((((((3/8 + 7/12 * b2 - 1/8 * b2^2) + (1/2 + 1/3 * b2) * s - 1/6 * s^2) + 1/3 * floor((b2)/3)) - 1/3 * floor((1 + b2)/3)) - 2/3 * floor((2b2 + s)/3)) - 1/3 * floor((2 + 2b2 + s)/3))"
        },
        {
            "domain": [
                {
                    "quantifiers": {
                        "e0": "floor((b2)/4)",
                        "e1": "floor((-1 + b1)/2)",
                        "e2": "floor((-2 + b2)/4)"
                    },
                    "linear conditions": [
                        "2 * e1 == -1 + b1",
                        "4 * e2 == -2 + b2",
                        "b1 >= 2",
                        "b2 >= b1",
                        "s >= 1 + b1 + b2",
                        "4 * e0 >= -3 + b2",
                        "4 * e0 <= -1 + b2"
                    ]
                },
                {
                    "quantifiers": {
                        "e0": "floor((-2 + b1)/4)",
                        "e1": "floor((b1)/4)",
                        "e2": "floor((-1 + b1)/2)",
                        "e3": "floor((b2)/4)"
                    },
                    "linear conditions": [
                        "2 * e2 == -1 + b1",
                        "4 * e3 == b2",
                        "b1 >= 2",
                        "b2 >= b1",
                        "s >= 1 + b1 + b2",
                        "4 * e0 >= -5 + b1",
                        "4 * e0 <= -3 + b1",
                        "4 * e1 >= -3 + b1",
                        "4 * e1 <= -1 + b1"
                    ]
                },
                {
                    "quantifiers": {
                        "e0": "floor((-2 + b1 + b2)/4)",
                        "e1": "floor((b1 + b2)/4)",
                        "e2": "floor((-3 + b2)/4)",
                        "e3": "floor((-1 + b2)/4)",
                        "e4": "floor((-2 + b2)/4)",
                        "e5": "floor((-1 + b1 + b2)/4)"
                    },
                    "linear conditions": [
                        "s == b1 + b2",
                        "4 * e4 == -2 + b2",
                        "4 * e5 == -1 + b1 + b2",
                        "b1 >= 2",
                        "b2 >= b1",
                        "4 * e0 >= -5 + b1 + b2",
                        "4 * e0 <= -3 + b1 + b2",
                        "4 * e1 >= -3 + b1 + b2",
                        "4 * e1 <= -1 + b1 + b2",
                        "4 * e2 >= -6 + b2",
                        "4 * e2 <= -4 + b2",
                        "4 * e3 >= -4 + b2",
                        "4 * e3 <= -2 + b2"
                    ]
                },
                {
                    "quantifiers": {
                        "e0": "floor((-2 + b1)/4)",
                        "e1": "floor((-2 + b1 + b2)/4)",
                        "e2": "floor((b1 + b2)/4)",
                        "e3": "floor((-3 + b2)/4)",
                        "e4": "floor((-1 + b2)/4)",
                        "e5": "floor((b2)/4)",
                        "e6": "floor((-1 + b1 + b2)/4)"
                    },
                    "linear conditions": [
                        "s == b1 + b2",
                        "4 * e5 == b2",
                        "4 * e6 == -1 + b1 + b2",
                        "b1 >= 2",
                        "b2 >= b1",
                        "4 * e0 >= -5 + b1",
                        "4 * e0 <= -3 + b1",
                        "4 * e1 >= -5 + b1 + b2",
                        "4 * e1 <= -3 + b1 + b2",
                        "4 * e2 >= -3 + b1 + b2",
                        "4 * e2 <= -1 + b1 + b2",
                        "4 * e3 >= -6 + b2",
                        "4 * e3 <= -4 + b2",
                        "4 * e4 >= -4 + b2",
                        "4 * e4 <= -2 + b2"
                    ]
                },
                {
                    "quantifiers": {
                        "e0": "floor((-2 + b1)/4)",
                        "e1": "floor((-2 + b1 + b2)/4)",
                        "e2": "floor((-4 + b1 + b2)/4)",
                        "e3": "floor((-3 + b2)/4)",
                        "e4": "floor((-1 + b2)/4)",
                        "e5": "floor((b2)/4)",
                        "e6": "floor((-1 + b1 + b2)/4)"
                    },
                    "linear conditions": [
                        "s == -1 + b1 + b2",
                        "4 * e5 == b2",
                        "4 * e6 == -1 + b1 + b2",
                        "b1 >= 3",
                        "b2 >= b1",
                        "4 * e0 >= -5 + b1",
                        "4 * e0 <= -3 + b1",
                        "4 * e1 >= -5 + b1 + b2",
                        "4 * e1 <= -3 + b1 + b2",
                        "4 * e2 >= -7 + b1 + b2",
                        "4 * e2 <= -5 + b1 + b2",
                        "4 * e3 >= -6 + b2",
                        "4 * e3 <= -4 + b2",
                        "4 * e4 >= -4 + b2",
                        "4 * e4 <= -2 + b2"
                    ]
                },
                {
                    "quantifiers": {
                        "e0": "floor((-2 + b1 + b2)/4)",
                        "e1": "floor((b1 + b2)/4)",
                        "e2": "floor((-1 + b1 + b2)/4)",
                        "e3": "floor((-1 + b2)/4)",
                        "e4": "floor((-3 + b2)/4)",
                        "e5": "floor((-2 + b2)/4)",
                        "e6": "floor((-3 + b1 + b2)/4)"
                    },
                    "linear conditions": [
                        "s == b1 + b2",
                        "4 * e5 == -2 + b2",
                        "4 * e6 == -3 + b1 + b2",
                        "b1 >= 2",
                        "b2 >= b1",
                        "4 * e0 >= -5 + b1 + b2",
                        "4 * e0 <= -3 + b1 + b2",
                        "4 * e1 >= -3 + b1 + b2",
                        "4 * e1 <= -1 + b1 + b2",
                        "4 * e2 >= -4 + b1 + b2",
                        "4 * e2 <= -2 + b1 + b2",
                        "4 * e3 >= -4 + b2",
                        "4 * e3 <= -2 + b2",
                        "4 * e4 >= -6 + b2",
                        "4 * e4 <= -4 + b2"
                    ]
                },
                {
                    "quantifiers": {
                        "e0": "floor((-2 + b1 + b2)/4)",
                        "e1": "floor((-4 + b1 + b2)/4)",
                        "e2": "floor((-1 + b1 + b2)/4)",
                        "e3": "floor((-3 + b2)/4)",
                        "e4": "floor((-1 + b2)/4)",
                        "e5": "floor((-2 + b2)/4)",
                        "e6": "floor((-3 + b1 + b2)/4)"
                    },
                    "linear conditions": [
                        "s == -1 + b1 + b2",
                        "4 * e5 == -2 + b2",
                        "4 * e6 == -3 + b1 + b2",
                        "b1 >= 3",
                        "b2 >= b1",
                        "4 * e0 >= -5 + b1 + b2",
                        "4 * e0 <= -3 + b1 + b2",
                        "4 * e1 >= -7 + b1 + b2",
                        "4 * e1 <= -5 + b1 + b2",
                        "4 * e2 >= -4 + b1 + b2",
                        "4 * e2 <= -2 + b1 + b2",
                        "4 * e3 >= -6 + b2",
                        "4 * e3 <= -4 + b2",
                        "4 * e4 >= -4 + b2",
                        "4 * e4 <= -2 + b2"
                    ]
                },
                {
                    "quantifiers": {
                        "e0": "floor((-2 + b1)/4)",
                        "e1": "floor((-2 + b1 + b2)/4)",
                        "e2": "floor((b1 + b2)/4)",
                        "e3": "floor((-1 + b1 + b2)/4)",
                        "e4": "floor((-1 + b2)/4)",
                        "e5": "floor((-3 + b2)/4)",
                        "e6": "floor((b2)/4)",
                        "e7": "floor((-3 + b1 + b2)/4)"
                    },
                    "linear conditions": [
                        "s == b1 + b2",
                        "4 * e6 == b2",
                        "4 * e7 == -3 + b1 + b2",
                        "b1 >= 2",
                        "b2 >= b1",
                        "4 * e0 >= -5 + b1",
                        "4 * e0 <= -3 + b1",
                        "4 * e1 >= -5 + b1 + b2",
                        "4 * e1 <= -3 + b1 + b2",
                        "4 * e2 >= -3 + b1 + b2",
                        "4 * e2 <= -1 + b1 + b2",
                        "4 * e3 >= -4 + b1 + b2",
                        "4 * e3 <= -2 + b1 + b2",
                        "4 * e4 >= -4 + b2",
                        "4 * e4 <= -2 + b2",
                        "4 * e5 >= -6 + b2",
                        "4 * e5 <= -4 + b2"
                    ]
                },
                {
                    "quantifiers": {
                        "e0": "floor((-2 + b1)/4)",
                        "e1": "floor((-2 + b1 + b2)/4)",
                        "e2": "floor((-4 + b1 + b2)/4)",
                        "e3": "floor((-1 + b1 + b2)/4)",
                        "e4": "floor((-3 + b2)/4)",
                        "e5": "floor((-1 + b2)/4)",
                        "e6": "floor((b2)/4)",
                        "e7": "floor((-3 + b1 + b2)/4)"
                    },
                    "linear conditions": [
                        "s == -1 + b1 + b2",
                        "4 * e6 == b2",
                        "4 * e7 == -3 + b1 + b2",
                        "b1 >= 3",
                        "b2 >= b1",
                        "4 * e0 >= -5 + b1",
                        "4 * e0 <= -3 + b1",
                        "4 * e1 >= -5 + b1 + b2",
                        "4 * e1 <= -3 + b1 + b2",
                        "4 * e2 >= -7 + b1 + b2",
                        "4 * e2 <= -5 + b1 + b2",
                        "4 * e3 >= -4 + b1 + b2",
                        "4 * e3 <= -2 + b1 + b2",
                        "4 * e4 >= -6 + b2",
                        "4 * e4 <= -4 + b2",
                        "4 * e5 >= -4 + b2",
                        "4 * e5 <= -2 + b2"
                    ]
                },
                {
                    "quantifiers": {
                        "e0": "floor((-2 + b1 + b2)/4)",
                        "e1": "floor((-4 + b1 + b2)/4)",
                        "e2": "floor((-3 + b2)/4)",
                        "e3": "floor((-1 + b2)/4)",
                        "e4": "floor((-2 + b2)/4)",
                        "e5": "floor((-1 + b1 + b2)/4)"
                    },
                    "linear conditions": [
                        "s == -1 + b1 + b2",
                        "4 * e4 == -2 + b2",
                        "4 * e5 == -1 + b1 + b2",
                        "b1 >= 3",
                        "b2 >= b1",
                        "4 * e0 >= -5 + b1 + b2",
                        "4 * e0 <= -3 + b1 + b2",
                        "4 * e1 >= -7 + b1 + b2",
                        "4 * e1 <= -5 + b1 + b2",
                        "4 * e2 >= -6 + b2",
                        "4 * e2 <= -4 + b2",
                        "4 * e3 >= -4 + b2",
                        "4 * e3 <= -2 + b2"
                    ]
                }
            ],
            "formula": "((((((3/8 - 1/3 * b1 - 1/24 * b1^2) + (-13/48 + 3/8 * b1 - 1/48 * b1^2) * b2 + (1/48 + 1/48 * b1) * b2^2) + (2/3 - 2/3 * b2) * floor((b1)/3)) + (1/3 - 1/3 * b2) * floor((1 + b1)/3)) + ((2/3 - 1/3 * b1) + floor((b1)/3)) * floor((b2)/3)) + (((1/3 - 2/3 * b1) + floor((b1)/3)) + floor((1 + b1)/3)) * floor((1 + b2)/3))"
        },
        {
            "domain": [
                {
                    "quantifiers": {
                        "e0": "floor((-1 + b2)/4)",
                        "e1": "floor((-3 + b2)/4)",
                        "e2": "floor((-2 + b2)/4)"
                    },
                    "linear conditions": [
                        "b1 == 1",
                        "4 * e2 == -2 + b2",
                        "2 * s >= 2 + b2",
                        "s <= -2 + b2",
                        "4 * e0 >= -4 + b2",
                        "4 * e0 <= -2 + b2",
                        "4 * e1 >= -6 + b2",
                        "4 * e1 <= -4 + b2"
                    ]
                },
                {
                    "quantifiers": {
                        "e0": "floor((-1 + b2)/4)",
                        "e1": "floor((-3 + b2)/4)",
                        "e2": "floor((b2)/4)"
                    },
                    "linear conditions": [
                        "b1 == 1",
                        "4 * e2 == b2",
                        "2 * s >= 2 + b2",
                        "s <= -2 + b2",
                        "4 * e0 >= -4 + b2",
                        "4 * e0 <= -2 + b2",
                        "4 * e1 >= -6 + b2",
                        "4 * e1 <= -4 + b2"
                    ]
                }
            ],
            "formula": "((((((7/12 * b2 - 1/8 * b2^2) + (1/2 + 1/3 * b2) * s - 1/6 * s^2) + 1/3 * floor((b2)/3)) - 1/3 * floor((1 + b2)/3)) - 2/3 * floor((2b2 + s)/3)) - 1/3 * floor((2 + 2b2 + s)/3))"
        },
        {
            "domain": [
                {
                    "quantifiers": {
                        "e0": "floor((b2)/4)",
                        "e1": "floor((-2 + b2)/4)",
                        "e2": "floor((1 + b2)/4)",
                        "e3": "floor((-1 + b2)/4)"
                    },
                    "linear conditions": [
                        "b1 == 2",
                        "s == 1 + b2",
                        "4 * e3 == -1 + b2",
                        "b2 >= 3",
                        "4 * e0 <= -1 + b2",
                        "4 * e0 >= -3 + b2",
                        "4 * e1 <= -3 + b2",
                        "4 * e1 >= -5 + b2",
                        "4 * e2 <= b2",
                        "4 * e2 >= -2 + b2"
                    ]
                }
            ],
            "formula": "(1/16 - 1/8 * b2 + 1/16 * b2^2)"
        },
        {
            "domain": [
                {
                    "quantifiers": {},
                    "linear conditions": [
                        "b1 == 1",
                        "b2 == 3",
                        "s == 2"
                    ]
                },
                {
                    "quantifiers": {},
                    "linear conditions": [
                        "b1 == 1",
                        "b2 == 1",
                        "s == 1"
                    ]
                }
            ],
            "formula": "(-5/24 + 11/72 * b2 + 1/24 * b2^2 + 1/72 * b2^3)"
        },
        {
            "domain": [
                {
                    "quantifiers": {
                        "e0": "floor((-1 + b2)/4)",
                        "e1": "floor((b2)/4)",
                        "e2": "floor((-2 + b2)/4)",
                        "e3": "floor((-3 + b2)/4)"
                    },
                    "linear conditions": [
                        "b1 == 0",
                        "4 * e3 == -3 + b2",
                        "2 * s >= 1 + b2",
                        "s <= -2 + b2",
                        "4 * e0 <= -2 + b2",
                        "4 * e0 >= -4 + b2",
                        "4 * e1 <= -1 + b2",
                        "4 * e1 >= -3 + b2",
                        "4 * e2 <= -3 + b2",
                        "4 * e2 >= -5 + b2"
                    ]
                }
            ],
            "formula": "(((((((3/16 + 7/24 * b2 - 1/16 * b2^2) + (1/12 + 1/6 * b2) * s - 1/12 * s^2) + 1/3 * floor((b2)/3)) - 1/3 * floor((2 + b2)/3)) - 1/2 * floor((b2 + s)/2)) + 1/3 * floor((2b2 + s)/3)) - 1/3 * floor((1 + 2b2 + s)/3))"
        },
        {
            "domain": [
                {
                    "quantifiers": {
                        "e0": "floor((-3 + b2)/4)",
                        "e1": "floor((b2)/4)",
                        "e2": "floor((-2 + b2)/4)",
                        "e3": "floor((-1 + b2)/4)"
                    },
                    "linear conditions": [
                        "b1 == 0",
                        "4 * e3 == -1 + b2",
                        "b2 >= 1",
                        "s >= b2",
                        "4 * e0 >= -6 + b2",
                        "4 * e0 <= -4 + b2",
                        "4 * e1 >= -3 + b2",
                        "4 * e1 <= -1 + b2",
                        "4 * e2 >= -5 + b2",
                        "4 * e2 <= -3 + b2"
                    ]
                },
                {
                    "quantifiers": {
                        "e0": "floor((-3 + b2)/4)",
                        "e1": "floor((-4 + b2)/4)",
                        "e2": "floor((-2 + b2)/4)",
                        "e3": "floor((-1 + b2)/4)"
                    },
                    "linear conditions": [
                        "b1 == 0",
                        "s == -1 + b2",
                        "4 * e3 == -1 + b2",
                        "b2 >= 3",
                        "4 * e0 >= -6 + b2",
                        "4 * e0 <= -4 + b2",
                        "4 * e1 >= -7 + b2",
                        "4 * e1 <= -5 + b2",
                        "4 * e2 >= -5 + b2",
                        "4 * e2 <= -3 + b2"
                    ]
                }
            ],
            "formula": "(((7/16 - 1/8 * b2 + 1/48 * b2^2) + 1/3 * floor((b2)/3)) - 1/3 * floor((2 + b2)/3))"
        },
        {
            "domain": [
                {
                    "quantifiers": {
                        "e0": "floor((-2 + b1)/4)",
                        "e1": "floor((b1)/4)",
                        "e2": "floor((b2)/4)"
                    },
                    "linear conditions": [
                        "4 * e1 == b1",
                        "4 * e2 == b2",
                        "4 * s >= b1 + 2 * b2",
                        "s >= b1",
                        "2 * s <= -4 + b1 + b2",
                        "4 * e0 <= -3 + b1",
                        "4 * e0 >= -5 + b1"
                    ]
                }
            ],
            "formula": "((((((((((-1/2 * b1 + 5/8 * b1^2 + 1/24 * b1^3) + (-1/12 + 23/24 * b1 + 5/48 * b1^2) * b2 + (-1/16 + 1/16 * b1) * b2^2 + 1/24 * b2^3) + ((5/12 + 5/12 * b1 - 1/4 * b1^2) + (1/6 - 1/3 * b1) * b2 - 1/4 * b2^2) * s + ((-1/12 + 5/12 * b1) + 1/2 * b2) * s^2 - 1/3 * s^3) + (((2/3 - 2/3 * b1) - 4/3 * b2) - 1/3 * s) * floor((b1)/3)) + (((1/3 - 4/3 * b1) - 5/3 * b2) - 2/3 * s) * floor((1 + b1)/3)) + ((2/3 - 1/3 * b1) + floor((b1)/3)) * floor((b2)/3)) + (((1/3 - 2/3 * b1) + floor((b1)/3)) + floor((1 + b1)/3)) * floor((1 + b2)/3)) - 1/2 * floor((b2 + s)/2)) + (((1/3 - 2/3 * b1) + floor((b1)/3)) + floor((1 + b1)/3)) * floor((2b1 + 2b2 + s)/3)) + ((-1/3 - 1/3 * b1) + floor((1 + b1)/3)) * floor((1 + 2b1 + 2b2 + s)/3))"
        },
        {
            "domain": [
                {
                    "quantifiers": {
                        "e0": "floor((b2)/4)",
                        "e1": "floor((b1)/2)",
                        "e2": "floor((-2 + b2)/4)"
                    },
                    "linear conditions": [
                        "2 * e1 == b1",
                        "4 * e2 == -2 + b2",
                        "4 * s >= b1 + 2 * b2",
                        "s >= b1",
                        "2 * s <= -4 + b1 + b2",
                        "4 * e0 >= -3 + b2",
                        "4 * e0 <= -1 + b2"
                    ]
                }
            ],
            "formula": "((((((((((1/4 - 1/2 * b1 + 5/8 * b1^2 + 1/24 * b1^3) + (-1/12 + 23/24 * b1 + 5/48 * b1^2) * b2 + (-1/16 + 1/16 * b1) * b2^2 + 1/24 * b2^3) + ((5/12 + 5/12 * b1 - 1/4 * b1^2) + (1/6 - 1/3 * b1) * b2 - 1/4 * b2^2) * s + ((-1/12 + 5/12 * b1) + 1/2 * b2) * s^2 - 1/3 * s^3) + (((2/3 - 2/3 * b1) - 4/3 * b2) - 1/3 * s) * floor((b1)/3)) + (((1/3 - 4/3 * b1) - 5/3 * b2) - 2/3 * s) * floor((1 + b1)/3)) + ((2/3 - 1/3 * b1) + floor((b1)/3)) * floor((b2)/3)) + (((1/3 - 2/3 * b1) + floor((b1)/3)) + floor((1 + b1)/3)) * floor((1 + b2)/3)) - 1/2 * floor((b2 + s)/2)) + (((1/3 - 2/3 * b1) + floor((b1)/3)) + floor((1 + b1)/3)) * floor((2b1 + 2b2 + s)/3)) + ((-1/3 - 1/3 * b1) + floor((1 + b1)/3)) * floor((1 + 2b1 + 2b2 + s)/3))"
        },
        {
            "domain": [
                {
                    "quantifiers": {
                        "e0": "floor((-2 + b1)/4)",
                        "e1": "floor((b2)/4)",
                        "e2": "floor((-4 + b1)/4)"
                    },
                    "linear conditions": [
                        "s == -1 + b1",
                        "4 * e1 == b2",
                        "4 * e2 == -4 + b1",
                        "b2 >= 2 + b1",
                        "2 * b2 <= -4 + 3 * b1",
                        "4 * e0 <= -3 + b1",
                        "4 * e0 >= -5 + b1"
                    ]
                }
            ],
            "formula": "((((((-1/2 * b1 + 3/8 * b1^2 - 1/8 * b1^3) + (1/3 - 29/24 * b1 + 13/48 * b1^2) * b2 + (3/16 - 3/16 * b1) * b2^2 + 1/24 * b2^3) + 2/3 * b2 * floor((b1)/3)) + 4/3 * b2 * floor((1 + b1)/3)) + ((b1 - floor((b1)/3)) - 2 * floor((1 + b1)/3)) * floor((b2)/3)) + ((b1 - floor((b1)/3)) - 2 * floor((1 + b1)/3)) * floor((2 + b2)/3))"
        },
        {
            "domain": [
                {
                    "quantifiers": {
                        "e0": "floor((-2 + b1)/4)",
                        "e1": "floor((b2)/4)",
                        "e2": "floor((-2 + b2)/4)",
                        "e3": "floor((-4 + b1)/4)"
                    },
                    "linear conditions": [
                        "s == -1 + b1",
                        "4 * e2 == -2 + b2",
                        "4 * e3 == -4 + b1",
                        "b2 >= 2 + b1",
                        "2 * b2 <= -4 + 3 * b1",
                        "4 * e0 >= -5 + b1",
                        "4 * e0 <= -3 + b1",
                        "4 * e1 <= -1 + b2",
                        "4 * e1 >= -3 + b2"
                    ]
                },
                {
                    "quantifiers": {
                        "e0": "floor((b2)/4)",
                        "e1": "floor((-2 + b2)/4)",
                        "e2": "floor((-2 + b1)/4)"
                    },
                    "linear conditions": [
                        "s == -1 + b1",
                        "4 * e1 == -2 + b2",
                        "4 * e2 == -2 + b1",
                        "b2 >= 2 + b1",
                        "2 * b2 <= -4 + 3 * b1",
                        "4 * e0 <= -1 + b2",
                        "4 * e0 >= -3 + b2"
                    ]
                }
            ],
            "formula": "((((((1/4 - 1/2 * b1 + 3/8 * b1^2 - 1/8 * b1^3) + (1/3 - 29/24 * b1 + 13/48 * b1^2) * b2 + (3/16 - 3/16 * b1) * b2^2 + 1/24 * b2^3) + 2/3 * b2 * floor((b1)/3)) + 4/3 * b2 * floor((1 + b1)/3)) + ((b1 - floor((b1)/3)) - 2 * floor((1 + b1)/3)) * floor((b2)/3)) + ((b1 - floor((b1)/3)) - 2 * floor((1 + b1)/3)) * floor((2 + b2)/3))"
        },
        {
            "domain": [
                {
                    "quantifiers": {
                        "e0": "floor((-2 + b1)/4)",
                        "e1": "floor((b2)/4)",
                        "e2": "floor((-4 + b1)/4)"
                    },
                    "linear conditions": [
                        "s == -2 + b1",
                        "4 * e1 == b2",
                        "4 * e2 == -4 + b1",
                        "b2 >= b1",
                        "2 * b2 <= -8 + 3 * b1",
                        "4 * e0 <= -3 + b1",
                        "4 * e0 >= -5 + b1"
                    ]
                }
            ],
            "formula": "((((((1 - 5/3 * b1 + 19/24 * b1^2 - 1/8 * b1^3) + (3/2 - 29/24 * b1 + 13/48 * b1^2) * b2 + (13/48 - 3/16 * b1) * b2^2 + 1/24 * b2^3) + (1/3 - 1/3 * b2) * floor((b1)/3)) + (-1/3 + 1/3 * b2) * floor((1 + b1)/3)) + (((-1/6 + 2/3 * b2) + floor((b1)/3)) - floor((1 + b1)/3)) * floor((b2)/3) - 1/2 * floor((b2)/3)^2) + ((-1/3 + 1/3 * b2) - floor((b2)/3)) * floor((1 + b2)/3))"
        },
        {
            "domain": [
                {
                    "quantifiers": {
                        "e0": "floor((-2 + b1)/4)",
                        "e1": "floor((b2)/4)",
                        "e2": "floor((-2 + b2)/4)",
                        "e3": "floor((-4 + b1)/4)"
                    },
                    "linear conditions": [
                        "s == -2 + b1",
                        "4 * e2 == -2 + b2",
                        "4 * e3 == -4 + b1",
                        "b2 >= b1",
                        "2 * b2 <= -8 + 3 * b1",
                        "4 * e0 >= -5 + b1",
                        "4 * e0 <= -3 + b1",
                        "4 * e1 <= -1 + b2",
                        "4 * e1 >= -3 + b2"
                    ]
                },
                {
                    "quantifiers": {
                        "e0": "floor((b2)/4)",
                        "e1": "floor((-2 + b2)/4)",
                        "e2": "floor((-2 + b1)/4)"
                    },
                    "linear conditions": [
                        "s == -2 + b1",
                        "4 * e1 == -2 + b2",
                        "4 * e2 == -2 + b1",
                        "b2 >= b1",
                        "2 * b2 <= -8 + 3 * b1",
                        "4 * e0 <= -1 + b2",
                        "4 * e0 >= -3 + b2"
                    ]
                }
            ],
            "formula": "((((((5/4 - 5/3 * b1 + 19/24 * b1^2 - 1/8 * b1^3) + (3/2 - 29/24 * b1 + 13/48 * b1^2) * b2 + (13/48 - 3/16 * b1) * b2^2 + 1/24 * b2^3) + (1/3 - 1/3 * b2) * floor((b1)/3)) + (-1/3 + 1/3 * b2) * floor((1 + b1)/3)) + (((-1/6 + 2/3 * b2) + floor((b1)/3)) - floor((1 + b1)/3)) * floor((b2)/3) - 1/2 * floor((b2)/3)^2) + ((-1/3 + 1/3 * b2) - floor((b2)/3)) * floor((1 + b2)/3))"
        },
        {
            "domain": [
                {
                    "quantifiers": {
                        "e0": "floor((-2 + b1 + b2)/4)",
                        "e1": "floor((b2)/4)",
                        "e2": "floor((-4 + b1 + b2)/4)"
                    },
                    "linear conditions": [
                        "2 * s == -2 + b1 + b2",
                        "4 * e1 == b2",
                        "4 * e2 == -4 + b1 + b2",
                        "b1 >= 4",
                        "b2 >= 2 + b1",
                        "4 * e0 <= -3 + b1 + b2",
                        "4 * e0 >= -5 + b1 + b2"
                    ]
                }
            ],
            "formula": "((((((((-1/6 * b1 - 5/48 * b1^2 - 1/48 * b1^3) + (-1/3 + 1/8 * b1 + 1/48 * b1^2) * b2) + (1/6 * b1 - 1/2 * b2) * floor((b1)/3)) + 1/3 * b1 * floor((1 + b1)/3)) + ((2/3 - 1/3 * b1) + floor((b1)/3)) * floor((b2)/3)) + (((1/3 - 2/3 * b1) + floor((b1)/3)) + floor((1 + b1)/3)) * floor((1 + b2)/3)) + (((-1/3 + 2/3 * b1) - floor((b1)/3)) - floor((1 + b1)/3)) * floor((1 + b1 + b2)/6)) + ((1/3 + 1/3 * b1) - floor((1 + b1)/3)) * floor((5 + b1 + b2)/6))"
        },
        {
            "domain": [
                {
                    "quantifiers": {
                        "e0": "floor((-2 + b1 + b2)/4)",
                        "e1": "floor((b2)/4)",
                        "e2": "floor((-2 + b2)/4)",
                        "e3": "floor((-4 + b1 + b2)/4)"
                    },
                    "linear conditions": [
                        "2 * s == -2 + b1 + b2",
                        "4 * e2 == -2 + b2",
                        "4 * e3 == -4 + b1 + b2",
                        "b1 >= 4",
                        "b2 >= 2 + b1",
                        "4 * e0 >= -5 + b1 + b2",
                        "4 * e0 <= -3 + b1 + b2",
                        "4 * e1 <= -1 + b2",
                        "4 * e1 >= -3 + b2"
                    ]
                },
                {
                    "quantifiers": {
                        "e0": "floor((b2)/4)",
                        "e1": "floor((-2 + b2)/4)",
                        "e2": "floor((-2 + b1 + b2)/4)"
                    },
                    "linear conditions": [
                        "2 * s == -2 + b1 + b2",
                        "4 * e1 == -2 + b2",
                        "4 * e2 == -2 + b1 + b2",
                        "b1 >= 4",
                        "b2 >= 2 + b1",
                        "4 * e0 <= -1 + b2",
                        "4 * e0 >= -3 + b2"
                    ]
                }
            ],
            "formula": "(((((((((1/4 - 13/24 * b1 - 5/48 * b1^2 - 1/48 * b1^3) + (-11/24 + 1/8 * b1 + 1/48 * b1^2) * b2) + (1/6 * b1 - 1/2 * b2) * floor((b1)/3)) + 1/3 * b1 * floor((1 + b1)/3)) + ((2/3 - 1/3 * b1) + floor((b1)/3)) * floor((b2)/3)) + (((1/3 - 2/3 * b1) + floor((b1)/3)) + floor((1 + b1)/3)) * floor((1 + b2)/3)) + 1/2 * floor((1 + 3b1 + b2)/4)) + (((-1/3 + 2/3 * b1) - floor((b1)/3)) - floor((1 + b1)/3)) * floor((1 + b1 + b2)/6)) + ((1/3 + 1/3 * b1) - floor((1 + b1)/3)) * floor((5 + b1 + b2)/6))"
        },
        {
            "domain": [
                {
                    "quantifiers": {
                        "e0": "floor((-2 + b1 + b2)/4)",
                        "e1": "floor((b2)/4)",
                        "e2": "floor((b1 + b2)/4)"
                    },
                    "linear conditions": [
                        "2 * s == b1 + b2",
                        "4 * e1 == b2",
                        "4 * e2 == b1 + b2",
                        "b1 >= 2",
                        "b2 >= 4 + b1",
                        "4 * e0 <= -3 + b1 + b2",
                        "4 * e0 >= -5 + b1 + b2"
                    ]
                }
            ],
            "formula": "((((((((-5/12 * b1 - 3/16 * b1^2 - 1/48 * b1^3) + (-1/4 + 5/24 * b1 + 1/48 * b1^2) * b2) + ((2/3 + 1/6 * b1) - 1/2 * b2) * floor((b1)/3)) + (1/3 + 1/3 * b1) * floor((1 + b1)/3)) + ((2/3 - 1/3 * b1) + floor((b1)/3)) * floor((b2)/3)) + (((1/3 - 2/3 * b1) + floor((b1)/3)) + floor((1 + b1)/3)) * floor((1 + b2)/3)) + ((1/3 + 1/3 * b1) - floor((1 + b1)/3)) * floor((3 + b1 + b2)/6)) + (((-1/3 + 2/3 * b1) - floor((b1)/3)) - floor((1 + b1)/3)) * floor((5 + b1 + b2)/6))"
        },
        {
            "domain": [
                {
                    "quantifiers": {
                        "e0": "floor((-2 + b1 + b2)/4)",
                        "e1": "floor((b2)/4)",
                        "e2": "floor((-2 + b2)/4)",
                        "e3": "floor((b1 + b2)/4)"
                    },
                    "linear conditions": [
                        "2 * s == b1 + b2",
                        "4 * e2 == -2 + b2",
                        "4 * e3 == b1 + b2",
                        "b1 >= 2",
                        "b2 >= 4 + b1",
                        "4 * e0 >= -5 + b1 + b2",
                        "4 * e0 <= -3 + b1 + b2",
                        "4 * e1 <= -1 + b2",
                        "4 * e1 >= -3 + b2"
                    ]
                },
                {
                    "quantifiers": {
                        "e0": "floor((b2)/4)",
                        "e1": "floor((-2 + b2)/4)",
                        "e2": "floor((-2 + b1 + b2)/4)"
                    },
                    "linear conditions": [
                        "2 * s == b1 + b2",
                        "4 * e1 == -2 + b2",
                        "4 * e2 == -2 + b1 + b2",
                        "b1 >= 2",
                        "b2 >= 4 + b1",
                        "4 * e0 <= -1 + b2",
                        "4 * e0 >= -3 + b2"
                    ]
                }
            ],
            "formula": "(((((((((1/4 - 19/24 * b1 - 3/16 * b1^2 - 1/48 * b1^3) + (-3/8 + 5/24 * b1 + 1/48 * b1^2) * b2) + ((2/3 + 1/6 * b1) - 1/2 * b2) * floor((b1)/3)) + (1/3 + 1/3 * b1) * floor((1 + b1)/3)) + ((2/3 - 1/3 * b1) + floor((b1)/3)) * floor((b2)/3)) + (((1/3 - 2/3 * b1) + floor((b1)/3)) + floor((1 + b1)/3)) * floor((1 + b2)/3)) + 1/2 * floor((3 + 3b1 + b2)/4)) + ((1/3 + 1/3 * b1) - floor((1 + b1)/3)) * floor((3 + b1 + b2)/6)) + (((-1/3 + 2/3 * b1) - floor((b1)/3)) - floor((1 + b1)/3)) * floor((5 + b1 + b2)/6))"
        },
        {
            "domain": [
                {
                    "quantifiers": {
                        "e0": "floor((-2 + b1)/4)",
                        "e1": "floor((b1)/4)",
                        "e2": "floor((b2)/4)"
                    },
                    "linear conditions": [
                        "4 * e1 == b1",
                        "4 * e2 == b2",
                        "b1 >= 2",
                        "2 * s >= 2 + b1 + b2",
                        "s <= -2 + b2",
                        "4 * e0 <= -3 + b1",
                        "4 * e0 >= -5 + b1"
                    ]
                }
            ],
            "formula": "((((((((((-1/3 * b1 + 5/8 * b1^2) + (1/12 + 23/24 * b1 - 1/48 * b1^2) * b2 + (-1/16 - 1/16 * b1) * b2^2) + ((1/12 + 5/12 * b1) + (1/6 + 1/6 * b1) * b2) * s + (-1/12 - 1/12 * b1) * s^2) + (((2/3 - 2/3 * b1) - 4/3 * b2) - 1/3 * s) * floor((b1)/3)) + (((1/3 - 4/3 * b1) - 5/3 * b2) - 2/3 * s) * floor((1 + b1)/3)) + ((2/3 - 1/3 * b1) + floor((b1)/3)) * floor((b2)/3)) + (((1/3 - 2/3 * b1) + floor((b1)/3)) + floor((1 + b1)/3)) * floor((1 + b2)/3)) - 1/2 * floor((b2 + s)/2)) + (((1/3 - 2/3 * b1) + floor((b1)/3)) + floor((1 + b1)/3)) * floor((2b1 + 2b2 + s)/3)) + ((-1/3 - 1/3 * b1) + floor((1 + b1)/3)) * floor((1 + 2b1 + 2b2 + s)/3))"
        },
        {
            "domain": [
                {
                    "quantifiers": {
                        "e0": "floor((b2)/4)",
                        "e1": "floor((b1)/2)",
                        "e2": "floor((-2 + b2)/4)"
                    },
                    "linear conditions": [
                        "2 * e1 == b1",
                        "4 * e2 == -2 + b2",
                        "b1 >= 2",
                        "2 * s >= 2 + b1 + b2",
                        "s <= -2 + b2",
                        "4 * e0 >= -3 + b2",
                        "4 * e0 <= -1 + b2"
                    ]
                }
            ],
            "formula": "((((((((((1/4 - 1/3 * b1 + 5/8 * b1^2) + (1/12 + 23/24 * b1 - 1/48 * b1^2) * b2 + (-1/16 - 1/16 * b1) * b2^2) + ((1/12 + 5/12 * b1) + (1/6 + 1/6 * b1) * b2) * s + (-1/12 - 1/12 * b1) * s^2) + (((2/3 - 2/3 * b1) - 4/3 * b2) - 1/3 * s) * floor((b1)/3)) + (((1/3 - 4/3 * b1) - 5/3 * b2) - 2/3 * s) * floor((1 + b1)/3)) + ((2/3 - 1/3 * b1) + floor((b1)/3)) * floor((b2)/3)) + (((1/3 - 2/3 * b1) + floor((b1)/3)) + floor((1 + b1)/3)) * floor((1 + b2)/3)) - 1/2 * floor((b2 + s)/2)) + (((1/3 - 2/3 * b1) + floor((b1)/3)) + floor((1 + b1)/3)) * floor((2b1 + 2b2 + s)/3)) + ((-1/3 - 1/3 * b1) + floor((1 + b1)/3)) * floor((1 + 2b1 + 2b2 + s)/3))"
        },
        {
            "domain": [
                {
                    "quantifiers": {
                        "e0": "floor((-4 + b1)/4)"
                    },
                    "linear conditions": [
                        "b2 == b1",
                        "s == -1 + b1",
                        "4 * e0 == -4 + b1",
                        "b1 >= 4"
                    ]
                }
            ],
            "formula": "(((-1/3 * b1 + 25/48 * b1^2) + (1/3 - 4/3 * b1) * floor((b1)/3) + floor((b1)/3)^2) + ((1/6 - 5/3 * b1) + 2 * floor((b1)/3)) * floor((2 + b1)/3) + 3/2 * floor((2 + b1)/3)^2)"
        },
        {
            "domain": [
                {
                    "quantifiers": {
                        "e0": "floor((-4 + b1)/4)",
                        "e1": "floor((-2 + b1)/4)"
                    },
                    "linear conditions": [
                        "b2 == b1",
                        "s == -1 + b1",
                        "4 * e1 == -2 + b1",
                        "b1 >= 4",
                        "4 * e0 <= -5 + b1",
                        "4 * e0 >= -7 + b1"
                    ]
                }
            ],
            "formula": "(((1/4 - 1/3 * b1 + 25/48 * b1^2) + (1/3 - 4/3 * b1) * floor((b1)/3) + floor((b1)/3)^2) + ((1/6 - 5/3 * b1) + 2 * floor((b1)/3)) * floor((2 + b1)/3) + 3/2 * floor((2 + b1)/3)^2)"
        },
        {
            "domain": [
                {
                    "quantifiers": {
                        "e0": "floor((b1)/4)"
                    },
                    "linear conditions": [
                        "b2 == b1",
                        "s == b1",
                        "4 * e0 == b1",
                        "b1 >= 2"
                    ]
                }
            ],
            "formula": "(((1/6 * b1 + 3/16 * b1^2) + (1/2 - 1/3 * b1) * floor((b1)/3) + 1/2 * floor((b1)/3)^2) + (-1 - 2/3 * b1) * floor((2 + b1)/3) + floor((2 + b1)/3)^2)"
        },
        {
            "domain": [
                {
                    "quantifiers": {
                        "e0": "floor((-2 + b1)/4)",
                        "e1": "floor((-2 + b2)/4)",
                        "e2": "floor((-2 + b1 + b2)/4)"
                    },
                    "linear conditions": [
                        "2 * s == b1 + b2",
                        "4 * e1 == -2 + b2",
                        "4 * e2 == -2 + b1 + b2",
                        "b1 >= 2",
                        "b2 >= 1 + b1",
                        "b2 <= 2 + b1",
                        "4 * e0 <= -3 + b1",
                        "4 * e0 >= -5 + b1"
                    ]
                },
                {
                    "quantifiers": {
                        "e0": "floor((b1)/4)",
                        "e1": "floor((-2 + b2)/4)",
                        "e2": "floor((b1 + b2)/4)"
                    },
                    "linear conditions": [
                        "2 * s == b1 + b2",
                        "4 * e1 == -2 + b2",
                        "4 * e2 == b1 + b2",
                        "b1 >= 2",
                        "b2 >= b1",
                        "b2 <= 1 + b1",
                        "4 * e0 <= -1 + b1",
                        "4 * e0 >= -3 + b1"
                    ]
                }
            ],
            "formula": "((((((1/4 - 479/1440 * b1 + 1/576 * b1^2 - 5/288 * b1^3 + 5/2304 * b1^4 + 1/2560 * b1^5) + (-721/1440 + 47/96 * b1 + 5/576 * b1^2 - 1/144 * b1^3 - 7/4608 * b1^4) * b2 + (17/576 + 1/72 * b1 + 1/128 * b1^2 + 5/2304 * b1^3) * b2^2 + (-1/192 - 1/288 * b1 - 1/768 * b1^2) * b2^3 + (1/2304 + 1/4608 * b1) * b2^4 + 1/23040 * b2^5) + (1/3 - b2) * floor((b1)/3)) + (((1/3 - 1/3 * b1) - 1/3 * b2) + 2/3 * floor((b1)/3)) * floor((1 + b1)/3) + 1/3 * floor((1 + b1)/3)^2) + (((7/6 - 1/2 * b1) - 1/6 * b2) + 4/3 * floor((b1)/3)) * floor((b2)/3) + 1/6 * floor((b2)/3)^2) + ((((2/3 - 2/3 * b1) + floor((b1)/3)) + 2/3 * floor((1 + b1)/3)) + 1/3 * floor((b2)/3)) * floor((1 + b2)/3))"
        },
        {
            "domain": [
                {
                    "quantifiers": {
                        "e0": "floor((-2 + b1)/4)",
                        "e1": "floor((b1)/4)",
                        "e2": "floor((b2)/4)"
                    },
                    "linear conditions": [
                        "4 * e1 == b1",
                        "4 * e2 == b2",
                        "b1 >= 2",
                        "2 * s >= 2 + b1 + b2",
                        "s >= -1 + b2",
                        "s <= b2",
                        "4 * e0 <= -3 + b1",
                        "4 * e0 >= -5 + b1"
                    ]
                }
            ],
            "formula": "(((((((((-1/6 * b1 + 1/8 * b1^2) + (-1/720 + 23/36 * b1 - 1/48 * b1^2) * b2 + (1/18 - 5/72 * b1) * b2^2 + (-1/24 - 1/72 * b1) * b2^3 + (1/144 + 1/144 * b1) * b2^4 + 1/720 * b2^5) + ((-119/720 - 19/72 * b1) + (-29/72 + 13/72 * b1) * b2 + (1/8 + 1/24 * b1) * b2^2 + (-1/36 - 1/36 * b1) * b2^3 - 1/144 * b2^4) * s + ((-19/144 - 13/144 * b1) + (-1/8 - 1/24 * b1) * b2 + (1/24 + 1/24 * b1) * b2^2 + 1/72 * b2^3) * s^2 + ((1/24 + 1/72 * b1) + (-1/36 - 1/36 * b1) * b2 - 1/72 * b2^2) * s^3 + ((1/144 + 1/144 * b1) + 1/144 * b2) * s^4 - 1/720 * s^5) + ((2/3 - 1/3 * b1) - 4/3 * b2) * floor((b1)/3)) + ((((1/6 - 2/3 * b1) - 4/3 * b2) - 1/3 * s) - 1/3 * floor((b1)/3)) * floor((1 + b1)/3) - 1/6 * floor((1 + b1)/3)^2) + ((2/3 - 1/3 * b1) + floor((b1)/3)) * floor((b2)/3)) + (((1/3 - 2/3 * b1) + floor((b1)/3)) + floor((1 + b1)/3)) * floor((1 + b2)/3)) + ((((1/6 + 1/3 * b2) + 1/3 * s) + 2/3 * floor((b1)/3)) + 2/3 * floor((1 + b1)/3)) * floor((2b1 + 2b2 + s)/3) - 1/6 * floor((2b1 + 2b2 + s)/3)^2) + (((-1/3 + 1/3 * s) + 2/3 * floor((1 + b1)/3)) - 1/3 * floor((2b1 + 2b2 + s)/3)) * floor((1 + 2b1 + 2b2 + s)/3))"
        },
        {
            "domain": [
                {
                    "quantifiers": {
                        "e0": "floor((b2)/4)",
                        "e1": "floor((b1)/2)",
                        "e2": "floor((-2 + b2)/4)"
                    },
                    "linear conditions": [
                        "2 * e1 == b1",
                        "4 * e2 == -2 + b2",
                        "b1 >= 2",
                        "2 * s >= 2 + b1 + b2",
                        "s >= -1 + b2",
                        "s <= b2",
                        "4 * e0 >= -3 + b2",
                        "4 * e0 <= -1 + b2"
                    ]
                }
            ],
            "formula": "(((((((((1/4 - 1/6 * b1 + 1/8 * b1^2) + (-1/720 + 23/36 * b1 - 1/48 * b1^2) * b2 + (1/18 - 5/72 * b1) * b2^2 + (-1/24 - 1/72 * b1) * b2^3 + (1/144 + 1/144 * b1) * b2^4 + 1/720 * b2^5) + ((-119/720 - 19/72 * b1) + (-29/72 + 13/72 * b1) * b2 + (1/8 + 1/24 * b1) * b2^2 + (-1/36 - 1/36 * b1) * b2^3 - 1/144 * b2^4) * s + ((-19/144 - 13/144 * b1) + (-1/8 - 1/24 * b1) * b2 + (1/24 + 1/24 * b1) * b2^2 + 1/72 * b2^3) * s^2 + ((1/24 + 1/72 * b1) + (-1/36 - 1/36 * b1) * b2 - 1/72 * b2^2) * s^3 + ((1/144 + 1/144 * b1) + 1/144 * b2) * s^4 - 1/720 * s^5) + ((2/3 - 1/3 * b1) - 4/3 * b2) * floor((b1)/3)) + ((((1/6 - 2/3 * b1) - 4/3 * b2) - 1/3 * s) - 1/3 * floor((b1)/3)) * floor((1 + b1)/3) - 1/6 * floor((1 + b1)/3)^2) + ((2/3 - 1/3 * b1) + floor((b1)/3)) * floor((b2)/3)) + (((1/3 - 2/3 * b1) + floor((b1)/3)) + floor((1 + b1)/3)) * floor((1 + b2)/3)) + ((((1/6 + 1/3 * b2) + 1/3 * s) + 2/3 * floor((b1)/3)) + 2/3 * floor((1 + b1)/3)) * floor((2b1 + 2b2 + s)/3) - 1/6 * floor((2b1 + 2b2 + s)/3)^2) + (((-1/3 + 1/3 * s) + 2/3 * floor((1 + b1)/3)) - 1/3 * floor((2b1 + 2b2 + s)/3)) * floor((1 + 2b1 + 2b2 + s)/3))"
        },
        {
            "domain": [
                {
                    "quantifiers": {
                        "e0": "floor((b2)/4)",
                        "e1": "floor((-2 + b2)/4)",
                        "e2": "floor((-1 + b1)/4)",
                        "e3": "floor((-1 + b2)/4)"
                    },
                    "linear conditions": [
                        "4 * e2 == -1 + b1",
                        "4 * e3 == -1 + b2",
                        "4 * s >= 1 + b1 + 2 * b2",
                        "s >= b1",
                        "2 * s <= -4 + b1 + b2",
                        "4 * e0 >= -3 + b2",
                        "4 * e0 <= -1 + b2",
                        "4 * e1 >= -5 + b2",
                        "4 * e1 <= -3 + b2"
                    ]
                }
            ],
            "formula": "(((((((((3/16 - 7/16 * b1 + 5/8 * b1^2 + 1/24 * b1^3) + (-25/48 + 23/24 * b1 + 5/48 * b1^2) * b2 + (-1/16 + 1/16 * b1) * b2^2 + 1/24 * b2^3) + ((5/12 + 5/12 * b1 - 1/4 * b1^2) + (1/6 - 1/3 * b1) * b2 - 1/4 * b2^2) * s + ((-1/12 + 5/12 * b1) + 1/2 * b2) * s^2 - 1/3 * s^3) + (((2/3 - 2/3 * b1) - 4/3 * b2) - 1/3 * s) * floor((b1)/3)) + (((1/3 - 4/3 * b1) - 5/3 * b2) - 2/3 * s) * floor((1 + b1)/3)) + ((2/3 - 1/3 * b1) + floor((b1)/3)) * floor((b2)/3)) + (((1/3 - 2/3 * b1) + floor((b1)/3)) + floor((1 + b1)/3)) * floor((1 + b2)/3)) + (((1/3 - 2/3 * b1) + floor((b1)/3)) + floor((1 + b1)/3)) * floor((2b1 + 2b2 + s)/3)) + ((-1/3 - 1/3 * b1) + floor((1 + b1)/3)) * floor((1 + 2b1 + 2b2 + s)/3))"
        },
        {
            "domain": [
                {
                    "quantifiers": {
                        "e0": "floor((-2 + b1)/4)",
                        "e1": "floor((-4 + b1)/4)",
                        "e2": "floor((-1 + b2)/4)",
                        "e3": "floor((-1 + b1)/4)"
                    },
                    "linear conditions": [
                        "s == -1 + b1",
                        "4 * e2 == -1 + b2",
                        "4 * e3 == -1 + b1",
                        "b2 >= 2 + b1",
                        "2 * b2 <= -5 + 3 * b1",
                        "4 * e0 >= -5 + b1",
                        "4 * e0 <= -3 + b1",
                        "4 * e1 >= -7 + b1",
                        "4 * e1 <= -5 + b1"
                    ]
                }
            ],
            "formula": "((((((-5/16 - 3/16 * b1 + 3/8 * b1^2 - 1/8 * b1^3) + (7/48 - 29/24 * b1 + 13/48 * b1^2) * b2 + (3/16 - 3/16 * b1) * b2^2 + 1/24 * b2^3) + 2/3 * b2 * floor((b1)/3)) + 4/3 * b2 * floor((1 + b1)/3)) + ((b1 - floor((b1)/3)) - 2 * floor((1 + b1)/3)) * floor((b2)/3)) + ((b1 - floor((b1)/3)) - 2 * floor((1 + b1)/3)) * floor((2 + b2)/3))"
        },
        {
            "domain": [
                {
                    "quantifiers": {
                        "e0": "floor((-2 + b1)/4)",
                        "e1": "floor((-4 + b1)/4)",
                        "e2": "floor((-1 + b2)/4)",
                        "e3": "floor((-5 + b1)/4)"
                    },
                    "linear conditions": [
                        "s == -2 + b1",
                        "4 * e2 == -1 + b2",
                        "4 * e3 == -5 + b1",
                        "b2 >= b1",
                        "2 * b2 <= -9 + 3 * b1",
                        "4 * e0 >= -5 + b1",
                        "4 * e0 <= -3 + b1",
                        "4 * e1 >= -7 + b1",
                        "4 * e1 <= -5 + b1"
                    ]
                }
            ],
            "formula": "((((((3/16 - 65/48 * b1 + 19/24 * b1^2 - 1/8 * b1^3) + (21/16 - 29/24 * b1 + 13/48 * b1^2) * b2 + (13/48 - 3/16 * b1) * b2^2 + 1/24 * b2^3) + (1/3 - 1/3 * b2) * floor((b1)/3)) + (-1/3 + 1/3 * b2) * floor((1 + b1)/3)) + (((-1/6 + 2/3 * b2) + floor((b1)/3)) - floor((1 + b1)/3)) * floor((b2)/3) - 1/2 * floor((b2)/3)^2) + ((-1/3 + 1/3 * b2) - floor((b2)/3)) * floor((1 + b2)/3))"
        },
        {
            "domain": [
                {
                    "quantifiers": {
                        "e0": "floor((b2)/4)",
                        "e1": "floor((-2 + b2)/4)",
                        "e2": "floor((-1 + b2)/4)",
                        "e3": "floor((-1 + b1)/4)",
                        "e4": "floor((-3 + b2)/4)"
                    },
                    "linear conditions": [
                        "4 * e3 == -1 + b1",
                        "4 * e4 == -3 + b2",
                        "4 * s >= 1 + b1 + 2 * b2",
                        "s >= b1",
                        "2 * s <= -4 + b1 + b2",
                        "4 * e0 >= -3 + b2",
                        "4 * e0 <= -1 + b2",
                        "4 * e1 >= -5 + b2",
                        "4 * e1 <= -3 + b2",
                        "4 * e2 <= -2 + b2",
                        "4 * e2 >= -4 + b2"
                    ]
                }
            ],
            "formula": "(((((((((11/16 - 7/16 * b1 + 5/8 * b1^2 + 1/24 * b1^3) + (-25/48 + 23/24 * b1 + 5/48 * b1^2) * b2 + (-1/16 + 1/16 * b1) * b2^2 + 1/24 * b2^3) + ((5/12 + 5/12 * b1 - 1/4 * b1^2) + (1/6 - 1/3 * b1) * b2 - 1/4 * b2^2) * s + ((-1/12 + 5/12 * b1) + 1/2 * b2) * s^2 - 1/3 * s^3) + (((2/3 - 2/3 * b1) - 4/3 * b2) - 1/3 * s) * floor((b1)/3)) + (((1/3 - 4/3 * b1) - 5/3 * b2) - 2/3 * s) * floor((1 + b1)/3)) + ((2/3 - 1/3 * b1) + floor((b1)/3)) * floor((b2)/3)) + (((1/3 - 2/3 * b1) + floor((b1)/3)) + floor((1 + b1)/3)) * floor((1 + b2)/3)) + (((1/3 - 2/3 * b1) + floor((b1)/3)) + floor((1 + b1)/3)) * floor((2b1 + 2b2 + s)/3)) + ((-1/3 - 1/3 * b1) + floor((1 + b1)/3)) * floor((1 + 2b1 + 2b2 + s)/3))"
        },
        {
            "domain": [
                {
                    "quantifiers": {
                        "e0": "floor((b2)/4)",
                        "e1": "floor((-2 + b2)/4)",
                        "e2": "floor((-1 + b2)/4)",
                        "e3": "floor((-1 + b1)/4)",
                        "e4": "floor((-3 + b1)/4)",
                        "e5": "floor((-3 + b2)/4)"
                    },
                    "linear conditions": [
                        "4 * e4 == -3 + b1",
                        "4 * e5 == -3 + b2",
                        "4 * s >= 1 + b1 + 2 * b2",
                        "s >= b1",
                        "2 * s <= -4 + b1 + b2",
                        "4 * e0 >= -3 + b2",
                        "4 * e0 <= -1 + b2",
                        "4 * e1 >= -5 + b2",
                        "4 * e1 <= -3 + b2",
                        "4 * e2 >= -4 + b2",
                        "4 * e2 <= -2 + b2",
                        "4 * e3 >= -4 + b1",
                        "4 * e3 <= -2 + b1"
                    ]
                },
                {
                    "quantifiers": {
                        "e0": "floor((b2)/4)",
                        "e1": "floor((-2 + b2)/4)",
                        "e2": "floor((-1 + b1)/4)",
                        "e3": "floor((-3 + b1)/4)",
                        "e4": "floor((-1 + b2)/4)"
                    },
                    "linear conditions": [
                        "4 * e3 == -3 + b1",
                        "4 * e4 == -1 + b2",
                        "4 * s >= 1 + b1 + 2 * b2",
                        "s >= b1",
                        "2 * s <= -4 + b1 + b2",
                        "4 * e0 >= -3 + b2",
                        "4 * e0 <= -1 + b2",
                        "4 * e1 >= -5 + b2",
                        "4 * e1 <= -3 + b2",
                        "4 * e2 >= -4 + b1",
                        "4 * e2 <= -2 + b1"
                    ]
                }
            ],
            "formula": "(((((((((7/16 - 7/16 * b1 + 5/8 * b1^2 + 1/24 * b1^3) + (-25/48 + 23/24 * b1 + 5/48 * b1^2) * b2 + (-1/16 + 1/16 * b1) * b2^2 + 1/24 * b2^3) + ((5/12 + 5/12 * b1 - 1/4 * b1^2) + (1/6 - 1/3 * b1) * b2 - 1/4 * b2^2) * s + ((-1/12 + 5/12 * b1) + 1/2 * b2) * s^2 - 1/3 * s^3) + (((2/3 - 2/3 * b1) - 4/3 * b2) - 1/3 * s) * floor((b1)/3)) + (((1/3 - 4/3 * b1) - 5/3 * b2) - 2/3 * s) * floor((1 + b1)/3)) + ((2/3 - 1/3 * b1) + floor((b1)/3)) * floor((b2)/3)) + (((1/3 - 2/3 * b1) + floor((b1)/3)) + floor((1 + b1)/3)) * floor((1 + b2)/3)) + (((1/3 - 2/3 * b1) + floor((b1)/3)) + floor((1 + b1)/3)) * floor((2b1 + 2b2 + s)/3)) + ((-1/3 - 1/3 * b1) + floor((1 + b1)/3)) * floor((1 + 2b1 + 2b2 + s)/3))"
        },
        {
            "domain": [
                {
                    "quantifiers": {
                        "e0": "floor((-2 + b1)/4)",
                        "e1": "floor((-4 + b1)/4)",
                        "e2": "floor((-1 + b2)/4)",
                        "e3": "floor((-3 + b2)/4)",
                        "e4": "floor((-1 + b1)/4)"
                    },
                    "linear conditions": [
                        "s == -1 + b1",
                        "4 * e3 == -3 + b2",
                        "4 * e4 == -1 + b1",
                        "b2 >= 2 + b1",
                        "2 * b2 <= -5 + 3 * b1",
                        "4 * e0 >= -5 + b1",
                        "4 * e0 <= -3 + b1",
                        "4 * e1 >= -7 + b1",
                        "4 * e1 <= -5 + b1",
                        "4 * e2 <= -2 + b2",
                        "4 * e2 >= -4 + b2"
                    ]
                }
            ],
            "formula": "((((((3/16 - 3/16 * b1 + 3/8 * b1^2 - 1/8 * b1^3) + (7/48 - 29/24 * b1 + 13/48 * b1^2) * b2 + (3/16 - 3/16 * b1) * b2^2 + 1/24 * b2^3) + 2/3 * b2 * floor((b1)/3)) + 4/3 * b2 * floor((1 + b1)/3)) + ((b1 - floor((b1)/3)) - 2 * floor((1 + b1)/3)) * floor((b2)/3)) + ((b1 - floor((b1)/3)) - 2 * floor((1 + b1)/3)) * floor((2 + b2)/3))"
        },
        {
            "domain": [
                {
                    "quantifiers": {
                        "e0": "floor((-2 + b1)/4)",
                        "e1": "floor((-4 + b1)/4)",
                        "e2": "floor((-1 + b1)/4)",
                        "e3": "floor((-3 + b2)/4)",
                        "e4": "floor((-3 + b1)/4)"
                    },
                    "linear conditions": [
                        "s == -1 + b1",
                        "4 * e3 == -3 + b2",
                        "4 * e4 == -3 + b1",
                        "b2 >= 2 + b1",
                        "2 * b2 <= -5 + 3 * b1",
                        "4 * e0 >= -5 + b1",
                        "4 * e0 <= -3 + b1",
                        "4 * e1 >= -7 + b1",
                        "4 * e1 <= -5 + b1",
                        "4 * e2 >= -4 + b1",
                        "4 * e2 <= -2 + b1"
                    ]
                },
                {
                    "quantifiers": {
                        "e0": "floor((-2 + b1)/4)",
                        "e1": "floor((-4 + b1)/4)",
                        "e2": "floor((-1 + b1)/4)",
                        "e3": "floor((-1 + b2)/4)",
                        "e4": "floor((-3 + b1)/4)"
                    },
                    "linear conditions": [
                        "s == -1 + b1",
                        "4 * e3 == -1 + b2",
                        "4 * e4 == -3 + b1",
                        "b2 >= 2 + b1",
                        "2 * b2 <= -5 + 3 * b1",
                        "4 * e0 >= -5 + b1",
                        "4 * e0 <= -3 + b1",
                        "4 * e1 >= -7 + b1",
                        "4 * e1 <= -5 + b1",
                        "4 * e2 >= -4 + b1",
                        "4 * e2 <= -2 + b1"
                    ]
                }
            ],
            "formula": "((((((-1/16 - 3/16 * b1 + 3/8 * b1^2 - 1/8 * b1^3) + (7/48 - 29/24 * b1 + 13/48 * b1^2) * b2 + (3/16 - 3/16 * b1) * b2^2 + 1/24 * b2^3) + 2/3 * b2 * floor((b1)/3)) + 4/3 * b2 * floor((1 + b1)/3)) + ((b1 - floor((b1)/3)) - 2 * floor((1 + b1)/3)) * floor((b2)/3)) + ((b1 - floor((b1)/3)) - 2 * floor((1 + b1)/3)) * floor((2 + b2)/3))"
        },
        {
            "domain": [
                {
                    "quantifiers": {
                        "e0": "floor((b2)/4)",
                        "e1": "floor((-2 + b2)/4)",
                        "e2": "floor((-1 + b2)/4)",
                        "e3": "floor((-1 + b1)/4)",
                        "e4": "floor((-3 + b1)/4)",
                        "e5": "floor((-2 + b1)/4)",
                        "e6": "floor((-3 + b2)/4)"
                    },
                    "linear conditions": [
                        "4 * e5 == -2 + b1",
                        "4 * e6 == -3 + b2",
                        "4 * s >= b1 + 2 * b2",
                        "s >= b1",
                        "2 * s <= -3 + b1 + b2",
                        "4 * e0 <= -1 + b2",
                        "4 * e0 >= -3 + b2",
                        "4 * e1 >= -5 + b2",
                        "4 * e1 <= -3 + b2",
                        "4 * e2 >= -4 + b2",
                        "4 * e2 <= -2 + b2",
                        "4 * e3 <= -2 + b1",
                        "4 * e3 >= -4 + b1",
                        "4 * e4 <= -4 + b1",
                        "4 * e4 >= -6 + b1"
                    ]
                }
            ],
            "formula": "((((((((((-1/16 - 3/16 * b1 + 5/8 * b1^2 + 1/24 * b1^3) + (-1/12 + 23/24 * b1 + 5/48 * b1^2) * b2 + (-1/16 + 1/16 * b1) * b2^2 + 1/24 * b2^3) + ((1/6 + 5/12 * b1 - 1/4 * b1^2) + (1/6 - 1/3 * b1) * b2 - 1/4 * b2^2) * s + ((-1/12 + 5/12 * b1) + 1/2 * b2) * s^2 - 1/3 * s^3) + (((2/3 - 2/3 * b1) - 4/3 * b2) - 1/3 * s) * floor((b1)/3)) + (((1/3 - 4/3 * b1) - 5/3 * b2) - 2/3 * s) * floor((1 + b1)/3)) + ((2/3 - 1/3 * b1) + floor((b1)/3)) * floor((b2)/3)) + (((1/3 - 2/3 * b1) + floor((b1)/3)) + floor((1 + b1)/3)) * floor((1 + b2)/3)) - 1/2 * floor((b2 + s)/2)) + (((1/3 - 2/3 * b1) + floor((b1)/3)) + floor((1 + b1)/3)) * floor((2b1 + 2b2 + s)/3)) + ((-1/3 - 1/3 * b1) + floor((1 + b1)/3)) * floor((1 + 2b1 + 2b2 + s)/3))"
        },
        {
            "domain": [
                {
                    "quantifiers": {
                        "e0": "floor((b2)/4)",
                        "e1": "floor((-2 + b2)/4)",
                        "e2": "floor((-3 + b2)/4)",
                        "e3": "floor((-2 + b1)/4)"
                    },
                    "linear conditions": [
                        "s == -1 + b1",
                        "4 * e2 == -3 + b2",
                        "4 * e3 == -2 + b1",
                        "b2 >= 1 + b1",
                        "2 * b2 <= -4 + 3 * b1",
                        "4 * e0 <= -1 + b2",
                        "4 * e0 >= -3 + b2",
                        "4 * e1 <= -3 + b2",
                        "4 * e1 >= -5 + b2"
                    ]
                }
            ],
            "formula": "((((((-1/16 - 7/16 * b1 + 3/8 * b1^2 - 1/8 * b1^3) + (1/3 - 29/24 * b1 + 13/48 * b1^2) * b2 + (3/16 - 3/16 * b1) * b2^2 + 1/24 * b2^3) + 2/3 * b2 * floor((b1)/3)) + 4/3 * b2 * floor((1 + b1)/3)) + ((b1 - floor((b1)/3)) - 2 * floor((1 + b1)/3)) * floor((b2)/3)) + ((b1 - floor((b1)/3)) - 2 * floor((1 + b1)/3)) * floor((2 + b2)/3))"
        },
        {
            "domain": [
                {
                    "quantifiers": {
                        "e0": "floor((b2)/4)",
                        "e1": "floor((-2 + b2)/4)",
                        "e2": "floor((-1 + b1)/4)",
                        "e3": "floor((-3 + b1)/4)",
                        "e4": "floor((b1)/4)",
                        "e5": "floor((-1 + b2)/4)"
                    },
                    "linear conditions": [
                        "4 * e4 == b1",
                        "4 * e5 == -1 + b2",
                        "4 * s >= 2 + b1 + 2 * b2",
                        "s >= b1",
                        "2 * s <= -3 + b1 + b2",
                        "4 * e0 >= -3 + b2",
                        "4 * e0 <= -1 + b2",
                        "4 * e1 >= -5 + b2",
                        "4 * e1 <= -3 + b2",
                        "4 * e2 <= -2 + b1",
                        "4 * e2 >= -4 + b1",
                        "4 * e3 <= -4 + b1",
                        "4 * e3 >= -6 + b1"
                    ]
                }
            ],
            "formula": "((((((((((7/16 - 3/16 * b1 + 5/8 * b1^2 + 1/24 * b1^3) + (-1/12 + 23/24 * b1 + 5/48 * b1^2) * b2 + (-1/16 + 1/16 * b1) * b2^2 + 1/24 * b2^3) + ((1/6 + 5/12 * b1 - 1/4 * b1^2) + (1/6 - 1/3 * b1) * b2 - 1/4 * b2^2) * s + ((-1/12 + 5/12 * b1) + 1/2 * b2) * s^2 - 1/3 * s^3) + (((2/3 - 2/3 * b1) - 4/3 * b2) - 1/3 * s) * floor((b1)/3)) + (((1/3 - 4/3 * b1) - 5/3 * b2) - 2/3 * s) * floor((1 + b1)/3)) + ((2/3 - 1/3 * b1) + floor((b1)/3)) * floor((b2)/3)) + (((1/3 - 2/3 * b1) + floor((b1)/3)) + floor((1 + b1)/3)) * floor((1 + b2)/3)) - 1/2 * floor((b2 + s)/2)) + (((1/3 - 2/3 * b1) + floor((b1)/3)) + floor((1 + b1)/3)) * floor((2b1 + 2b2 + s)/3)) + ((-1/3 - 1/3 * b1) + floor((1 + b1)/3)) * floor((1 + 2b1 + 2b2 + s)/3))"
        },
        {
            "domain": [
                {
                    "quantifiers": {
                        "e0": "floor((-2 + b1)/4)",
                        "e1": "floor((b2)/4)",
                        "e2": "floor((-2 + b2)/4)",
                        "e3": "floor((-1 + b2)/4)",
                        "e4": "floor((-4 + b1)/4)"
                    },
                    "linear conditions": [
                        "s == -1 + b1",
                        "4 * e3 == -1 + b2",
                        "4 * e4 == -4 + b1",
                        "b2 >= 1 + b1",
                        "2 * b2 <= -6 + 3 * b1",
                        "4 * e0 >= -5 + b1",
                        "4 * e0 <= -3 + b1",
                        "4 * e1 <= -1 + b2",
                        "4 * e1 >= -3 + b2",
                        "4 * e2 <= -3 + b2",
                        "4 * e2 >= -5 + b2"
                    ]
                }
            ],
            "formula": "((((((7/16 - 7/16 * b1 + 3/8 * b1^2 - 1/8 * b1^3) + (1/3 - 29/24 * b1 + 13/48 * b1^2) * b2 + (3/16 - 3/16 * b1) * b2^2 + 1/24 * b2^3) + 2/3 * b2 * floor((b1)/3)) + 4/3 * b2 * floor((1 + b1)/3)) + ((b1 - floor((b1)/3)) - 2 * floor((1 + b1)/3)) * floor((b2)/3)) + ((b1 - floor((b1)/3)) - 2 * floor((1 + b1)/3)) * floor((2 + b2)/3))"
        },
        {
            "domain": [
                {
                    "quantifiers": {
                        "e0": "floor((b2)/4)",
                        "e1": "floor((-2 + b2)/4)",
                        "e2": "floor((-1 + b2)/4)",
                        "e3": "floor((-1 + b1)/4)",
                        "e4": "floor((-3 + b1)/4)",
                        "e5": "floor((-2 + b1)/4)",
                        "e6": "floor((b1)/4)",
                        "e7": "floor((-3 + b2)/4)"
                    },
                    "linear conditions": [
                        "4 * e6 == b1",
                        "4 * e7 == -3 + b2",
                        "4 * s >= b1 + 2 * b2",
                        "s >= b1",
                        "2 * s <= -3 + b1 + b2",
                        "4 * e0 >= -3 + b2",
                        "4 * e0 <= -1 + b2",
                        "4 * e1 >= -5 + b2",
                        "4 * e1 <= -3 + b2",
                        "4 * e2 >= -4 + b2",
                        "4 * e2 <= -2 + b2",
                        "4 * e3 >= -4 + b1",
                        "4 * e3 <= -2 + b1",
                        "4 * e4 >= -6 + b1",
                        "4 * e4 <= -4 + b1",
                        "4 * e5 >= -5 + b1",
                        "4 * e5 <= -3 + b1"
                    ]
                },
                {
                    "quantifiers": {
                        "e0": "floor((b2)/4)",
                        "e1": "floor((-2 + b2)/4)",
                        "e2": "floor((-1 + b1)/4)",
                        "e3": "floor((-3 + b1)/4)",
                        "e4": "floor((b1)/4)",
                        "e5": "floor((-2 + b1)/4)",
                        "e6": "floor((-1 + b2)/4)"
                    },
                    "linear conditions": [
                        "4 * e5 == -2 + b1",
                        "4 * e6 == -1 + b2",
                        "4 * s >= b1 + 2 * b2",
                        "s >= b1",
                        "2 * s <= -3 + b1 + b2",
                        "4 * e0 >= -3 + b2",
                        "4 * e0 <= -1 + b2",
                        "4 * e1 >= -5 + b2",
                        "4 * e1 <= -3 + b2",
                        "4 * e2 >= -4 + b1",
                        "4 * e2 <= -2 + b1",
                        "4 * e3 >= -6 + b1",
                        "4 * e3 <= -4 + b1",
                        "4 * e4 >= -3 + b1",
                        "4 * e4 <= -1 + b1"
                    ]
                }
            ],
            "formula": "((((((((((3/16 - 3/16 * b1 + 5/8 * b1^2 + 1/24 * b1^3) + (-1/12 + 23/24 * b1 + 5/48 * b1^2) * b2 + (-1/16 + 1/16 * b1) * b2^2 + 1/24 * b2^3) + ((1/6 + 5/12 * b1 - 1/4 * b1^2) + (1/6 - 1/3 * b1) * b2 - 1/4 * b2^2) * s + ((-1/12 + 5/12 * b1) + 1/2 * b2) * s^2 - 1/3 * s^3) + (((2/3 - 2/3 * b1) - 4/3 * b2) - 1/3 * s) * floor((b1)/3)) + (((1/3 - 4/3 * b1) - 5/3 * b2) - 2/3 * s) * floor((1 + b1)/3)) + ((2/3 - 1/3 * b1) + floor((b1)/3)) * floor((b2)/3)) + (((1/3 - 2/3 * b1) + floor((b1)/3)) + floor((1 + b1)/3)) * floor((1 + b2)/3)) - 1/2 * floor((b2 + s)/2)) + (((1/3 - 2/3 * b1) + floor((b1)/3)) + floor((1 + b1)/3)) * floor((2b1 + 2b2 + s)/3)) + ((-1/3 - 1/3 * b1) + floor((1 + b1)/3)) * floor((1 + 2b1 + 2b2 + s)/3))"
        },
        {
            "domain": [
                {
                    "quantifiers": {
                        "e0": "floor((-2 + b1)/4)",
                        "e1": "floor((b2)/4)",
                        "e2": "floor((-2 + b2)/4)",
                        "e3": "floor((-1 + b2)/4)",
                        "e4": "floor((-3 + b2)/4)",
                        "e5": "floor((-4 + b1)/4)"
                    },
                    "linear conditions": [
                        "s == -1 + b1",
                        "4 * e4 == -3 + b2",
                        "4 * e5 == -4 + b1",
                        "b2 >= 1 + b1",
                        "2 * b2 <= -4 + 3 * b1",
                        "4 * e0 >= -5 + b1",
                        "4 * e0 <= -3 + b1",
                        "4 * e1 >= -3 + b2",
                        "4 * e1 <= -1 + b2",
                        "4 * e2 >= -5 + b2",
                        "4 * e2 <= -3 + b2",
                        "4 * e3 >= -4 + b2",
                        "4 * e3 <= -2 + b2"
                    ]
                },
                {
                    "quantifiers": {
                        "e0": "floor((b2)/4)",
                        "e1": "floor((-2 + b2)/4)",
                        "e2": "floor((-3 + b2)/4)",
                        "e3": "floor((-1 + b2)/4)",
                        "e4": "floor((-2 + b1)/4)"
                    },
                    "linear conditions": [
                        "s == -1 + b1",
                        "4 * e3 == -1 + b2",
                        "4 * e4 == -2 + b1",
                        "b2 >= 1 + b1",
                        "2 * b2 <= -4 + 3 * b1",
                        "4 * e0 >= -3 + b2",
                        "4 * e0 <= -1 + b2",
                        "4 * e1 >= -5 + b2",
                        "4 * e1 <= -3 + b2",
                        "4 * e2 >= -6 + b2",
                        "4 * e2 <= -4 + b2"
                    ]
                }
            ],
            "formula": "((((((3/16 - 7/16 * b1 + 3/8 * b1^2 - 1/8 * b1^3) + (1/3 - 29/24 * b1 + 13/48 * b1^2) * b2 + (3/16 - 3/16 * b1) * b2^2 + 1/24 * b2^3) + 2/3 * b2 * floor((b1)/3)) + 4/3 * b2 * floor((1 + b1)/3)) + ((b1 - floor((b1)/3)) - 2 * floor((1 + b1)/3)) * floor((b2)/3)) + ((b1 - floor((b1)/3)) - 2 * floor((1 + b1)/3)) * floor((2 + b2)/3))"
        },
        {
            "domain": [
                {
                    "quantifiers": {
                        "e0": "floor((b2)/4)",
                        "e1": "floor((-1 + b1)/2)",
                        "e2": "floor((-2 + b2)/4)"
                    },
                    "linear conditions": [
                        "2 * e1 == -1 + b1",
                        "4 * e2 == -2 + b2",
                        "4 * s >= b1 + 2 * b2",
                        "s >= b1",
                        "2 * s <= -3 + b1 + b2",
                        "4 * e0 >= -3 + b2",
                        "4 * e0 <= -1 + b2"
                    ]
                },
                {
                    "quantifiers": {
                        "e0": "floor((-2 + b1)/4)",
                        "e1": "floor((b1)/4)",
                        "e2": "floor((-1 + b1)/2)",
                        "e3": "floor((b2)/4)"
                    },
                    "linear conditions": [
                        "2 * e2 == -1 + b1",
                        "4 * e3 == b2",
                        "4 * s >= b1 + 2 * b2",
                        "s >= b1",
                        "2 * s <= -3 + b1 + b2",
                        "4 * e0 >= -5 + b1",
                        "4 * e0 <= -3 + b1",
                        "4 * e1 >= -3 + b1",
                        "4 * e1 <= -1 + b1"
                    ]
                }
            ],
            "formula": "(((((((((3/8 - 3/8 * b1 + 5/8 * b1^2 + 1/24 * b1^3) + (-19/48 + 23/24 * b1 + 5/48 * b1^2) * b2 + (-1/16 + 1/16 * b1) * b2^2 + 1/24 * b2^3) + ((1/6 + 5/12 * b1 - 1/4 * b1^2) + (1/6 - 1/3 * b1) * b2 - 1/4 * b2^2) * s + ((-1/12 + 5/12 * b1) + 1/2 * b2) * s^2 - 1/3 * s^3) + (((2/3 - 2/3 * b1) - 4/3 * b2) - 1/3 * s) * floor((b1)/3)) + (((1/3 - 4/3 * b1) - 5/3 * b2) - 2/3 * s) * floor((1 + b1)/3)) + ((2/3 - 1/3 * b1) + floor((b1)/3)) * floor((b2)/3)) + (((1/3 - 2/3 * b1) + floor((b1)/3)) + floor((1 + b1)/3)) * floor((1 + b2)/3)) + (((1/3 - 2/3 * b1) + floor((b1)/3)) + floor((1 + b1)/3)) * floor((2b1 + 2b2 + s)/3)) + ((-1/3 - 1/3 * b1) + floor((1 + b1)/3)) * floor((1 + 2b1 + 2b2 + s)/3))"
        },
        {
            "domain": [
                {
                    "quantifiers": {
                        "e0": "floor((-2 + b1)/4)",
                        "e1": "floor((-4 + b1)/4)",
                        "e2": "floor((-1 + b2)/4)",
                        "e3": "floor((-3 + b2)/4)",
                        "e4": "floor((-2 + b2)/4)",
                        "e5": "floor((-1 + b1)/4)"
                    },
                    "linear conditions": [
                        "s == -1 + b1",
                        "4 * e4 == -2 + b2",
                        "4 * e5 == -1 + b1",
                        "b2 >= 1 + b1",
                        "2 * b2 <= -4 + 3 * b1",
                        "4 * e0 >= -5 + b1",
                        "4 * e0 <= -3 + b1",
                        "4 * e1 >= -7 + b1",
                        "4 * e1 <= -5 + b1",
                        "4 * e2 >= -4 + b2",
                        "4 * e2 <= -2 + b2",
                        "4 * e3 >= -6 + b2",
                        "4 * e3 <= -4 + b2"
                    ]
                },
                {
                    "quantifiers": {
                        "e0": "floor((-2 + b1)/4)",
                        "e1": "floor((-4 + b1)/4)",
                        "e2": "floor((-1 + b1)/4)",
                        "e3": "floor((-3 + b2)/4)",
                        "e4": "floor((-1 + b2)/4)",
                        "e5": "floor((b2)/4)",
                        "e6": "floor((-3 + b1)/4)"
                    },
                    "linear conditions": [
                        "s == -1 + b1",
                        "4 * e5 == b2",
                        "4 * e6 == -3 + b1",
                        "b2 >= 1 + b1",
                        "2 * b2 <= -4 + 3 * b1",
                        "4 * e0 >= -5 + b1",
                        "4 * e0 <= -3 + b1",
                        "4 * e1 >= -7 + b1",
                        "4 * e1 <= -5 + b1",
                        "4 * e2 >= -4 + b1",
                        "4 * e2 <= -2 + b1",
                        "4 * e3 >= -6 + b2",
                        "4 * e3 <= -4 + b2",
                        "4 * e4 >= -4 + b2",
                        "4 * e4 <= -2 + b2"
                    ]
                },
                {
                    "quantifiers": {
                        "e0": "floor((-2 + b1)/4)",
                        "e1": "floor((-4 + b1)/4)",
                        "e2": "floor((-1 + b1)/4)",
                        "e3": "floor((-3 + b2)/4)",
                        "e4": "floor((-1 + b2)/4)",
                        "e5": "floor((-2 + b2)/4)",
                        "e6": "floor((-3 + b1)/4)"
                    },
                    "linear conditions": [
                        "s == -1 + b1",
                        "4 * e5 == -2 + b2",
                        "4 * e6 == -3 + b1",
                        "b2 >= 1 + b1",
                        "2 * b2 <= -4 + 3 * b1",
                        "4 * e0 >= -5 + b1",
                        "4 * e0 <= -3 + b1",
                        "4 * e1 >= -7 + b1",
                        "4 * e1 <= -5 + b1",
                        "4 * e2 >= -4 + b1",
                        "4 * e2 <= -2 + b1",
                        "4 * e3 >= -6 + b2",
                        "4 * e3 <= -4 + b2",
                        "4 * e4 >= -4 + b2",
                        "4 * e4 <= -2 + b2"
                    ]
                },
                {
                    "quantifiers": {
                        "e0": "floor((-2 + b1)/4)",
                        "e1": "floor((-4 + b1)/4)",
                        "e2": "floor((-1 + b2)/4)",
                        "e3": "floor((-3 + b2)/4)",
                        "e4": "floor((b2)/4)",
                        "e5": "floor((-1 + b1)/4)"
                    },
                    "linear conditions": [
                        "s == -1 + b1",
                        "4 * e4 == b2",
                        "4 * e5 == -1 + b1",
                        "b2 >= 1 + b1",
                        "2 * b2 <= -4 + 3 * b1",
                        "4 * e0 >= -5 + b1",
                        "4 * e0 <= -3 + b1",
                        "4 * e1 >= -7 + b1",
                        "4 * e1 <= -5 + b1",
                        "4 * e2 >= -4 + b2",
                        "4 * e2 <= -2 + b2",
                        "4 * e3 >= -6 + b2",
                        "4 * e3 <= -4 + b2"
                    ]
                }
            ],
            "formula": "((((((1/8 - 3/8 * b1 + 3/8 * b1^2 - 1/8 * b1^3) + (13/48 - 29/24 * b1 + 13/48 * b1^2) * b2 + (3/16 - 3/16 * b1) * b2^2 + 1/24 * b2^3) + 2/3 * b2 * floor((b1)/3)) + 4/3 * b2 * floor((1 + b1)/3)) + ((b1 - floor((b1)/3)) - 2 * floor((1 + b1)/3)) * floor((b2)/3)) + ((b1 - floor((b1)/3)) - 2 * floor((1 + b1)/3)) * floor((2 + b2)/3))"
        },
        {
            "domain": [
                {
                    "quantifiers": {
                        "e0": "floor((-2 + b1)/4)",
                        "e1": "floor((-4 + b1)/4)",
                        "e2": "floor((-1 + b2)/4)",
                        "e3": "floor((-3 + b2)/4)",
                        "e4": "floor((-5 + b1)/4)"
                    },
                    "linear conditions": [
                        "s == -2 + b1",
                        "4 * e3 == -3 + b2",
                        "4 * e4 == -5 + b1",
                        "b2 >= 2 + b1",
                        "2 * b2 <= -9 + 3 * b1",
                        "4 * e0 >= -5 + b1",
                        "4 * e0 <= -3 + b1",
                        "4 * e1 >= -7 + b1",
                        "4 * e1 <= -5 + b1",
                        "4 * e2 <= -2 + b2",
                        "4 * e2 >= -4 + b2"
                    ]
                }
            ],
            "formula": "((((((11/16 - 65/48 * b1 + 19/24 * b1^2 - 1/8 * b1^3) + (21/16 - 29/24 * b1 + 13/48 * b1^2) * b2 + (13/48 - 3/16 * b1) * b2^2 + 1/24 * b2^3) + (1/3 - 1/3 * b2) * floor((b1)/3)) + (-1/3 + 1/3 * b2) * floor((1 + b1)/3)) + (((-1/6 + 2/3 * b2) + floor((b1)/3)) - floor((1 + b1)/3)) * floor((b2)/3) - 1/2 * floor((b2)/3)^2) + ((-1/3 + 1/3 * b2) - floor((b2)/3)) * floor((1 + b2)/3))"
        },
        {
            "domain": [
                {
                    "quantifiers": {
                        "e0": "floor((-2 + b1)/4)",
                        "e1": "floor((-4 + b1)/4)",
                        "e2": "floor((-5 + b1)/4)",
                        "e3": "floor((-3 + b2)/4)",
                        "e4": "floor((-3 + b1)/4)"
                    },
                    "linear conditions": [
                        "s == -2 + b1",
                        "4 * e3 == -3 + b2",
                        "4 * e4 == -3 + b1",
                        "b2 >= b1",
                        "2 * b2 <= -9 + 3 * b1",
                        "4 * e0 >= -5 + b1",
                        "4 * e0 <= -3 + b1",
                        "4 * e1 >= -7 + b1",
                        "4 * e1 <= -5 + b1",
                        "4 * e2 >= -8 + b1",
                        "4 * e2 <= -6 + b1"
                    ]
                },
                {
                    "quantifiers": {
                        "e0": "floor((-2 + b1)/4)",
                        "e1": "floor((-4 + b1)/4)",
                        "e2": "floor((-5 + b1)/4)",
                        "e3": "floor((-1 + b2)/4)",
                        "e4": "floor((-3 + b1)/4)"
                    },
                    "linear conditions": [
                        "s == -2 + b1",
                        "4 * e3 == -1 + b2",
                        "4 * e4 == -3 + b1",
                        "b2 >= b1",
                        "2 * b2 <= -9 + 3 * b1",
                        "4 * e0 >= -5 + b1",
                        "4 * e0 <= -3 + b1",
                        "4 * e1 >= -7 + b1",
                        "4 * e1 <= -5 + b1",
                        "4 * e2 >= -8 + b1",
                        "4 * e2 <= -6 + b1"
                    ]
                }
            ],
            "formula": "((((((7/16 - 65/48 * b1 + 19/24 * b1^2 - 1/8 * b1^3) + (21/16 - 29/24 * b1 + 13/48 * b1^2) * b2 + (13/48 - 3/16 * b1) * b2^2 + 1/24 * b2^3) + (1/3 - 1/3 * b2) * floor((b1)/3)) + (-1/3 + 1/3 * b2) * floor((1 + b1)/3)) + (((-1/6 + 2/3 * b2) + floor((b1)/3)) - floor((1 + b1)/3)) * floor((b2)/3) - 1/2 * floor((b2)/3)^2) + ((-1/3 + 1/3 * b2) - floor((b2)/3)) * floor((1 + b2)/3))"
        },
        {
            "domain": [
                {
                    "quantifiers": {
                        "e0": "floor((b2)/4)",
                        "e1": "floor((-2 + b2)/4)",
                        "e2": "floor((-3 + b2)/4)",
                        "e3": "floor((-2 + b1)/4)"
                    },
                    "linear conditions": [
                        "s == -2 + b1",
                        "4 * e2 == -3 + b2",
                        "4 * e3 == -2 + b1",
                        "b2 >= 1 + b1",
                        "2 * b2 <= -8 + 3 * b1",
                        "4 * e0 <= -1 + b2",
                        "4 * e0 >= -3 + b2",
                        "4 * e1 <= -3 + b2",
                        "4 * e1 >= -5 + b2"
                    ]
                }
            ],
            "formula": "((((((11/16 - 77/48 * b1 + 19/24 * b1^2 - 1/8 * b1^3) + (3/2 - 29/24 * b1 + 13/48 * b1^2) * b2 + (13/48 - 3/16 * b1) * b2^2 + 1/24 * b2^3) + (1/3 - 1/3 * b2) * floor((b1)/3)) + (-1/3 + 1/3 * b2) * floor((1 + b1)/3)) + (((-1/6 + 2/3 * b2) + floor((b1)/3)) - floor((1 + b1)/3)) * floor((b2)/3) - 1/2 * floor((b2)/3)^2) + ((-1/3 + 1/3 * b2) - floor((b2)/3)) * floor((1 + b2)/3))"
        },
        {
            "domain": [
                {
                    "quantifiers": {
                        "e0": "floor((-2 + b1)/4)",
                        "e1": "floor((b2)/4)",
                        "e2": "floor((-2 + b2)/4)",
                        "e3": "floor((-1 + b2)/4)",
                        "e4": "floor((-4 + b1)/4)"
                    },
                    "linear conditions": [
                        "s == -2 + b1",
                        "4 * e3 == -1 + b2",
                        "4 * e4 == -4 + b1",
                        "b2 >= 1 + b1",
                        "2 * b2 <= -10 + 3 * b1",
                        "4 * e0 >= -5 + b1",
                        "4 * e0 <= -3 + b1",
                        "4 * e1 <= -1 + b2",
                        "4 * e1 >= -3 + b2",
                        "4 * e2 <= -3 + b2",
                        "4 * e2 >= -5 + b2"
                    ]
                }
            ],
            "formula": "((((((19/16 - 77/48 * b1 + 19/24 * b1^2 - 1/8 * b1^3) + (3/2 - 29/24 * b1 + 13/48 * b1^2) * b2 + (13/48 - 3/16 * b1) * b2^2 + 1/24 * b2^3) + (1/3 - 1/3 * b2) * floor((b1)/3)) + (-1/3 + 1/3 * b2) * floor((1 + b1)/3)) + (((-1/6 + 2/3 * b2) + floor((b1)/3)) - floor((1 + b1)/3)) * floor((b2)/3) - 1/2 * floor((b2)/3)^2) + ((-1/3 + 1/3 * b2) - floor((b2)/3)) * floor((1 + b2)/3))"
        },
        {
            "domain": [
                {
                    "quantifiers": {
                        "e0": "floor((-2 + b1)/4)",
                        "e1": "floor((b2)/4)",
                        "e2": "floor((-2 + b2)/4)",
                        "e3": "floor((-1 + b2)/4)",
                        "e4": "floor((-3 + b2)/4)",
                        "e5": "floor((-4 + b1)/4)"
                    },
                    "linear conditions": [
                        "s == -2 + b1",
                        "4 * e4 == -3 + b2",
                        "4 * e5 == -4 + b1",
                        "b2 >= 1 + b1",
                        "2 * b2 <= -8 + 3 * b1",
                        "4 * e0 >= -5 + b1",
                        "4 * e0 <= -3 + b1",
                        "4 * e1 >= -3 + b2",
                        "4 * e1 <= -1 + b2",
                        "4 * e2 >= -5 + b2",
                        "4 * e2 <= -3 + b2",
                        "4 * e3 >= -4 + b2",
                        "4 * e3 <= -2 + b2"
                    ]
                },
                {
                    "quantifiers": {
                        "e0": "floor((b2)/4)",
                        "e1": "floor((-2 + b2)/4)",
                        "e2": "floor((-3 + b2)/4)",
                        "e3": "floor((-1 + b2)/4)",
                        "e4": "floor((-2 + b1)/4)"
                    },
                    "linear conditions": [
                        "s == -2 + b1",
                        "4 * e3 == -1 + b2",
                        "4 * e4 == -2 + b1",
                        "b2 >= 1 + b1",
                        "2 * b2 <= -8 + 3 * b1",
                        "4 * e0 >= -3 + b2",
                        "4 * e0 <= -1 + b2",
                        "4 * e1 >= -5 + b2",
                        "4 * e1 <= -3 + b2",
                        "4 * e2 >= -6 + b2",
                        "4 * e2 <= -4 + b2"
                    ]
                }
            ],
            "formula": "((((((15/16 - 77/48 * b1 + 19/24 * b1^2 - 1/8 * b1^3) + (3/2 - 29/24 * b1 + 13/48 * b1^2) * b2 + (13/48 - 3/16 * b1) * b2^2 + 1/24 * b2^3) + (1/3 - 1/3 * b2) * floor((b1)/3)) + (-1/3 + 1/3 * b2) * floor((1 + b1)/3)) + (((-1/6 + 2/3 * b2) + floor((b1)/3)) - floor((1 + b1)/3)) * floor((b2)/3) - 1/2 * floor((b2)/3)^2) + ((-1/3 + 1/3 * b2) - floor((b2)/3)) * floor((1 + b2)/3))"
        },
        {
            "domain": [
                {
                    "quantifiers": {
                        "e0": "floor((-2 + b1)/4)",
                        "e1": "floor((-4 + b1)/4)",
                        "e2": "floor((-1 + b2)/4)",
                        "e3": "floor((-3 + b2)/4)",
                        "e4": "floor((-2 + b2)/4)",
                        "e5": "floor((-5 + b1)/4)"
                    },
                    "linear conditions": [
                        "s == -2 + b1",
                        "4 * e4 == -2 + b2",
                        "4 * e5 == -5 + b1",
                        "b2 >= b1",
                        "2 * b2 <= -8 + 3 * b1",
                        "4 * e0 >= -5 + b1",
                        "4 * e0 <= -3 + b1",
                        "4 * e1 >= -7 + b1",
                        "4 * e1 <= -5 + b1",
                        "4 * e2 >= -4 + b2",
                        "4 * e2 <= -2 + b2",
                        "4 * e3 >= -6 + b2",
                        "4 * e3 <= -4 + b2"
                    ]
                },
                {
                    "quantifiers": {
                        "e0": "floor((-2 + b1)/4)",
                        "e1": "floor((-4 + b1)/4)",
                        "e2": "floor((-5 + b1)/4)",
                        "e3": "floor((-3 + b2)/4)",
                        "e4": "floor((-1 + b2)/4)",
                        "e5": "floor((b2)/4)",
                        "e6": "floor((-3 + b1)/4)"
                    },
                    "linear conditions": [
                        "s == -2 + b1",
                        "4 * e5 == b2",
                        "4 * e6 == -3 + b1",
                        "b2 >= b1",
                        "2 * b2 <= -8 + 3 * b1",
                        "4 * e0 >= -5 + b1",
                        "4 * e0 <= -3 + b1",
                        "4 * e1 >= -7 + b1",
                        "4 * e1 <= -5 + b1",
                        "4 * e2 >= -8 + b1",
                        "4 * e2 <= -6 + b1",
                        "4 * e3 >= -6 + b2",
                        "4 * e3 <= -4 + b2",
                        "4 * e4 >= -4 + b2",
                        "4 * e4 <= -2 + b2"
                    ]
                },
                {
                    "quantifiers": {
                        "e0": "floor((-2 + b1)/4)",
                        "e1": "floor((-4 + b1)/4)",
                        "e2": "floor((-5 + b1)/4)",
                        "e3": "floor((-3 + b2)/4)",
                        "e4": "floor((-1 + b2)/4)",
                        "e5": "floor((-2 + b2)/4)",
                        "e6": "floor((-3 + b1)/4)"
                    },
                    "linear conditions": [
                        "s == -2 + b1",
                        "4 * e5 == -2 + b2",
                        "4 * e6 == -3 + b1",
                        "b2 >= b1",
                        "2 * b2 <= -8 + 3 * b1",
                        "4 * e0 >= -5 + b1",
                        "4 * e0 <= -3 + b1",
                        "4 * e1 >= -7 + b1",
                        "4 * e1 <= -5 + b1",
                        "4 * e2 >= -8 + b1",
                        "4 * e2 <= -6 + b1",
                        "4 * e3 >= -6 + b2",
                        "4 * e3 <= -4 + b2",
                        "4 * e4 >= -4 + b2",
                        "4 * e4 <= -2 + b2"
                    ]
                },
                {
                    "quantifiers": {
                        "e0": "floor((-2 + b1)/4)",
                        "e1": "floor((-4 + b1)/4)",
                        "e2": "floor((-1 + b2)/4)",
                        "e3": "floor((-3 + b2)/4)",
                        "e4": "floor((b2)/4)",
                        "e5": "floor((-5 + b1)/4)"
                    },
                    "linear conditions": [
                        "s == -2 + b1",
                        "4 * e4 == b2",
                        "4 * e5 == -5 + b1",
                        "b2 >= b1",
                        "2 * b2 <= -8 + 3 * b1",
                        "4 * e0 >= -5 + b1",
                        "4 * e0 <= -3 + b1",
                        "4 * e1 >= -7 + b1",
                        "4 * e1 <= -5 + b1",
                        "4 * e2 >= -4 + b2",
                        "4 * e2 <= -2 + b2",
                        "4 * e3 >= -6 + b2",
                        "4 * e3 <= -4 + b2"
                    ]
                }
            ],
            "formula": "((((((7/8 - 37/24 * b1 + 19/24 * b1^2 - 1/8 * b1^3) + (23/16 - 29/24 * b1 + 13/48 * b1^2) * b2 + (13/48 - 3/16 * b1) * b2^2 + 1/24 * b2^3) + (1/3 - 1/3 * b2) * floor((b1)/3)) + (-1/3 + 1/3 * b2) * floor((1 + b1)/3)) + (((-1/6 + 2/3 * b2) + floor((b1)/3)) - floor((1 + b1)/3)) * floor((b2)/3) - 1/2 * floor((b2)/3)^2) + ((-1/3 + 1/3 * b2) - floor((b2)/3)) * floor((1 + b2)/3))"
        },
        {
            "domain": [
                {
                    "quantifiers": {
                        "e0": "floor((b2)/4)",
                        "e1": "floor((-2 + b2)/4)",
                        "e2": "floor((-1 + b2)/4)",
                        "e3": "floor((-2 + b1 + b2)/4)"
                    },
                    "linear conditions": [
                        "2 * s == -2 + b1 + b2",
                        "4 * e2 == -1 + b2",
                        "4 * e3 == -2 + b1 + b2",
                        "b1 >= 5",
                        "b2 >= 2 + b1",
                        "4 * e0 <= -1 + b2",
                        "4 * e0 >= -3 + b2",
                        "4 * e1 <= -3 + b2",
                        "4 * e1 >= -5 + b2"
                    ]
                }
            ],
            "formula": "((((((((-5/16 + 1/48 * b1 - 5/48 * b1^2 - 1/48 * b1^3) + (-19/48 + 1/8 * b1 + 1/48 * b1^2) * b2) + (1/6 * b1 - 1/2 * b2) * floor((b1)/3)) + 1/3 * b1 * floor((1 + b1)/3)) + ((2/3 - 1/3 * b1) + floor((b1)/3)) * floor((b2)/3)) + (((1/3 - 2/3 * b1) + floor((b1)/3)) + floor((1 + b1)/3)) * floor((1 + b2)/3)) + (((-1/3 + 2/3 * b1) - floor((b1)/3)) - floor((1 + b1)/3)) * floor((1 + b1 + b2)/6)) + ((1/3 + 1/3 * b1) - floor((1 + b1)/3)) * floor((5 + b1 + b2)/6))"
        },
        {
            "domain": [
                {
                    "quantifiers": {
                        "e0": "floor((b2)/4)",
                        "e1": "floor((-2 + b2)/4)",
                        "e2": "floor((-1 + b2)/4)",
                        "e3": "floor((-2 + b1 + b2)/4)"
                    },
                    "linear conditions": [
                        "2 * s == b1 + b2",
                        "4 * e2 == -1 + b2",
                        "4 * e3 == -2 + b1 + b2",
                        "b1 >= 2",
                        "b2 >= 4 + b1",
                        "4 * e0 <= -1 + b2",
                        "4 * e0 >= -3 + b2",
                        "4 * e1 <= -3 + b2",
                        "4 * e1 >= -5 + b2"
                    ]
                }
            ],
            "formula": "((((((((3/16 - 11/48 * b1 - 3/16 * b1^2 - 1/48 * b1^3) + (-5/16 + 5/24 * b1 + 1/48 * b1^2) * b2) + ((2/3 + 1/6 * b1) - 1/2 * b2) * floor((b1)/3)) + (1/3 + 1/3 * b1) * floor((1 + b1)/3)) + ((2/3 - 1/3 * b1) + floor((b1)/3)) * floor((b2)/3)) + (((1/3 - 2/3 * b1) + floor((b1)/3)) + floor((1 + b1)/3)) * floor((1 + b2)/3)) + ((1/3 + 1/3 * b1) - floor((1 + b1)/3)) * floor((3 + b1 + b2)/6)) + (((-1/3 + 2/3 * b1) - floor((b1)/3)) - floor((1 + b1)/3)) * floor((5 + b1 + b2)/6))"
        },
        {
            "domain": [
                {
                    "quantifiers": {
                        "e0": "floor((b2)/4)",
                        "e1": "floor((-2 + b2)/4)",
                        "e2": "floor((-1 + b1)/4)",
                        "e3": "floor((-1 + b2)/4)"
                    },
                    "linear conditions": [
                        "4 * e2 == -1 + b1",
                        "4 * e3 == -1 + b2",
                        "b1 >= 2",
                        "2 * s >= 2 + b1 + b2",
                        "s <= -2 + b2",
                        "4 * e0 >= -3 + b2",
                        "4 * e0 <= -1 + b2",
                        "4 * e1 >= -5 + b2",
                        "4 * e1 <= -3 + b2"
                    ]
                }
            ],
            "formula": "(((((((((3/16 - 13/48 * b1 + 5/8 * b1^2) + (-17/48 + 23/24 * b1 - 1/48 * b1^2) * b2 + (-1/16 - 1/16 * b1) * b2^2) + ((1/12 + 5/12 * b1) + (1/6 + 1/6 * b1) * b2) * s + (-1/12 - 1/12 * b1) * s^2) + (((2/3 - 2/3 * b1) - 4/3 * b2) - 1/3 * s) * floor((b1)/3)) + (((1/3 - 4/3 * b1) - 5/3 * b2) - 2/3 * s) * floor((1 + b1)/3)) + ((2/3 - 1/3 * b1) + floor((b1)/3)) * floor((b2)/3)) + (((1/3 - 2/3 * b1) + floor((b1)/3)) + floor((1 + b1)/3)) * floor((1 + b2)/3)) + (((1/3 - 2/3 * b1) + floor((b1)/3)) + floor((1 + b1)/3)) * floor((2b1 + 2b2 + s)/3)) + ((-1/3 - 1/3 * b1) + floor((1 + b1)/3)) * floor((1 + 2b1 + 2b2 + s)/3))"
        },
        {
            "domain": [
                {
                    "quantifiers": {
                        "e0": "floor((-4 + b1)/4)",
                        "e1": "floor((-2 + b1)/4)",
                        "e2": "floor((-1 + b1)/4)"
                    },
                    "linear conditions": [
                        "b2 == b1",
                        "s == -1 + b1",
                        "4 * e2 == -1 + b1",
                        "b1 >= 5",
                        "4 * e0 <= -5 + b1",
                        "4 * e0 >= -7 + b1",
                        "4 * e1 <= -3 + b1",
                        "4 * e1 >= -5 + b1"
                    ]
                }
            ],
            "formula": "(((-5/16 - 5/24 * b1 + 25/48 * b1^2) + (1/3 - 4/3 * b1) * floor((b1)/3) + floor((b1)/3)^2) + ((1/6 - 5/3 * b1) + 2 * floor((b1)/3)) * floor((2 + b1)/3) + 3/2 * floor((2 + b1)/3)^2)"
        },
        {
            "domain": [
                {
                    "quantifiers": {
                        "e0": "floor((b1)/4)",
                        "e1": "floor((-1 + b1)/4)"
                    },
                    "linear conditions": [
                        "b2 == b1",
                        "s == b1",
                        "4 * e1 == -1 + b1",
                        "b1 >= 2",
                        "4 * e0 <= -1 + b1",
                        "4 * e0 >= -3 + b1"
                    ]
                }
            ],
            "formula": "(((3/16 + 7/24 * b1 + 3/16 * b1^2) + (1/2 - 1/3 * b1) * floor((b1)/3) + 1/2 * floor((b1)/3)^2) + (-1 - 2/3 * b1) * floor((2 + b1)/3) + floor((2 + b1)/3)^2)"
        },
        {
            "domain": [
                {
                    "quantifiers": {
                        "e0": "floor((b2)/4)",
                        "e1": "floor((-2 + b2)/4)",
                        "e2": "floor((-1 + b1)/4)",
                        "e3": "floor((-1 + b2)/4)"
                    },
                    "linear conditions": [
                        "4 * e2 == -1 + b1",
                        "4 * e3 == -1 + b2",
                        "b1 >= 2",
                        "2 * s >= 2 + b1 + b2",
                        "s >= -1 + b2",
                        "s <= b2",
                        "4 * e0 >= -3 + b2",
                        "4 * e0 <= -1 + b2",
                        "4 * e1 >= -5 + b2",
                        "4 * e1 <= -3 + b2"
                    ]
                }
            ],
            "formula": "(((((((((3/16 - 5/48 * b1 + 1/8 * b1^2) + (-181/720 + 23/36 * b1 - 1/48 * b1^2) * b2 + (-19/144 - 5/72 * b1) * b2^2 + (-1/24 - 1/72 * b1) * b2^3 + (1/144 + 1/144 * b1) * b2^4 + 1/720 * b2^5) + ((53/360 - 19/72 * b1) + (-1/36 + 13/72 * b1) * b2 + (1/8 + 1/24 * b1) * b2^2 + (-1/36 - 1/36 * b1) * b2^3 - 1/144 * b2^4) * s + ((-23/72 - 13/144 * b1) + (-1/8 - 1/24 * b1) * b2 + (1/24 + 1/24 * b1) * b2^2 + 1/72 * b2^3) * s^2 + ((1/24 + 1/72 * b1) + (-1/36 - 1/36 * b1) * b2 - 1/72 * b2^2) * s^3 + ((1/144 + 1/144 * b1) + 1/144 * b2) * s^4 - 1/720 * s^5) + ((2/3 - 1/3 * b1) - 4/3 * b2) * floor((b1)/3)) + ((((1/6 - 2/3 * b1) - 4/3 * b2) - 1/3 * s) - 1/3 * floor((b1)/3)) * floor((1 + b1)/3) - 1/6 * floor((1 + b1)/3)^2) + ((2/3 - 1/3 * b1) + floor((b1)/3)) * floor((b2)/3)) + (((1/3 - 2/3 * b1) + floor((b1)/3)) + floor((1 + b1)/3)) * floor((1 + b2)/3)) + ((((1/6 + 1/3 * b2) + 1/3 * s) + 2/3 * floor((b1)/3)) + 2/3 * floor((1 + b1)/3)) * floor((2b1 + 2b2 + s)/3) - 1/6 * floor((2b1 + 2b2 + s)/3)^2) + (((-1/3 + 1/3 * s) + 2/3 * floor((1 + b1)/3)) - 1/3 * floor((2b1 + 2b2 + s)/3)) * floor((1 + 2b1 + 2b2 + s)/3))"
        },
        {
            "domain": [
                {
                    "quantifiers": {
                        "e0": "floor((-2 + b1 + b2)/4)",
                        "e1": "floor((b2)/4)",
                        "e2": "floor((-2 + b2)/4)",
                        "e3": "floor((-3 + b2)/4)",
                        "e4": "floor((-4 + b1 + b2)/4)"
                    },
                    "linear conditions": [
                        "2 * s == -2 + b1 + b2",
                        "4 * e3 == -3 + b2",
                        "4 * e4 == -4 + b1 + b2",
                        "b1 >= 5",
                        "b2 >= 2 + b1",
                        "4 * e0 >= -5 + b1 + b2",
                        "4 * e0 <= -3 + b1 + b2",
                        "4 * e1 <= -1 + b2",
                        "4 * e1 >= -3 + b2",
                        "4 * e2 <= -3 + b2",
                        "4 * e2 >= -5 + b2"
                    ]
                }
            ],
            "formula": "((((((((3/16 + 1/48 * b1 - 5/48 * b1^2 - 1/48 * b1^3) + (-19/48 + 1/8 * b1 + 1/48 * b1^2) * b2) + (1/6 * b1 - 1/2 * b2) * floor((b1)/3)) + 1/3 * b1 * floor((1 + b1)/3)) + ((2/3 - 1/3 * b1) + floor((b1)/3)) * floor((b2)/3)) + (((1/3 - 2/3 * b1) + floor((b1)/3)) + floor((1 + b1)/3)) * floor((1 + b2)/3)) + (((-1/3 + 2/3 * b1) - floor((b1)/3)) - floor((1 + b1)/3)) * floor((1 + b1 + b2)/6)) + ((1/3 + 1/3 * b1) - floor((1 + b1)/3)) * floor((5 + b1 + b2)/6))"
        },
        {
            "domain": [
                {
                    "quantifiers": {
                        "e0": "floor((b2)/4)",
                        "e1": "floor((-2 + b2)/4)",
                        "e2": "floor((-1 + b2)/4)",
                        "e3": "floor((-3 + b2)/4)",
                        "e4": "floor((-2 + b1 + b2)/4)"
                    },
                    "linear conditions": [
                        "2 * s == -2 + b1 + b2",
                        "4 * e3 == -3 + b2",
                        "4 * e4 == -2 + b1 + b2",
                        "b1 >= 5",
                        "b2 >= 2 + b1",
                        "4 * e0 >= -3 + b2",
                        "4 * e0 <= -1 + b2",
                        "4 * e1 >= -5 + b2",
                        "4 * e1 <= -3 + b2",
                        "4 * e2 >= -4 + b2",
                        "4 * e2 <= -2 + b2"
                    ]
                },
                {
                    "quantifiers": {
                        "e0": "floor((-2 + b1 + b2)/4)",
                        "e1": "floor((b2)/4)",
                        "e2": "floor((-2 + b2)/4)",
                        "e3": "floor((-3 + b2)/4)",
                        "e4": "floor((-1 + b2)/4)",
                        "e5": "floor((-4 + b1 + b2)/4)"
                    },
                    "linear conditions": [
                        "2 * s == -2 + b1 + b2",
                        "4 * e4 == -1 + b2",
                        "4 * e5 == -4 + b1 + b2",
                        "b1 >= 5",
                        "b2 >= 2 + b1",
                        "4 * e0 >= -5 + b1 + b2",
                        "4 * e0 <= -3 + b1 + b2",
                        "4 * e1 >= -3 + b2",
                        "4 * e1 <= -1 + b2",
                        "4 * e2 >= -5 + b2",
                        "4 * e2 <= -3 + b2",
                        "4 * e3 >= -6 + b2",
                        "4 * e3 <= -4 + b2"
                    ]
                }
            ],
            "formula": "((((((((-1/16 + 1/48 * b1 - 5/48 * b1^2 - 1/48 * b1^3) + (-19/48 + 1/8 * b1 + 1/48 * b1^2) * b2) + (1/6 * b1 - 1/2 * b2) * floor((b1)/3)) + 1/3 * b1 * floor((1 + b1)/3)) + ((2/3 - 1/3 * b1) + floor((b1)/3)) * floor((b2)/3)) + (((1/3 - 2/3 * b1) + floor((b1)/3)) + floor((1 + b1)/3)) * floor((1 + b2)/3)) + (((-1/3 + 2/3 * b1) - floor((b1)/3)) - floor((1 + b1)/3)) * floor((1 + b1 + b2)/6)) + ((1/3 + 1/3 * b1) - floor((1 + b1)/3)) * floor((5 + b1 + b2)/6))"
        },
        {
            "domain": [
                {
                    "quantifiers": {
                        "e0": "floor((-2 + b1 + b2)/4)",
                        "e1": "floor((b2)/4)",
                        "e2": "floor((-2 + b2)/4)",
                        "e3": "floor((-3 + b2)/4)",
                        "e4": "floor((b1 + b2)/4)"
                    },
                    "linear conditions": [
                        "2 * s == b1 + b2",
                        "4 * e3 == -3 + b2",
                        "4 * e4 == b1 + b2",
                        "b1 >= 2",
                        "b2 >= 4 + b1",
                        "4 * e0 >= -5 + b1 + b2",
                        "4 * e0 <= -3 + b1 + b2",
                        "4 * e1 <= -1 + b2",
                        "4 * e1 >= -3 + b2",
                        "4 * e2 <= -3 + b2",
                        "4 * e2 >= -5 + b2"
                    ]
                }
            ],
            "formula": "((((((((11/16 - 11/48 * b1 - 3/16 * b1^2 - 1/48 * b1^3) + (-5/16 + 5/24 * b1 + 1/48 * b1^2) * b2) + ((2/3 + 1/6 * b1) - 1/2 * b2) * floor((b1)/3)) + (1/3 + 1/3 * b1) * floor((1 + b1)/3)) + ((2/3 - 1/3 * b1) + floor((b1)/3)) * floor((b2)/3)) + (((1/3 - 2/3 * b1) + floor((b1)/3)) + floor((1 + b1)/3)) * floor((1 + b2)/3)) + ((1/3 + 1/3 * b1) - floor((1 + b1)/3)) * floor((3 + b1 + b2)/6)) + (((-1/3 + 2/3 * b1) - floor((b1)/3)) - floor((1 + b1)/3)) * floor((5 + b1 + b2)/6))"
        },
        {
            "domain": [
                {
                    "quantifiers": {
                        "e0": "floor((b2)/4)",
                        "e1": "floor((-2 + b2)/4)",
                        "e2": "floor((-1 + b2)/4)",
                        "e3": "floor((-1 + b1)/4)",
                        "e4": "floor((-3 + b2)/4)"
                    },
                    "linear conditions": [
                        "4 * e3 == -1 + b1",
                        "4 * e4 == -3 + b2",
                        "b1 >= 2",
                        "2 * s >= 2 + b1 + b2",
                        "s <= -2 + b2",
                        "4 * e0 >= -3 + b2",
                        "4 * e0 <= -1 + b2",
                        "4 * e1 >= -5 + b2",
                        "4 * e1 <= -3 + b2",
                        "4 * e2 <= -2 + b2",
                        "4 * e2 >= -4 + b2"
                    ]
                }
            ],
            "formula": "(((((((((11/16 - 13/48 * b1 + 5/8 * b1^2) + (-17/48 + 23/24 * b1 - 1/48 * b1^2) * b2 + (-1/16 - 1/16 * b1) * b2^2) + ((1/12 + 5/12 * b1) + (1/6 + 1/6 * b1) * b2) * s + (-1/12 - 1/12 * b1) * s^2) + (((2/3 - 2/3 * b1) - 4/3 * b2) - 1/3 * s) * floor((b1)/3)) + (((1/3 - 4/3 * b1) - 5/3 * b2) - 2/3 * s) * floor((1 + b1)/3)) + ((2/3 - 1/3 * b1) + floor((b1)/3)) * floor((b2)/3)) + (((1/3 - 2/3 * b1) + floor((b1)/3)) + floor((1 + b1)/3)) * floor((1 + b2)/3)) + (((1/3 - 2/3 * b1) + floor((b1)/3)) + floor((1 + b1)/3)) * floor((2b1 + 2b2 + s)/3)) + ((-1/3 - 1/3 * b1) + floor((1 + b1)/3)) * floor((1 + 2b1 + 2b2 + s)/3))"
        },
        {
            "domain": [
                {
                    "quantifiers": {
                        "e0": "floor((b2)/4)",
                        "e1": "floor((-2 + b2)/4)",
                        "e2": "floor((-1 + b2)/4)",
                        "e3": "floor((-3 + b2)/4)",
                        "e4": "floor((-2 + b1 + b2)/4)"
                    },
                    "linear conditions": [
                        "2 * s == b1 + b2",
                        "4 * e3 == -3 + b2",
                        "4 * e4 == -2 + b1 + b2",
                        "b1 >= 2",
                        "b2 >= 4 + b1",
                        "4 * e0 >= -3 + b2",
                        "4 * e0 <= -1 + b2",
                        "4 * e1 >= -5 + b2",
                        "4 * e1 <= -3 + b2",
                        "4 * e2 >= -4 + b2",
                        "4 * e2 <= -2 + b2"
                    ]
                },
                {
                    "quantifiers": {
                        "e0": "floor((-2 + b1 + b2)/4)",
                        "e1": "floor((b2)/4)",
                        "e2": "floor((-2 + b2)/4)",
                        "e3": "floor((-3 + b2)/4)",
                        "e4": "floor((-1 + b2)/4)",
                        "e5": "floor((b1 + b2)/4)"
                    },
                    "linear conditions": [
                        "2 * s == b1 + b2",
                        "4 * e4 == -1 + b2",
                        "4 * e5 == b1 + b2",
                        "b1 >= 2",
                        "b2 >= 4 + b1",
                        "4 * e0 >= -5 + b1 + b2",
                        "4 * e0 <= -3 + b1 + b2",
                        "4 * e1 >= -3 + b2",
                        "4 * e1 <= -1 + b2",
                        "4 * e2 >= -5 + b2",
                        "4 * e2 <= -3 + b2",
                        "4 * e3 >= -6 + b2",
                        "4 * e3 <= -4 + b2"
                    ]
                }
            ],
            "formula": "((((((((7/16 - 11/48 * b1 - 3/16 * b1^2 - 1/48 * b1^3) + (-5/16 + 5/24 * b1 + 1/48 * b1^2) * b2) + ((2/3 + 1/6 * b1) - 1/2 * b2) * floor((b1)/3)) + (1/3 + 1/3 * b1) * floor((1 + b1)/3)) + ((2/3 - 1/3 * b1) + floor((b1)/3)) * floor((b2)/3)) + (((1/3 - 2/3 * b1) + floor((b1)/3)) + floor((1 + b1)/3)) * floor((1 + b2)/3)) + ((1/3 + 1/3 * b1) - floor((1 + b1)/3)) * floor((3 + b1 + b2)/6)) + (((-1/3 + 2/3 * b1) - floor((b1)/3)) - floor((1 + b1)/3)) * floor((5 + b1 + b2)/6))"
        },
        {
            "domain": [
                {
                    "quantifiers": {
                        "e0": "floor((b2)/4)",
                        "e1": "floor((-2 + b2)/4)",
                        "e2": "floor((-1 + b2)/4)",
                        "e3": "floor((-1 + b1)/4)",
                        "e4": "floor((-3 + b1)/4)",
                        "e5": "floor((-3 + b2)/4)"
                    },
                    "linear conditions": [
                        "4 * e4 == -3 + b1",
                        "4 * e5 == -3 + b2",
                        "b1 >= 2",
                        "2 * s >= 2 + b1 + b2",
                        "s <= -2 + b2",
                        "4 * e0 >= -3 + b2",
                        "4 * e0 <= -1 + b2",
                        "4 * e1 >= -5 + b2",
                        "4 * e1 <= -3 + b2",
                        "4 * e2 >= -4 + b2",
                        "4 * e2 <= -2 + b2",
                        "4 * e3 >= -4 + b1",
                        "4 * e3 <= -2 + b1"
                    ]
                },
                {
                    "quantifiers": {
                        "e0": "floor((b2)/4)",
                        "e1": "floor((-2 + b2)/4)",
                        "e2": "floor((-1 + b1)/4)",
                        "e3": "floor((-3 + b1)/4)",
                        "e4": "floor((-1 + b2)/4)"
                    },
                    "linear conditions": [
                        "4 * e3 == -3 + b1",
                        "4 * e4 == -1 + b2",
                        "b1 >= 2",
                        "2 * s >= 2 + b1 + b2",
                        "s <= -2 + b2",
                        "4 * e0 >= -3 + b2",
                        "4 * e0 <= -1 + b2",
                        "4 * e1 >= -5 + b2",
                        "4 * e1 <= -3 + b2",
                        "4 * e2 >= -4 + b1",
                        "4 * e2 <= -2 + b1"
                    ]
                }
            ],
            "formula": "(((((((((7/16 - 13/48 * b1 + 5/8 * b1^2) + (-17/48 + 23/24 * b1 - 1/48 * b1^2) * b2 + (-1/16 - 1/16 * b1) * b2^2) + ((1/12 + 5/12 * b1) + (1/6 + 1/6 * b1) * b2) * s + (-1/12 - 1/12 * b1) * s^2) + (((2/3 - 2/3 * b1) - 4/3 * b2) - 1/3 * s) * floor((b1)/3)) + (((1/3 - 4/3 * b1) - 5/3 * b2) - 2/3 * s) * floor((1 + b1)/3)) + ((2/3 - 1/3 * b1) + floor((b1)/3)) * floor((b2)/3)) + (((1/3 - 2/3 * b1) + floor((b1)/3)) + floor((1 + b1)/3)) * floor((1 + b2)/3)) + (((1/3 - 2/3 * b1) + floor((b1)/3)) + floor((1 + b1)/3)) * floor((2b1 + 2b2 + s)/3)) + ((-1/3 - 1/3 * b1) + floor((1 + b1)/3)) * floor((1 + 2b1 + 2b2 + s)/3))"
        },
        {
            "domain": [
                {
                    "quantifiers": {
                        "e0": "floor((-3 + b2)/4)",
                        "e1": "floor((-1 + b1 + b2)/4)"
                    },
                    "linear conditions": [
                        "2 * s == -1 + b1 + b2",
                        "4 * e0 == -3 + b2",
                        "4 * e1 == -1 + b1 + b2",
                        "b1 >= 2",
                        "b2 >= 3 + b1"
                    ]
                },
                {
                    "quantifiers": {
                        "e0": "floor((-3 + b2)/4)",
                        "e1": "floor((-3 + b1 + b2)/4)"
                    },
                    "linear conditions": [
                        "2 * s == -1 + b1 + b2",
                        "4 * e0 == -3 + b2",
                        "4 * e1 == -3 + b1 + b2",
                        "b1 >= 2",
                        "b2 >= 3 + b1"
                    ]
                },
                {
                    "quantifiers": {
                        "e0": "floor((-1 + b2)/4)",
                        "e1": "floor((-3 + b1 + b2)/4)"
                    },
                    "linear conditions": [
                        "2 * s == -1 + b1 + b2",
                        "4 * e0 == -1 + b2",
                        "4 * e1 == -3 + b1 + b2",
                        "b1 >= 2",
                        "b2 >= 3 + b1"
                    ]
                }
            ],
            "formula": "((((((((-1/12 + 1/4 * b1 - 7/48 * b1^2 - 1/48 * b1^3) + (-5/12 + 1/6 * b1 + 1/48 * b1^2) * b2) + ((-1/6 + 1/6 * b1) - 1/2 * b2) * floor((b1)/3)) + (-1/3 + 1/3 * b1) * floor((1 + b1)/3)) + ((2/3 - 1/3 * b1) + floor((b1)/3)) * floor((b2)/3)) + (((1/3 - 2/3 * b1) + floor((b1)/3)) + floor((1 + b1)/3)) * floor((1 + b2)/3)) + (((-1/3 + 2/3 * b1) - floor((b1)/3)) - floor((1 + b1)/3)) * floor((b1 + b2)/6)) + ((1/3 + 1/3 * b1) - floor((1 + b1)/3)) * floor((4 + b1 + b2)/6))"
        },
        {
            "domain": [
                {
                    "quantifiers": {
                        "e0": "floor((b2)/4)",
                        "e1": "floor((-2 + b2)/4)",
                        "e2": "floor((-1 + b2)/4)",
                        "e3": "floor((-1 + b1)/4)",
                        "e4": "floor((-3 + b1)/4)",
                        "e5": "floor((-2 + b1)/4)",
                        "e6": "floor((-3 + b2)/4)"
                    },
                    "linear conditions": [
                        "4 * e5 == -2 + b1",
                        "4 * e6 == -3 + b2",
                        "b1 >= 2",
                        "2 * s >= 1 + b1 + b2",
                        "s <= -2 + b2",
                        "4 * e0 <= -1 + b2",
                        "4 * e0 >= -3 + b2",
                        "4 * e1 >= -5 + b2",
                        "4 * e1 <= -3 + b2",
                        "4 * e2 >= -4 + b2",
                        "4 * e2 <= -2 + b2",
                        "4 * e3 <= -2 + b1",
                        "4 * e3 >= -4 + b1",
                        "4 * e4 <= -4 + b1",
                        "4 * e4 >= -6 + b1"
                    ]
                }
            ],
            "formula": "((((((((((-1/16 - 7/48 * b1 + 5/8 * b1^2) + (-1/24 + 23/24 * b1 - 1/48 * b1^2) * b2 + (-1/16 - 1/16 * b1) * b2^2) + ((1/12 + 5/12 * b1) + (1/6 + 1/6 * b1) * b2) * s + (-1/12 - 1/12 * b1) * s^2) + (((2/3 - 2/3 * b1) - 4/3 * b2) - 1/3 * s) * floor((b1)/3)) + (((1/3 - 4/3 * b1) - 5/3 * b2) - 2/3 * s) * floor((1 + b1)/3)) + ((2/3 - 1/3 * b1) + floor((b1)/3)) * floor((b2)/3)) + (((1/3 - 2/3 * b1) + floor((b1)/3)) + floor((1 + b1)/3)) * floor((1 + b2)/3)) - 1/2 * floor((b2 + s)/2)) + (((1/3 - 2/3 * b1) + floor((b1)/3)) + floor((1 + b1)/3)) * floor((2b1 + 2b2 + s)/3)) + ((-1/3 - 1/3 * b1) + floor((1 + b1)/3)) * floor((1 + 2b1 + 2b2 + s)/3))"
        },
        {
            "domain": [
                {
                    "quantifiers": {
                        "e0": "floor((-3 + b2)/4)",
                        "e1": "floor((-3 + b1 + b2)/4)",
                        "e2": "floor((-1 + b2)/4)",
                        "e3": "floor((-1 + b1 + b2)/4)"
                    },
                    "linear conditions": [
                        "2 * s == -1 + b1 + b2",
                        "4 * e2 == -1 + b2",
                        "4 * e3 == -1 + b1 + b2",
                        "b1 >= 4",
                        "b2 >= 3 + b1",
                        "4 * e0 <= -4 + b2",
                        "4 * e0 >= -6 + b2",
                        "4 * e1 <= -4 + b1 + b2",
                        "4 * e1 >= -6 + b1 + b2"
                    ]
                }
            ],
            "formula": "((((((((5/12 + 1/4 * b1 - 7/48 * b1^2 - 1/48 * b1^3) + (-5/12 + 1/6 * b1 + 1/48 * b1^2) * b2) + ((-1/6 + 1/6 * b1) - 1/2 * b2) * floor((b1)/3)) + (-1/3 + 1/3 * b1) * floor((1 + b1)/3)) + ((2/3 - 1/3 * b1) + floor((b1)/3)) * floor((b2)/3)) + (((1/3 - 2/3 * b1) + floor((b1)/3)) + floor((1 + b1)/3)) * floor((1 + b2)/3)) + (((-1/3 + 2/3 * b1) - floor((b1)/3)) - floor((1 + b1)/3)) * floor((b1 + b2)/6)) + ((1/3 + 1/3 * b1) - floor((1 + b1)/3)) * floor((4 + b1 + b2)/6))"
        },
        {
            "domain": [
                {
                    "quantifiers": {
                        "e0": "floor((-2 + b2)/4)",
                        "e1": "floor((b2)/4)"
                    },
                    "linear conditions": [
                        "b1 == 0",
                        "2 * s == b2",
                        "4 * e1 == b2",
                        "b2 >= 4",
                        "4 * e0 <= -3 + b2",
                        "4 * e0 >= -5 + b2"
                    ]
                }
            ],
            "formula": "(-1/4 * b2 + floor((b2)/3))"
        },
        {
            "domain": [
                {
                    "quantifiers": {
                        "e0": "floor((b2)/4)",
                        "e1": "floor((-2 + b2)/4)",
                        "e2": "floor((-1 + b1)/4)",
                        "e3": "floor((-3 + b1)/4)",
                        "e4": "floor((b1)/4)",
                        "e5": "floor((-1 + b2)/4)"
                    },
                    "linear conditions": [
                        "4 * e4 == b1",
                        "4 * e5 == -1 + b2",
                        "b1 >= 2",
                        "2 * s >= 1 + b1 + b2",
                        "s <= -2 + b2",
                        "4 * e0 >= -3 + b2",
                        "4 * e0 <= -1 + b2",
                        "4 * e1 >= -5 + b2",
                        "4 * e1 <= -3 + b2",
                        "4 * e2 <= -2 + b1",
                        "4 * e2 >= -4 + b1",
                        "4 * e3 <= -4 + b1",
                        "4 * e3 >= -6 + b1"
                    ]
                }
            ],
            "formula": "((((((((((7/16 - 7/48 * b1 + 5/8 * b1^2) + (-1/24 + 23/24 * b1 - 1/48 * b1^2) * b2 + (-1/16 - 1/16 * b1) * b2^2) + ((1/12 + 5/12 * b1) + (1/6 + 1/6 * b1) * b2) * s + (-1/12 - 1/12 * b1) * s^2) + (((2/3 - 2/3 * b1) - 4/3 * b2) - 1/3 * s) * floor((b1)/3)) + (((1/3 - 4/3 * b1) - 5/3 * b2) - 2/3 * s) * floor((1 + b1)/3)) + ((2/3 - 1/3 * b1) + floor((b1)/3)) * floor((b2)/3)) + (((1/3 - 2/3 * b1) + floor((b1)/3)) + floor((1 + b1)/3)) * floor((1 + b2)/3)) - 1/2 * floor((b2 + s)/2)) + (((1/3 - 2/3 * b1) + floor((b1)/3)) + floor((1 + b1)/3)) * floor((2b1 + 2b2 + s)/3)) + ((-1/3 - 1/3 * b1) + floor((1 + b1)/3)) * floor((1 + 2b1 + 2b2 + s)/3))"
        },
        {
            "domain": [
                {
                    "quantifiers": {
                        "e0": "floor((b2)/4)",
                        "e1": "floor((-2 + b2)/4)",
                        "e2": "floor((-1 + b2)/4)",
                        "e3": "floor((-1 + b1)/4)",
                        "e4": "floor((-3 + b1)/4)",
                        "e5": "floor((-2 + b1)/4)",
                        "e6": "floor((b1)/4)",
                        "e7": "floor((-3 + b2)/4)"
                    },
                    "linear conditions": [
                        "4 * e6 == b1",
                        "4 * e7 == -3 + b2",
                        "b1 >= 2",
                        "2 * s >= 1 + b1 + b2",
                        "s <= -2 + b2",
                        "4 * e0 >= -3 + b2",
                        "4 * e0 <= -1 + b2",
                        "4 * e1 >= -5 + b2",
                        "4 * e1 <= -3 + b2",
                        "4 * e2 >= -4 + b2",
                        "4 * e2 <= -2 + b2",
                        "4 * e3 >= -4 + b1",
                        "4 * e3 <= -2 + b1",
                        "4 * e4 >= -6 + b1",
                        "4 * e4 <= -4 + b1",
                        "4 * e5 >= -5 + b1",
                        "4 * e5 <= -3 + b1"
                    ]
                },
                {
                    "quantifiers": {
                        "e0": "floor((b2)/4)",
                        "e1": "floor((-2 + b2)/4)",
                        "e2": "floor((-1 + b1)/4)",
                        "e3": "floor((-3 + b1)/4)",
                        "e4": "floor((b1)/4)",
                        "e5": "floor((-2 + b1)/4)",
                        "e6": "floor((-1 + b2)/4)"
                    },
                    "linear conditions": [
                        "4 * e5 == -2 + b1",
                        "4 * e6 == -1 + b2",
                        "b1 >= 2",
                        "2 * s >= 1 + b1 + b2",
                        "s <= -2 + b2",
                        "4 * e0 >= -3 + b2",
                        "4 * e0 <= -1 + b2",
                        "4 * e1 >= -5 + b2",
                        "4 * e1 <= -3 + b2",
                        "4 * e2 >= -4 + b1",
                        "4 * e2 <= -2 + b1",
                        "4 * e3 >= -6 + b1",
                        "4 * e3 <= -4 + b1",
                        "4 * e4 >= -3 + b1",
                        "4 * e4 <= -1 + b1"
                    ]
                }
            ],
            "formula": "((((((((((3/16 - 7/48 * b1 + 5/8 * b1^2) + (-1/24 + 23/24 * b1 - 1/48 * b1^2) * b2 + (-1/16 - 1/16 * b1) * b2^2) + ((1/12 + 5/12 * b1) + (1/6 + 1/6 * b1) * b2) * s + (-1/12 - 1/12 * b1) * s^2) + (((2/3 - 2/3 * b1) - 4/3 * b2) - 1/3 * s) * floor((b1)/3)) + (((1/3 - 4/3 * b1) - 5/3 * b2) - 2/3 * s) * floor((1 + b1)/3)) + ((2/3 - 1/3 * b1) + floor((b1)/3)) * floor((b2)/3)) + (((1/3 - 2/3 * b1) + floor((b1)/3)) + floor((1 + b1)/3)) * floor((1 + b2)/3)) - 1/2 * floor((b2 + s)/2)) + (((1/3 - 2/3 * b1) + floor((b1)/3)) + floor((1 + b1)/3)) * floor((2b1 + 2b2 + s)/3)) + ((-1/3 - 1/3 * b1) + floor((1 + b1)/3)) * floor((1 + 2b1 + 2b2 + s)/3))"
        },
        {
            "domain": [
                {
                    "quantifiers": {
                        "e0": "floor((-3 + b2)/4)",
                        "e1": "floor((-3 + b1 + b2)/4)",
                        "e2": "floor((-1 + b2)/4)",
                        "e3": "floor((-2 + b2)/4)",
                        "e4": "floor((-1 + b1 + b2)/4)"
                    },
                    "linear conditions": [
                        "2 * s == -1 + b1 + b2",
                        "4 * e3 == -2 + b2",
                        "4 * e4 == -1 + b1 + b2",
                        "b1 >= 2",
                        "b2 >= 3 + b1",
                        "4 * e0 >= -6 + b2",
                        "4 * e0 <= -4 + b2",
                        "4 * e1 >= -6 + b1 + b2",
                        "4 * e1 <= -4 + b1 + b2",
                        "4 * e2 >= -4 + b2",
                        "4 * e2 <= -2 + b2"
                    ]
                },
                {
                    "quantifiers": {
                        "e0": "floor((-3 + b2)/4)",
                        "e1": "floor((-1 + b1 + b2)/4)",
                        "e2": "floor((-1 + b2)/4)",
                        "e3": "floor((-2 + b2)/4)",
                        "e4": "floor((-3 + b1 + b2)/4)"
                    },
                    "linear conditions": [
                        "2 * s == -1 + b1 + b2",
                        "4 * e3 == -2 + b2",
                        "4 * e4 == -3 + b1 + b2",
                        "b1 >= 2",
                        "b2 >= 3 + b1",
                        "4 * e0 >= -6 + b2",
                        "4 * e0 <= -4 + b2",
                        "4 * e1 >= -4 + b1 + b2",
                        "4 * e1 <= -2 + b1 + b2",
                        "4 * e2 >= -4 + b2",
                        "4 * e2 <= -2 + b2"
                    ]
                },
                {
                    "quantifiers": {
                        "e0": "floor((-2 + b1)/4)",
                        "e1": "floor((-3 + b2)/4)",
                        "e2": "floor((-3 + b1 + b2)/4)",
                        "e3": "floor((-1 + b2)/4)",
                        "e4": "floor((b2)/4)",
                        "e5": "floor((-1 + b1 + b2)/4)"
                    },
                    "linear conditions": [
                        "2 * s == -1 + b1 + b2",
                        "4 * e4 == b2",
                        "4 * e5 == -1 + b1 + b2",
                        "b1 >= 2",
                        "b2 >= 3 + b1",
                        "4 * e0 >= -5 + b1",
                        "4 * e0 <= -3 + b1",
                        "4 * e1 >= -6 + b2",
                        "4 * e1 <= -4 + b2",
                        "4 * e2 >= -6 + b1 + b2",
                        "4 * e2 <= -4 + b1 + b2",
                        "4 * e3 >= -4 + b2",
                        "4 * e3 <= -2 + b2"
                    ]
                },
                {
                    "quantifiers": {
                        "e0": "floor((-2 + b1)/4)",
                        "e1": "floor((-3 + b2)/4)",
                        "e2": "floor((-1 + b1 + b2)/4)",
                        "e3": "floor((-1 + b2)/4)",
                        "e4": "floor((b2)/4)",
                        "e5": "floor((-3 + b1 + b2)/4)"
                    },
                    "linear conditions": [
                        "2 * s == -1 + b1 + b2",
                        "4 * e4 == b2",
                        "4 * e5 == -3 + b1 + b2",
                        "b1 >= 2",
                        "b2 >= 3 + b1",
                        "4 * e0 >= -5 + b1",
                        "4 * e0 <= -3 + b1",
                        "4 * e1 >= -6 + b2",
                        "4 * e1 <= -4 + b2",
                        "4 * e2 >= -4 + b1 + b2",
                        "4 * e2 <= -2 + b1 + b2",
                        "4 * e3 >= -4 + b2",
                        "4 * e3 <= -2 + b2"
                    ]
                }
            ],
            "formula": "((((((((-1/48 + 3/16 * b1 - 7/48 * b1^2 - 1/48 * b1^3) + (-17/48 + 1/6 * b1 + 1/48 * b1^2) * b2) + ((-1/6 + 1/6 * b1) - 1/2 * b2) * floor((b1)/3)) + (-1/3 + 1/3 * b1) * floor((1 + b1)/3)) + ((2/3 - 1/3 * b1) + floor((b1)/3)) * floor((b2)/3)) + (((1/3 - 2/3 * b1) + floor((b1)/3)) + floor((1 + b1)/3)) * floor((1 + b2)/3)) + (((-1/3 + 2/3 * b1) - floor((b1)/3)) - floor((1 + b1)/3)) * floor((b1 + b2)/6)) + ((1/3 + 1/3 * b1) - floor((1 + b1)/3)) * floor((4 + b1 + b2)/6))"
        },
        {
            "domain": [
                {
                    "quantifiers": {
                        "e0": "floor((b2)/4)",
                        "e1": "floor((-1 + b1)/2)",
                        "e2": "floor((-2 + b2)/4)"
                    },
                    "linear conditions": [
                        "2 * e1 == -1 + b1",
                        "4 * e2 == -2 + b2",
                        "b1 >= 2",
                        "2 * s >= 1 + b1 + b2",
                        "s <= -2 + b2",
                        "4 * e0 >= -3 + b2",
                        "4 * e0 <= -1 + b2"
                    ]
                },
                {
                    "quantifiers": {
                        "e0": "floor((-2 + b1)/4)",
                        "e1": "floor((b1)/4)",
                        "e2": "floor((-1 + b1)/2)",
                        "e3": "floor((b2)/4)"
                    },
                    "linear conditions": [
                        "2 * e2 == -1 + b1",
                        "4 * e3 == b2",
                        "b1 >= 2",
                        "2 * s >= 1 + b1 + b2",
                        "s <= -2 + b2",
                        "4 * e0 >= -5 + b1",
                        "4 * e0 <= -3 + b1",
                        "4 * e1 >= -3 + b1",
                        "4 * e1 <= -1 + b1"
                    ]
                }
            ],
            "formula": "(((((((((3/8 - 1/3 * b1 + 5/8 * b1^2) + (-17/48 + 23/24 * b1 - 1/48 * b1^2) * b2 + (-1/16 - 1/16 * b1) * b2^2) + ((1/12 + 5/12 * b1) + (1/6 + 1/6 * b1) * b2) * s + (-1/12 - 1/12 * b1) * s^2) + (((2/3 - 2/3 * b1) - 4/3 * b2) - 1/3 * s) * floor((b1)/3)) + (((1/3 - 4/3 * b1) - 5/3 * b2) - 2/3 * s) * floor((1 + b1)/3)) + ((2/3 - 1/3 * b1) + floor((b1)/3)) * floor((b2)/3)) + (((1/3 - 2/3 * b1) + floor((b1)/3)) + floor((1 + b1)/3)) * floor((1 + b2)/3)) + (((1/3 - 2/3 * b1) + floor((b1)/3)) + floor((1 + b1)/3)) * floor((2b1 + 2b2 + s)/3)) + ((-1/3 - 1/3 * b1) + floor((1 + b1)/3)) * floor((1 + 2b1 + 2b2 + s)/3))"
        },
        {
            "domain": [
                {
                    "quantifiers": {
                        "e0": "floor((-4 + b1)/4)",
                        "e1": "floor((-2 + b1)/4)",
                        "e2": "floor((-1 + b1)/4)",
                        "e3": "floor((-3 + b1)/4)"
                    },
                    "linear conditions": [
                        "b2 == b1",
                        "s == -1 + b1",
                        "4 * e3 == -3 + b1",
                        "b1 >= 5",
                        "4 * e0 <= -5 + b1",
                        "4 * e0 >= -7 + b1",
                        "4 * e1 <= -3 + b1",
                        "4 * e1 >= -5 + b1",
                        "4 * e2 <= -2 + b1",
                        "4 * e2 >= -4 + b1"
                    ]
                }
            ],
            "formula": "(((-1/16 - 5/24 * b1 + 25/48 * b1^2) + (1/3 - 4/3 * b1) * floor((b1)/3) + floor((b1)/3)^2) + ((1/6 - 5/3 * b1) + 2 * floor((b1)/3)) * floor((2 + b1)/3) + 3/2 * floor((2 + b1)/3)^2)"
        },
        {
            "domain": [
                {
                    "quantifiers": {
                        "e0": "floor((-2 + b1)/4)",
                        "e1": "floor((-1 + b1)/4)"
                    },
                    "linear conditions": [
                        "b2 == 2 + b1",
                        "s == 1 + b1",
                        "4 * e1 == -1 + b1",
                        "b1 >= 2",
                        "4 * e0 <= -3 + b1",
                        "4 * e0 >= -5 + b1"
                    ]
                }
            ],
            "formula": "(((1/16 + 7/8 * b1 + 1/16 * b1^2) + (-7/6 + 1/3 * b1) * floor((b1)/3) - 1/2 * floor((b1)/3)^2) + (-5/6 - 1/3 * b1) * floor((1 + b1)/3) + 1/2 * floor((1 + b1)/3)^2)"
        },
        {
            "domain": [
                {
                    "quantifiers": {
                        "e0": "floor((b2)/4)",
                        "e1": "floor((-2 + b2)/4)",
                        "e2": "floor((-1 + b2)/4)",
                        "e3": "floor((-1 + b1)/4)",
                        "e4": "floor((-3 + b2)/4)"
                    },
                    "linear conditions": [
                        "4 * e3 == -1 + b1",
                        "4 * e4 == -3 + b2",
                        "b1 >= 2",
                        "2 * s >= 2 + b1 + b2",
                        "s >= -1 + b2",
                        "s <= b2",
                        "4 * e0 >= -3 + b2",
                        "4 * e0 <= -1 + b2",
                        "4 * e1 >= -5 + b2",
                        "4 * e1 <= -3 + b2",
                        "4 * e2 <= -2 + b2",
                        "4 * e2 >= -4 + b2"
                    ]
                }
            ],
            "formula": "(((((((((11/16 - 5/48 * b1 + 1/8 * b1^2) + (-181/720 + 23/36 * b1 - 1/48 * b1^2) * b2 + (-19/144 - 5/72 * b1) * b2^2 + (-1/24 - 1/72 * b1) * b2^3 + (1/144 + 1/144 * b1) * b2^4 + 1/720 * b2^5) + ((53/360 - 19/72 * b1) + (-1/36 + 13/72 * b1) * b2 + (1/8 + 1/24 * b1) * b2^2 + (-1/36 - 1/36 * b1) * b2^3 - 1/144 * b2^4) * s + ((-23/72 - 13/144 * b1) + (-1/8 - 1/24 * b1) * b2 + (1/24 + 1/24 * b1) * b2^2 + 1/72 * b2^3) * s^2 + ((1/24 + 1/72 * b1) + (-1/36 - 1/36 * b1) * b2 - 1/72 * b2^2) * s^3 + ((1/144 + 1/144 * b1) + 1/144 * b2) * s^4 - 1/720 * s^5) + ((2/3 - 1/3 * b1) - 4/3 * b2) * floor((b1)/3)) + ((((1/6 - 2/3 * b1) - 4/3 * b2) - 1/3 * s) - 1/3 * floor((b1)/3)) * floor((1 + b1)/3) - 1/6 * floor((1 + b1)/3)^2) + ((2/3 - 1/3 * b1) + floor((b1)/3)) * floor((b2)/3)) + (((1/3 - 2/3 * b1) + floor((b1)/3)) + floor((1 + b1)/3)) * floor((1 + b2)/3)) + ((((1/6 + 1/3 * b2) + 1/3 * s) + 2/3 * floor((b1)/3)) + 2/3 * floor((1 + b1)/3)) * floor((2b1 + 2b2 + s)/3) - 1/6 * floor((2b1 + 2b2 + s)/3)^2) + (((-1/3 + 1/3 * s) + 2/3 * floor((1 + b1)/3)) - 1/3 * floor((2b1 + 2b2 + s)/3)) * floor((1 + 2b1 + 2b2 + s)/3))"
        },
        {
            "domain": [
                {
                    "quantifiers": {
                        "e0": "floor((b1)/4)",
                        "e1": "floor((-1 + b1)/4)",
                        "e2": "floor((-3 + b1)/4)"
                    },
                    "linear conditions": [
                        "b2 == b1",
                        "s == b1",
                        "4 * e2 == -3 + b1",
                        "b1 >= 2",
                        "4 * e0 >= -3 + b1",
                        "4 * e0 <= -1 + b1",
                        "4 * e1 >= -4 + b1",
                        "4 * e1 <= -2 + b1"
                    ]
                },
                {
                    "quantifiers": {
                        "e0": "floor((-2 + b1)/4)",
                        "e1": "floor((-1 + b1)/4)",
                        "e2": "floor((1 + b1)/4)"
                    },
                    "linear conditions": [
                        "b2 == 2 + b1",
                        "s == 1 + b1",
                        "4 * e2 == 1 + b1",
                        "b1 >= 2",
                        "4 * e0 >= -5 + b1",
                        "4 * e0 <= -3 + b1",
                        "4 * e1 >= -4 + b1",
                        "4 * e1 <= -2 + b1"
                    ]
                }
            ],
            "formula": "((((((7/16 - 41/360 * b1 - 13/288 * b1^2 - 5/288 * b1^3 + 5/2304 * b1^4 + 1/2560 * b1^5) + (-107/180 + 7/12 * b1 + 5/576 * b1^2 - 1/144 * b1^3 - 7/4608 * b1^4) * b2 + (-5/288 + 1/72 * b1 + 1/128 * b1^2 + 5/2304 * b1^3) * b2^2 + (-1/192 - 1/288 * b1 - 1/768 * b1^2) * b2^3 + (1/2304 + 1/4608 * b1) * b2^4 + 1/23040 * b2^5) + (1/3 - b2) * floor((b1)/3)) + (((1/3 - 1/3 * b1) - 1/3 * b2) + 2/3 * floor((b1)/3)) * floor((1 + b1)/3) + 1/3 * floor((1 + b1)/3)^2) + (((7/6 - 1/2 * b1) - 1/6 * b2) + 4/3 * floor((b1)/3)) * floor((b2)/3) + 1/6 * floor((b2)/3)^2) + ((((2/3 - 2/3 * b1) + floor((b1)/3)) + 2/3 * floor((1 + b1)/3)) + 1/3 * floor((b2)/3)) * floor((1 + b2)/3))"
        },
        {
            "domain": [
                {
                    "quantifiers": {
                        "e0": "floor((b2)/4)",
                        "e1": "floor((-2 + b2)/4)",
                        "e2": "floor((-1 + b2)/4)",
                        "e3": "floor((-1 + b1)/4)",
                        "e4": "floor((-3 + b1)/4)",
                        "e5": "floor((-3 + b2)/4)"
                    },
                    "linear conditions": [
                        "4 * e4 == -3 + b1",
                        "4 * e5 == -3 + b2",
                        "b1 >= 2",
                        "2 * s >= 2 + b1 + b2",
                        "s >= -1 + b2",
                        "s <= b2",
                        "4 * e0 >= -3 + b2",
                        "4 * e0 <= -1 + b2",
                        "4 * e1 >= -5 + b2",
                        "4 * e1 <= -3 + b2",
                        "4 * e2 >= -4 + b2",
                        "4 * e2 <= -2 + b2",
                        "4 * e3 >= -4 + b1",
                        "4 * e3 <= -2 + b1"
                    ]
                },
                {
                    "quantifiers": {
                        "e0": "floor((b2)/4)",
                        "e1": "floor((-2 + b2)/4)",
                        "e2": "floor((-1 + b1)/4)",
                        "e3": "floor((-3 + b1)/4)",
                        "e4": "floor((-1 + b2)/4)"
                    },
                    "linear conditions": [
                        "4 * e3 == -3 + b1",
                        "4 * e4 == -1 + b2",
                        "b1 >= 2",
                        "2 * s >= 2 + b1 + b2",
                        "s >= -1 + b2",
                        "s <= b2",
                        "4 * e0 >= -3 + b2",
                        "4 * e0 <= -1 + b2",
                        "4 * e1 >= -5 + b2",
                        "4 * e1 <= -3 + b2",
                        "4 * e2 >= -4 + b1",
                        "4 * e2 <= -2 + b1"
                    ]
                }
            ],
            "formula": "(((((((((7/16 - 5/48 * b1 + 1/8 * b1^2) + (-181/720 + 23/36 * b1 - 1/48 * b1^2) * b2 + (-19/144 - 5/72 * b1) * b2^2 + (-1/24 - 1/72 * b1) * b2^3 + (1/144 + 1/144 * b1) * b2^4 + 1/720 * b2^5) + ((53/360 - 19/72 * b1) + (-1/36 + 13/72 * b1) * b2 + (1/8 + 1/24 * b1) * b2^2 + (-1/36 - 1/36 * b1) * b2^3 - 1/144 * b2^4) * s + ((-23/72 - 13/144 * b1) + (-1/8 - 1/24 * b1) * b2 + (1/24 + 1/24 * b1) * b2^2 + 1/72 * b2^3) * s^2 + ((1/24 + 1/72 * b1) + (-1/36 - 1/36 * b1) * b2 - 1/72 * b2^2) * s^3 + ((1/144 + 1/144 * b1) + 1/144 * b2) * s^4 - 1/720 * s^5) + ((2/3 - 1/3 * b1) - 4/3 * b2) * floor((b1)/3)) + ((((1/6 - 2/3 * b1) - 4/3 * b2) - 1/3 * s) - 1/3 * floor((b1)/3)) * floor((1 + b1)/3) - 1/6 * floor((1 + b1)/3)^2) + ((2/3 - 1/3 * b1) + floor((b1)/3)) * floor((b2)/3)) + (((1/3 - 2/3 * b1) + floor((b1)/3)) + floor((1 + b1)/3)) * floor((1 + b2)/3)) + ((((1/6 + 1/3 * b2) + 1/3 * s) + 2/3 * floor((b1)/3)) + 2/3 * floor((1 + b1)/3)) * floor((2b1 + 2b2 + s)/3) - 1/6 * floor((2b1 + 2b2 + s)/3)^2) + (((-1/3 + 1/3 * s) + 2/3 * floor((1 + b1)/3)) - 1/3 * floor((2b1 + 2b2 + s)/3)) * floor((1 + 2b1 + 2b2 + s)/3))"
        },
        {
            "domain": [
                {
                    "quantifiers": {
                        "e0": "floor((-2 + b1)/4)"
                    },
                    "linear conditions": [
                        "b2 == 1 + b1",
                        "s == b1",
                        "4 * e0 == -2 + b1",
                        "b1 >= 2"
                    ]
                }
            ],
            "formula": "(((-1/2 + 2/3 * b1 - 7/24 * b1^2) + (-3/2 + 4/3 * b1) * floor((b1)/3) - 3/2 * floor((b1)/3)^2) + ((-1/2 + 2/3 * b1) - floor((b1)/3)) * floor((1 + b1)/3) - 1/2 * floor((1 + b1)/3)^2)"
        },
        {
            "domain": [
                {
                    "quantifiers": {
                        "e0": "floor((b2)/4)",
                        "e1": "floor((-2 + b2)/4)",
                        "e2": "floor((-1 + b2)/4)",
                        "e3": "floor((-1 + b1)/4)",
                        "e4": "floor((-3 + b1)/4)",
                        "e5": "floor((-2 + b1)/4)",
                        "e6": "floor((-3 + b2)/4)"
                    },
                    "linear conditions": [
                        "4 * e5 == -2 + b1",
                        "4 * e6 == -3 + b2",
                        "b1 >= 2",
                        "2 * s >= 1 + b1 + b2",
                        "s >= -1 + b2",
                        "s <= b2",
                        "4 * e0 <= -1 + b2",
                        "4 * e0 >= -3 + b2",
                        "4 * e1 >= -5 + b2",
                        "4 * e1 <= -3 + b2",
                        "4 * e2 >= -4 + b2",
                        "4 * e2 <= -2 + b2",
                        "4 * e3 <= -2 + b1",
                        "4 * e3 >= -4 + b1",
                        "4 * e4 <= -4 + b1",
                        "4 * e4 >= -6 + b1"
                    ]
                }
            ],
            "formula": "(((((((((-1/16 + 1/48 * b1 + 1/8 * b1^2) + (-91/720 + 23/36 * b1 - 1/48 * b1^2) * b2 + (1/18 - 5/72 * b1) * b2^2 + (-1/24 - 1/72 * b1) * b2^3 + (1/144 + 1/144 * b1) * b2^4 + 1/720 * b2^5) + ((-119/720 - 19/72 * b1) + (-29/72 + 13/72 * b1) * b2 + (1/8 + 1/24 * b1) * b2^2 + (-1/36 - 1/36 * b1) * b2^3 - 1/144 * b2^4) * s + ((-19/144 - 13/144 * b1) + (-1/8 - 1/24 * b1) * b2 + (1/24 + 1/24 * b1) * b2^2 + 1/72 * b2^3) * s^2 + ((1/24 + 1/72 * b1) + (-1/36 - 1/36 * b1) * b2 - 1/72 * b2^2) * s^3 + ((1/144 + 1/144 * b1) + 1/144 * b2) * s^4 - 1/720 * s^5) + ((2/3 - 1/3 * b1) - 4/3 * b2) * floor((b1)/3)) + ((((1/6 - 2/3 * b1) - 4/3 * b2) - 1/3 * s) - 1/3 * floor((b1)/3)) * floor((1 + b1)/3) - 1/6 * floor((1 + b1)/3)^2) + ((2/3 - 1/3 * b1) + floor((b1)/3)) * floor((b2)/3)) + (((1/3 - 2/3 * b1) + floor((b1)/3)) + floor((1 + b1)/3)) * floor((1 + b2)/3)) + ((((1/6 + 1/3 * b2) + 1/3 * s) + 2/3 * floor((b1)/3)) + 2/3 * floor((1 + b1)/3)) * floor((2b1 + 2b2 + s)/3) - 1/6 * floor((2b1 + 2b2 + s)/3)^2) + (((-1/3 + 1/3 * s) + 2/3 * floor((1 + b1)/3)) - 1/3 * floor((2b1 + 2b2 + s)/3)) * floor((1 + 2b1 + 2b2 + s)/3))"
        },
        {
            "domain": [
                {
                    "quantifiers": {
                        "e0": "floor((-2 + b1)/4)",
                        "e1": "floor((b1)/4)"
                    },
                    "linear conditions": [
                        "b2 == 1 + b1",
                        "s == b1",
                        "4 * e1 == b1",
                        "b1 >= 4",
                        "4 * e0 <= -3 + b1",
                        "4 * e0 >= -5 + b1"
                    ]
                }
            ],
            "formula": "(((2/3 * b1 - 7/24 * b1^2) + (-3/2 + 4/3 * b1) * floor((b1)/3) - 3/2 * floor((b1)/3)^2) + ((-1/2 + 2/3 * b1) - floor((b1)/3)) * floor((1 + b1)/3) - 1/2 * floor((1 + b1)/3)^2)"
        },
        {
            "domain": [
                {
                    "quantifiers": {
                        "e0": "floor((b2)/4)",
                        "e1": "floor((-2 + b2)/4)",
                        "e2": "floor((-1 + b1)/4)",
                        "e3": "floor((-3 + b1)/4)",
                        "e4": "floor((b1)/4)",
                        "e5": "floor((-1 + b2)/4)"
                    },
                    "linear conditions": [
                        "4 * e4 == b1",
                        "4 * e5 == -1 + b2",
                        "b1 >= 2",
                        "2 * s >= 1 + b1 + b2",
                        "s >= -1 + b2",
                        "s <= b2",
                        "4 * e0 >= -3 + b2",
                        "4 * e0 <= -1 + b2",
                        "4 * e1 >= -5 + b2",
                        "4 * e1 <= -3 + b2",
                        "4 * e2 <= -2 + b1",
                        "4 * e2 >= -4 + b1",
                        "4 * e3 <= -4 + b1",
                        "4 * e3 >= -6 + b1"
                    ]
                }
            ],
            "formula": "(((((((((7/16 + 1/48 * b1 + 1/8 * b1^2) + (-91/720 + 23/36 * b1 - 1/48 * b1^2) * b2 + (1/18 - 5/72 * b1) * b2^2 + (-1/24 - 1/72 * b1) * b2^3 + (1/144 + 1/144 * b1) * b2^4 + 1/720 * b2^5) + ((-119/720 - 19/72 * b1) + (-29/72 + 13/72 * b1) * b2 + (1/8 + 1/24 * b1) * b2^2 + (-1/36 - 1/36 * b1) * b2^3 - 1/144 * b2^4) * s + ((-19/144 - 13/144 * b1) + (-1/8 - 1/24 * b1) * b2 + (1/24 + 1/24 * b1) * b2^2 + 1/72 * b2^3) * s^2 + ((1/24 + 1/72 * b1) + (-1/36 - 1/36 * b1) * b2 - 1/72 * b2^2) * s^3 + ((1/144 + 1/144 * b1) + 1/144 * b2) * s^4 - 1/720 * s^5) + ((2/3 - 1/3 * b1) - 4/3 * b2) * floor((b1)/3)) + ((((1/6 - 2/3 * b1) - 4/3 * b2) - 1/3 * s) - 1/3 * floor((b1)/3)) * floor((1 + b1)/3) - 1/6 * floor((1 + b1)/3)^2) + ((2/3 - 1/3 * b1) + floor((b1)/3)) * floor((b2)/3)) + (((1/3 - 2/3 * b1) + floor((b1)/3)) + floor((1 + b1)/3)) * floor((1 + b2)/3)) + ((((1/6 + 1/3 * b2) + 1/3 * s) + 2/3 * floor((b1)/3)) + 2/3 * floor((1 + b1)/3)) * floor((2b1 + 2b2 + s)/3) - 1/6 * floor((2b1 + 2b2 + s)/3)^2) + (((-1/3 + 1/3 * s) + 2/3 * floor((1 + b1)/3)) - 1/3 * floor((2b1 + 2b2 + s)/3)) * floor((1 + 2b1 + 2b2 + s)/3))"
        },
        {
            "domain": [
                {
                    "quantifiers": {
                        "e0": "floor((b2)/4)",
                        "e1": "floor((-2 + b2)/4)",
                        "e2": "floor((-1 + b2)/4)",
                        "e3": "floor((-1 + b1)/4)",
                        "e4": "floor((-3 + b1)/4)",
                        "e5": "floor((-2 + b1)/4)",
                        "e6": "floor((b1)/4)",
                        "e7": "floor((-3 + b2)/4)"
                    },
                    "linear conditions": [
                        "4 * e6 == b1",
                        "4 * e7 == -3 + b2",
                        "b1 >= 2",
                        "2 * s >= 1 + b1 + b2",
                        "s >= -1 + b2",
                        "s <= b2",
                        "4 * e0 >= -3 + b2",
                        "4 * e0 <= -1 + b2",
                        "4 * e1 >= -5 + b2",
                        "4 * e1 <= -3 + b2",
                        "4 * e2 >= -4 + b2",
                        "4 * e2 <= -2 + b2",
                        "4 * e3 >= -4 + b1",
                        "4 * e3 <= -2 + b1",
                        "4 * e4 >= -6 + b1",
                        "4 * e4 <= -4 + b1",
                        "4 * e5 >= -5 + b1",
                        "4 * e5 <= -3 + b1"
                    ]
                },
                {
                    "quantifiers": {
                        "e0": "floor((b2)/4)",
                        "e1": "floor((-2 + b2)/4)",
                        "e2": "floor((-1 + b1)/4)",
                        "e3": "floor((-3 + b1)/4)",
                        "e4": "floor((b1)/4)",
                        "e5": "floor((-2 + b1)/4)",
                        "e6": "floor((-1 + b2)/4)"
                    },
                    "linear conditions": [
                        "4 * e5 == -2 + b1",
                        "4 * e6 == -1 + b2",
                        "b1 >= 2",
                        "2 * s >= 1 + b1 + b2",
                        "s >= -1 + b2",
                        "s <= b2",
                        "4 * e0 >= -3 + b2",
                        "4 * e0 <= -1 + b2",
                        "4 * e1 >= -5 + b2",
                        "4 * e1 <= -3 + b2",
                        "4 * e2 >= -4 + b1",
                        "4 * e2 <= -2 + b1",
                        "4 * e3 >= -6 + b1",
                        "4 * e3 <= -4 + b1",
                        "4 * e4 >= -3 + b1",
                        "4 * e4 <= -1 + b1"
                    ]
                }
            ],
            "formula": "(((((((((3/16 + 1/48 * b1 + 1/8 * b1^2) + (-91/720 + 23/36 * b1 - 1/48 * b1^2) * b2 + (1/18 - 5/72 * b1) * b2^2 + (-1/24 - 1/72 * b1) * b2^3 + (1/144 + 1/144 * b1) * b2^4 + 1/720 * b2^5) + ((-119/720 - 19/72 * b1) + (-29/72 + 13/72 * b1) * b2 + (1/8 + 1/24 * b1) * b2^2 + (-1/36 - 1/36 * b1) * b2^3 - 1/144 * b2^4) * s + ((-19/144 - 13/144 * b1) + (-1/8 - 1/24 * b1) * b2 + (1/24 + 1/24 * b1) * b2^2 + 1/72 * b2^3) * s^2 + ((1/24 + 1/72 * b1) + (-1/36 - 1/36 * b1) * b2 - 1/72 * b2^2) * s^3 + ((1/144 + 1/144 * b1) + 1/144 * b2) * s^4 - 1/720 * s^5) + ((2/3 - 1/3 * b1) - 4/3 * b2) * floor((b1)/3)) + ((((1/6 - 2/3 * b1) - 4/3 * b2) - 1/3 * s) - 1/3 * floor((b1)/3)) * floor((1 + b1)/3) - 1/6 * floor((1 + b1)/3)^2) + ((2/3 - 1/3 * b1) + floor((b1)/3)) * floor((b2)/3)) + (((1/3 - 2/3 * b1) + floor((b1)/3)) + floor((1 + b1)/3)) * floor((1 + b2)/3)) + ((((1/6 + 1/3 * b2) + 1/3 * s) + 2/3 * floor((b1)/3)) + 2/3 * floor((1 + b1)/3)) * floor((2b1 + 2b2 + s)/3) - 1/6 * floor((2b1 + 2b2 + s)/3)^2) + (((-1/3 + 1/3 * s) + 2/3 * floor((1 + b1)/3)) - 1/3 * floor((2b1 + 2b2 + s)/3)) * floor((1 + 2b1 + 2b2 + s)/3))"
        },
        {
            "domain": [
                {
                    "quantifiers": {
                        "e0": "floor((-2 + b1)/4)",
                        "e1": "floor((b1)/4)",
                        "e2": "floor((-1 + b1)/4)"
                    },
                    "linear conditions": [
                        "b2 == 1 + b1",
                        "s == b1",
                        "4 * e2 == -1 + b1",
                        "b1 >= 2",
                        "4 * e0 >= -5 + b1",
                        "4 * e0 <= -3 + b1",
                        "4 * e1 >= -3 + b1",
                        "4 * e1 <= -1 + b1"
                    ]
                },
                {
                    "quantifiers": {
                        "e0": "floor((-2 + b1)/4)",
                        "e1": "floor((b1)/4)",
                        "e2": "floor((-3 + b1)/4)"
                    },
                    "linear conditions": [
                        "b2 == 1 + b1",
                        "s == b1",
                        "4 * e2 == -3 + b1",
                        "b1 >= 2",
                        "4 * e0 >= -5 + b1",
                        "4 * e0 <= -3 + b1",
                        "4 * e1 >= -3 + b1",
                        "4 * e1 <= -1 + b1"
                    ]
                }
            ],
            "formula": "(((-3/8 + 2/3 * b1 - 7/24 * b1^2) + (-3/2 + 4/3 * b1) * floor((b1)/3) - 3/2 * floor((b1)/3)^2) + ((-1/2 + 2/3 * b1) - floor((b1)/3)) * floor((1 + b1)/3) - 1/2 * floor((1 + b1)/3)^2)"
        },
        {
            "domain": [
                {
                    "quantifiers": {
                        "e0": "floor((b2)/4)",
                        "e1": "floor((-1 + b1)/2)",
                        "e2": "floor((-2 + b2)/4)"
                    },
                    "linear conditions": [
                        "2 * e1 == -1 + b1",
                        "4 * e2 == -2 + b2",
                        "b1 >= 2",
                        "2 * s >= 1 + b1 + b2",
                        "s >= -1 + b2",
                        "s <= b2",
                        "4 * e0 >= -3 + b2",
                        "4 * e0 <= -1 + b2"
                    ]
                },
                {
                    "quantifiers": {
                        "e0": "floor((-2 + b1)/4)",
                        "e1": "floor((b1)/4)",
                        "e2": "floor((-1 + b1)/2)",
                        "e3": "floor((b2)/4)"
                    },
                    "linear conditions": [
                        "2 * e2 == -1 + b1",
                        "4 * e3 == b2",
                        "b1 >= 2",
                        "2 * s >= 1 + b1 + b2",
                        "s >= -1 + b2",
                        "s <= b2",
                        "4 * e0 >= -5 + b1",
                        "4 * e0 <= -3 + b1",
                        "4 * e1 >= -3 + b1",
                        "4 * e1 <= -1 + b1"
                    ]
                }
            ],
            "formula": "(((((((((3/8 - 1/6 * b1 + 1/8 * b1^2) + (-181/720 + 23/36 * b1 - 1/48 * b1^2) * b2 + (-19/144 - 5/72 * b1) * b2^2 + (-1/24 - 1/72 * b1) * b2^3 + (1/144 + 1/144 * b1) * b2^4 + 1/720 * b2^5) + ((53/360 - 19/72 * b1) + (-1/36 + 13/72 * b1) * b2 + (1/8 + 1/24 * b1) * b2^2 + (-1/36 - 1/36 * b1) * b2^3 - 1/144 * b2^4) * s + ((-23/72 - 13/144 * b1) + (-1/8 - 1/24 * b1) * b2 + (1/24 + 1/24 * b1) * b2^2 + 1/72 * b2^3) * s^2 + ((1/24 + 1/72 * b1) + (-1/36 - 1/36 * b1) * b2 - 1/72 * b2^2) * s^3 + ((1/144 + 1/144 * b1) + 1/144 * b2) * s^4 - 1/720 * s^5) + ((2/3 - 1/3 * b1) - 4/3 * b2) * floor((b1)/3)) + ((((1/6 - 2/3 * b1) - 4/3 * b2) - 1/3 * s) - 1/3 * floor((b1)/3)) * floor((1 + b1)/3) - 1/6 * floor((1 + b1)/3)^2) + ((2/3 - 1/3 * b1) + floor((b1)/3)) * floor((b2)/3)) + (((1/3 - 2/3 * b1) + floor((b1)/3)) + floor((1 + b1)/3)) * floor((1 + b2)/3)) + ((((1/6 + 1/3 * b2) + 1/3 * s) + 2/3 * floor((b1)/3)) + 2/3 * floor((1 + b1)/3)) * floor((2b1 + 2b2 + s)/3) - 1/6 * floor((2b1 + 2b2 + s)/3)^2) + (((-1/3 + 1/3 * s) + 2/3 * floor((1 + b1)/3)) - 1/3 * floor((2b1 + 2b2 + s)/3)) * floor((1 + 2b1 + 2b2 + s)/3))"
        },
        {
            "domain": [
                {
                    "quantifiers": {
                        "e0": "floor((-2 + b1)/4)",
                        "e1": "floor((b1)/4)",
                        "e2": "floor((b2)/4)"
                    },
                    "linear conditions": [
                        "s == 1 + b2",
                        "4 * e1 == b1",
                        "4 * e2 == b2",
                        "b1 >= 3",
                        "b2 >= b1",
                        "4 * e0 <= -3 + b1",
                        "4 * e0 >= -5 + b1"
                    ]
                }
            ],
            "formula": "((((((-1/6 * b1 - 5/24 * b1^2) + (-1/3 + 3/8 * b1 - 1/48 * b1^2) * b2 + (1/48 + 1/48 * b1) * b2^2) + ((2/3 + 1/3 * b1) - 2/3 * b2) * floor((b1)/3)) + (((-1/6 + 2/3 * b1) - 1/3 * b2) - floor((b1)/3)) * floor((1 + b1)/3) - 1/2 * floor((1 + b1)/3)^2) + ((2/3 - 1/3 * b1) + floor((b1)/3)) * floor((b2)/3)) + (((1/3 - 2/3 * b1) + floor((b1)/3)) + floor((1 + b1)/3)) * floor((1 + b2)/3))"
        },
        {
            "domain": [
                {
                    "quantifiers": {
                        "e0": "floor((b2)/4)",
                        "e1": "floor((b1)/2)",
                        "e2": "floor((-2 + b2)/4)"
                    },
                    "linear conditions": [
                        "s == 1 + b2",
                        "2 * e1 == b1",
                        "4 * e2 == -2 + b2",
                        "b1 >= 3",
                        "b2 >= b1",
                        "4 * e0 >= -3 + b2",
                        "4 * e0 <= -1 + b2"
                    ]
                }
            ],
            "formula": "((((((1/4 - 1/6 * b1 - 5/24 * b1^2) + (-1/3 + 3/8 * b1 - 1/48 * b1^2) * b2 + (1/48 + 1/48 * b1) * b2^2) + ((2/3 + 1/3 * b1) - 2/3 * b2) * floor((b1)/3)) + (((-1/6 + 2/3 * b1) - 1/3 * b2) - floor((b1)/3)) * floor((1 + b1)/3) - 1/2 * floor((1 + b1)/3)^2) + ((2/3 - 1/3 * b1) + floor((b1)/3)) * floor((b2)/3)) + (((1/3 - 2/3 * b1) + floor((b1)/3)) + floor((1 + b1)/3)) * floor((1 + b2)/3))"
        },
        {
            "domain": [
                {
                    "quantifiers": {
                        "e0": "floor((-2 + b1)/4)",
                        "e1": "floor((b1)/4)",
                        "e2": "floor((b2)/4)"
                    },
                    "linear conditions": [
                        "4 * e1 == b1",
                        "4 * e2 == b2",
                        "b2 >= b1",
                        "s >= 2 + b2",
                        "s <= -2 + b1 + b2",
                        "4 * e0 <= -3 + b1",
                        "4 * e0 >= -5 + b1"
                    ]
                }
            ],
            "formula": "((((((-1/3 * b1 - 1/24 * b1^2) + (-1/3 + 3/8 * b1 - 1/48 * b1^2) * b2 + (1/48 + 1/48 * b1) * b2^2) + (2/3 - 2/3 * b2) * floor((b1)/3)) + (1/3 - 1/3 * b2) * floor((1 + b1)/3)) + ((2/3 - 1/3 * b1) + floor((b1)/3)) * floor((b2)/3)) + (((1/3 - 2/3 * b1) + floor((b1)/3)) + floor((1 + b1)/3)) * floor((1 + b2)/3))"
        },
        {
            "domain": [
                {
                    "quantifiers": {
                        "e0": "floor((b2)/4)",
                        "e1": "floor((b1)/2)",
                        "e2": "floor((-2 + b2)/4)"
                    },
                    "linear conditions": [
                        "2 * e1 == b1",
                        "4 * e2 == -2 + b2",
                        "b2 >= b1",
                        "s >= 2 + b2",
                        "s <= -2 + b1 + b2",
                        "4 * e0 >= -3 + b2",
                        "4 * e0 <= -1 + b2"
                    ]
                }
            ],
            "formula": "((((((1/4 - 1/3 * b1 - 1/24 * b1^2) + (-1/3 + 3/8 * b1 - 1/48 * b1^2) * b2 + (1/48 + 1/48 * b1) * b2^2) + (2/3 - 2/3 * b2) * floor((b1)/3)) + (1/3 - 1/3 * b2) * floor((1 + b1)/3)) + ((2/3 - 1/3 * b1) + floor((b1)/3)) * floor((b2)/3)) + (((1/3 - 2/3 * b1) + floor((b1)/3)) + floor((1 + b1)/3)) * floor((1 + b2)/3))"
        },
        {
            "domain": [
                {
                    "quantifiers": {
                        "e0": "floor((b2)/4)",
                        "e1": "floor((-2 + b2)/4)",
                        "e2": "floor((-1 + b1)/4)",
                        "e3": "floor((-1 + b2)/4)"
                    },
                    "linear conditions": [
                        "s == 1 + b2",
                        "4 * e2 == -1 + b1",
                        "4 * e3 == -1 + b2",
                        "b1 >= 3",
                        "b2 >= b1",
                        "4 * e0 >= -3 + b2",
                        "4 * e0 <= -1 + b2",
                        "4 * e1 >= -5 + b2",
                        "4 * e1 <= -3 + b2"
                    ]
                }
            ],
            "formula": "((((((3/16 - 5/48 * b1 - 5/24 * b1^2) + (-13/48 + 3/8 * b1 - 1/48 * b1^2) * b2 + (1/48 + 1/48 * b1) * b2^2) + ((2/3 + 1/3 * b1) - 2/3 * b2) * floor((b1)/3)) + (((-1/6 + 2/3 * b1) - 1/3 * b2) - floor((b1)/3)) * floor((1 + b1)/3) - 1/2 * floor((1 + b1)/3)^2) + ((2/3 - 1/3 * b1) + floor((b1)/3)) * floor((b2)/3)) + (((1/3 - 2/3 * b1) + floor((b1)/3)) + floor((1 + b1)/3)) * floor((1 + b2)/3))"
        },
        {
            "domain": [
                {
                    "quantifiers": {
                        "e0": "floor((b2)/4)",
                        "e1": "floor((-2 + b2)/4)",
                        "e2": "floor((-1 + b1)/4)",
                        "e3": "floor((-1 + b2)/4)"
                    },
                    "linear conditions": [
                        "4 * e2 == -1 + b1",
                        "4 * e3 == -1 + b2",
                        "b2 >= b1",
                        "s >= 2 + b2",
                        "s <= -2 + b1 + b2",
                        "4 * e0 >= -3 + b2",
                        "4 * e0 <= -1 + b2",
                        "4 * e1 >= -5 + b2",
                        "4 * e1 <= -3 + b2"
                    ]
                }
            ],
            "formula": "((((((3/16 - 13/48 * b1 - 1/24 * b1^2) + (-13/48 + 3/8 * b1 - 1/48 * b1^2) * b2 + (1/48 + 1/48 * b1) * b2^2) + (2/3 - 2/3 * b2) * floor((b1)/3)) + (1/3 - 1/3 * b2) * floor((1 + b1)/3)) + ((2/3 - 1/3 * b1) + floor((b1)/3)) * floor((b2)/3)) + (((1/3 - 2/3 * b1) + floor((b1)/3)) + floor((1 + b1)/3)) * floor((1 + b2)/3))"
        },
        {
            "domain": [
                {
                    "quantifiers": {
                        "e0": "floor((b2)/4)",
                        "e1": "floor((-2 + b2)/4)",
                        "e2": "floor((-1 + b2)/4)",
                        "e3": "floor((-1 + b1)/4)",
                        "e4": "floor((1 + b2)/4)"
                    },
                    "linear conditions": [
                        "s == 1 + b2",
                        "4 * e3 == -1 + b1",
                        "4 * e4 == 1 + b2",
                        "b1 >= 3",
                        "b2 >= 2 + b1",
                        "4 * e0 >= -3 + b2",
                        "4 * e0 <= -1 + b2",
                        "4 * e1 >= -5 + b2",
                        "4 * e1 <= -3 + b2",
                        "4 * e2 <= -2 + b2",
                        "4 * e2 >= -4 + b2"
                    ]
                }
            ],
            "formula": "((((((11/16 - 5/48 * b1 - 5/24 * b1^2) + (-13/48 + 3/8 * b1 - 1/48 * b1^2) * b2 + (1/48 + 1/48 * b1) * b2^2) + ((2/3 + 1/3 * b1) - 2/3 * b2) * floor((b1)/3)) + (((-1/6 + 2/3 * b1) - 1/3 * b2) - floor((b1)/3)) * floor((1 + b1)/3) - 1/2 * floor((1 + b1)/3)^2) + ((2/3 - 1/3 * b1) + floor((b1)/3)) * floor((b2)/3)) + (((1/3 - 2/3 * b1) + floor((b1)/3)) + floor((1 + b1)/3)) * floor((1 + b2)/3))"
        },
        {
            "domain": [
                {
                    "quantifiers": {
                        "e0": "floor((b2)/4)",
                        "e1": "floor((-2 + b2)/4)",
                        "e2": "floor((-1 + b2)/4)",
                        "e3": "floor((-1 + b1)/4)",
                        "e4": "floor((-3 + b1)/4)",
                        "e5": "floor((1 + b2)/4)"
                    },
                    "linear conditions": [
                        "s == 1 + b2",
                        "4 * e4 == -3 + b1",
                        "4 * e5 == 1 + b2",
                        "b1 >= 3",
                        "b2 >= b1",
                        "4 * e0 >= -3 + b2",
                        "4 * e0 <= -1 + b2",
                        "4 * e1 >= -5 + b2",
                        "4 * e1 <= -3 + b2",
                        "4 * e2 >= -4 + b2",
                        "4 * e2 <= -2 + b2",
                        "4 * e3 >= -4 + b1",
                        "4 * e3 <= -2 + b1"
                    ]
                },
                {
                    "quantifiers": {
                        "e0": "floor((b2)/4)",
                        "e1": "floor((-2 + b2)/4)",
                        "e2": "floor((-1 + b1)/4)",
                        "e3": "floor((-3 + b1)/4)",
                        "e4": "floor((-1 + b2)/4)"
                    },
                    "linear conditions": [
                        "s == 1 + b2",
                        "4 * e3 == -3 + b1",
                        "4 * e4 == -1 + b2",
                        "b1 >= 3",
                        "b2 >= b1",
                        "4 * e0 >= -3 + b2",
                        "4 * e0 <= -1 + b2",
                        "4 * e1 >= -5 + b2",
                        "4 * e1 <= -3 + b2",
                        "4 * e2 >= -4 + b1",
                        "4 * e2 <= -2 + b1"
                    ]
                }
            ],
            "formula": "((((((7/16 - 5/48 * b1 - 5/24 * b1^2) + (-13/48 + 3/8 * b1 - 1/48 * b1^2) * b2 + (1/48 + 1/48 * b1) * b2^2) + ((2/3 + 1/3 * b1) - 2/3 * b2) * floor((b1)/3)) + (((-1/6 + 2/3 * b1) - 1/3 * b2) - floor((b1)/3)) * floor((1 + b1)/3) - 1/2 * floor((1 + b1)/3)^2) + ((2/3 - 1/3 * b1) + floor((b1)/3)) * floor((b2)/3)) + (((1/3 - 2/3 * b1) + floor((b1)/3)) + floor((1 + b1)/3)) * floor((1 + b2)/3))"
        },
        {
            "domain": [
                {
                    "quantifiers": {
                        "e0": "floor((b2)/4)",
                        "e1": "floor((-2 + b2)/4)",
                        "e2": "floor((-1 + b2)/4)",
                        "e3": "floor((-1 + b1)/4)",
                        "e4": "floor((-3 + b2)/4)"
                    },
                    "linear conditions": [
                        "4 * e3 == -1 + b1",
                        "4 * e4 == -3 + b2",
                        "b2 >= 2 + b1",
                        "s >= 2 + b2",
                        "s <= -2 + b1 + b2",
                        "4 * e0 >= -3 + b2",
                        "4 * e0 <= -1 + b2",
                        "4 * e1 >= -5 + b2",
                        "4 * e1 <= -3 + b2",
                        "4 * e2 <= -2 + b2",
                        "4 * e2 >= -4 + b2"
                    ]
                }
            ],
            "formula": "((((((11/16 - 13/48 * b1 - 1/24 * b1^2) + (-13/48 + 3/8 * b1 - 1/48 * b1^2) * b2 + (1/48 + 1/48 * b1) * b2^2) + (2/3 - 2/3 * b2) * floor((b1)/3)) + (1/3 - 1/3 * b2) * floor((1 + b1)/3)) + ((2/3 - 1/3 * b1) + floor((b1)/3)) * floor((b2)/3)) + (((1/3 - 2/3 * b1) + floor((b1)/3)) + floor((1 + b1)/3)) * floor((1 + b2)/3))"
        },
        {
            "domain": [
                {
                    "quantifiers": {
                        "e0": "floor((b2)/4)",
                        "e1": "floor((-2 + b2)/4)",
                        "e2": "floor((-1 + b2)/4)",
                        "e3": "floor((-1 + b1)/4)",
                        "e4": "floor((-3 + b1)/4)",
                        "e5": "floor((-3 + b2)/4)"
                    },
                    "linear conditions": [
                        "4 * e4 == -3 + b1",
                        "4 * e5 == -3 + b2",
                        "b2 >= b1",
                        "s >= 2 + b2",
                        "s <= -2 + b1 + b2",
                        "4 * e0 >= -3 + b2",
                        "4 * e0 <= -1 + b2",
                        "4 * e1 >= -5 + b2",
                        "4 * e1 <= -3 + b2",
                        "4 * e2 >= -4 + b2",
                        "4 * e2 <= -2 + b2",
                        "4 * e3 >= -4 + b1",
                        "4 * e3 <= -2 + b1"
                    ]
                },
                {
                    "quantifiers": {
                        "e0": "floor((b2)/4)",
                        "e1": "floor((-2 + b2)/4)",
                        "e2": "floor((-1 + b1)/4)",
                        "e3": "floor((-3 + b1)/4)",
                        "e4": "floor((-1 + b2)/4)"
                    },
                    "linear conditions": [
                        "4 * e3 == -3 + b1",
                        "4 * e4 == -1 + b2",
                        "b2 >= b1",
                        "s >= 2 + b2",
                        "s <= -2 + b1 + b2",
                        "4 * e0 >= -3 + b2",
                        "4 * e0 <= -1 + b2",
                        "4 * e1 >= -5 + b2",
                        "4 * e1 <= -3 + b2",
                        "4 * e2 >= -4 + b1",
                        "4 * e2 <= -2 + b1"
                    ]
                }
            ],
            "formula": "((((((7/16 - 13/48 * b1 - 1/24 * b1^2) + (-13/48 + 3/8 * b1 - 1/48 * b1^2) * b2 + (1/48 + 1/48 * b1) * b2^2) + (2/3 - 2/3 * b2) * floor((b1)/3)) + (1/3 - 1/3 * b2) * floor((1 + b1)/3)) + ((2/3 - 1/3 * b1) + floor((b1)/3)) * floor((b2)/3)) + (((1/3 - 2/3 * b1) + floor((b1)/3)) + floor((1 + b1)/3)) * floor((1 + b2)/3))"
        },
        {
            "domain": [
                {
                    "quantifiers": {
                        "e0": "floor((b2)/4)",
                        "e1": "floor((-2 + b2)/4)",
                        "e2": "floor((-1 + b2)/4)",
                        "e3": "floor((-1 + b1)/4)",
                        "e4": "floor((-3 + b1)/4)",
                        "e5": "floor((-2 + b1)/4)",
                        "e6": "floor((1 + b2)/4)"
                    },
                    "linear conditions": [
                        "s == 1 + b2",
                        "4 * e5 == -2 + b1",
                        "4 * e6 == 1 + b2",
                        "b1 >= 3",
                        "b2 >= 1 + b1",
                        "4 * e0 <= -1 + b2",
                        "4 * e0 >= -3 + b2",
                        "4 * e1 >= -5 + b2",
                        "4 * e1 <= -3 + b2",
                        "4 * e2 >= -4 + b2",
                        "4 * e2 <= -2 + b2",
                        "4 * e3 <= -2 + b1",
                        "4 * e3 >= -4 + b1",
                        "4 * e4 <= -4 + b1",
                        "4 * e4 >= -6 + b1"
                    ]
                }
            ],
            "formula": "((((((-1/16 + 1/48 * b1 - 5/24 * b1^2) + (-11/24 + 3/8 * b1 - 1/48 * b1^2) * b2 + (1/48 + 1/48 * b1) * b2^2) + ((2/3 + 1/3 * b1) - 2/3 * b2) * floor((b1)/3)) + (((-1/6 + 2/3 * b1) - 1/3 * b2) - floor((b1)/3)) * floor((1 + b1)/3) - 1/2 * floor((1 + b1)/3)^2) + ((2/3 - 1/3 * b1) + floor((b1)/3)) * floor((b2)/3)) + (((1/3 - 2/3 * b1) + floor((b1)/3)) + floor((1 + b1)/3)) * floor((1 + b2)/3))"
        },
        {
            "domain": [
                {
                    "quantifiers": {
                        "e0": "floor((b2)/4)",
                        "e1": "floor((-2 + b2)/4)",
                        "e2": "floor((-1 + b2)/4)",
                        "e3": "floor((-1 + b1)/4)",
                        "e4": "floor((-3 + b1)/4)",
                        "e5": "floor((-2 + b1)/4)",
                        "e6": "floor((-3 + b2)/4)"
                    },
                    "linear conditions": [
                        "4 * e5 == -2 + b1",
                        "4 * e6 == -3 + b2",
                        "b2 >= 1 + b1",
                        "s >= 2 + b2",
                        "s <= -2 + b1 + b2",
                        "4 * e0 <= -1 + b2",
                        "4 * e0 >= -3 + b2",
                        "4 * e1 >= -5 + b2",
                        "4 * e1 <= -3 + b2",
                        "4 * e2 >= -4 + b2",
                        "4 * e2 <= -2 + b2",
                        "4 * e3 <= -2 + b1",
                        "4 * e3 >= -4 + b1",
                        "4 * e4 <= -4 + b1",
                        "4 * e4 >= -6 + b1"
                    ]
                }
            ],
            "formula": "((((((-1/16 - 7/48 * b1 - 1/24 * b1^2) + (-11/24 + 3/8 * b1 - 1/48 * b1^2) * b2 + (1/48 + 1/48 * b1) * b2^2) + (2/3 - 2/3 * b2) * floor((b1)/3)) + (1/3 - 1/3 * b2) * floor((1 + b1)/3)) + ((2/3 - 1/3 * b1) + floor((b1)/3)) * floor((b2)/3)) + (((1/3 - 2/3 * b1) + floor((b1)/3)) + floor((1 + b1)/3)) * floor((1 + b2)/3))"
        },
        {
            "domain": [
                {
                    "quantifiers": {
                        "e0": "floor((b2)/4)",
                        "e1": "floor((-2 + b2)/4)",
                        "e2": "floor((-1 + b1)/4)",
                        "e3": "floor((-3 + b1)/4)",
                        "e4": "floor((b1)/4)",
                        "e5": "floor((-1 + b2)/4)"
                    },
                    "linear conditions": [
                        "s == 1 + b2",
                        "4 * e4 == b1",
                        "4 * e5 == -1 + b2",
                        "b1 >= 3",
                        "b2 >= 1 + b1",
                        "4 * e0 >= -3 + b2",
                        "4 * e0 <= -1 + b2",
                        "4 * e1 >= -5 + b2",
                        "4 * e1 <= -3 + b2",
                        "4 * e2 <= -2 + b1",
                        "4 * e2 >= -4 + b1",
                        "4 * e3 <= -4 + b1",
                        "4 * e3 >= -6 + b1"
                    ]
                }
            ],
            "formula": "((((((7/16 + 1/48 * b1 - 5/24 * b1^2) + (-11/24 + 3/8 * b1 - 1/48 * b1^2) * b2 + (1/48 + 1/48 * b1) * b2^2) + ((2/3 + 1/3 * b1) - 2/3 * b2) * floor((b1)/3)) + (((-1/6 + 2/3 * b1) - 1/3 * b2) - floor((b1)/3)) * floor((1 + b1)/3) - 1/2 * floor((1 + b1)/3)^2) + ((2/3 - 1/3 * b1) + floor((b1)/3)) * floor((b2)/3)) + (((1/3 - 2/3 * b1) + floor((b1)/3)) + floor((1 + b1)/3)) * floor((1 + b2)/3))"
        },
        {
            "domain": [
                {
                    "quantifiers": {
                        "e0": "floor((b2)/4)",
                        "e1": "floor((-2 + b2)/4)",
                        "e2": "floor((-1 + b2)/4)",
                        "e3": "floor((-1 + b1)/4)",
                        "e4": "floor((-3 + b1)/4)",
                        "e5": "floor((-2 + b1)/4)",
                        "e6": "floor((b1)/4)",
                        "e7": "floor((1 + b2)/4)"
                    },
                    "linear conditions": [
                        "s == 1 + b2",
                        "4 * e6 == b1",
                        "4 * e7 == 1 + b2",
                        "b1 >= 3",
                        "b2 >= 1 + b1",
                        "4 * e0 >= -3 + b2",
                        "4 * e0 <= -1 + b2",
                        "4 * e1 >= -5 + b2",
                        "4 * e1 <= -3 + b2",
                        "4 * e2 >= -4 + b2",
                        "4 * e2 <= -2 + b2",
                        "4 * e3 >= -4 + b1",
                        "4 * e3 <= -2 + b1",
                        "4 * e4 >= -6 + b1",
                        "4 * e4 <= -4 + b1",
                        "4 * e5 >= -5 + b1",
                        "4 * e5 <= -3 + b1"
                    ]
                },
                {
                    "quantifiers": {
                        "e0": "floor((b2)/4)",
                        "e1": "floor((-2 + b2)/4)",
                        "e2": "floor((-1 + b1)/4)",
                        "e3": "floor((-3 + b1)/4)",
                        "e4": "floor((b1)/4)",
                        "e5": "floor((-2 + b1)/4)",
                        "e6": "floor((-1 + b2)/4)"
                    },
                    "linear conditions": [
                        "s == 1 + b2",
                        "4 * e5 == -2 + b1",
                        "4 * e6 == -1 + b2",
                        "b1 >= 3",
                        "b2 >= 1 + b1",
                        "4 * e0 >= -3 + b2",
                        "4 * e0 <= -1 + b2",
                        "4 * e1 >= -5 + b2",
                        "4 * e1 <= -3 + b2",
                        "4 * e2 >= -4 + b1",
                        "4 * e2 <= -2 + b1",
                        "4 * e3 >= -6 + b1",
                        "4 * e3 <= -4 + b1",
                        "4 * e4 >= -3 + b1",
                        "4 * e4 <= -1 + b1"
                    ]
                }
            ],
            "formula": "((((((3/16 + 1/48 * b1 - 5/24 * b1^2) + (-11/24 + 3/8 * b1 - 1/48 * b1^2) * b2 + (1/48 + 1/48 * b1) * b2^2) + ((2/3 + 1/3 * b1) - 2/3 * b2) * floor((b1)/3)) + (((-1/6 + 2/3 * b1) - 1/3 * b2) - floor((b1)/3)) * floor((1 + b1)/3) - 1/2 * floor((1 + b1)/3)^2) + ((2/3 - 1/3 * b1) + floor((b1)/3)) * floor((b2)/3)) + (((1/3 - 2/3 * b1) + floor((b1)/3)) + floor((1 + b1)/3)) * floor((1 + b2)/3))"
        },
        {
            "domain": [
                {
                    "quantifiers": {
                        "e0": "floor((b2)/4)",
                        "e1": "floor((-1 + b1)/2)",
                        "e2": "floor((-2 + b2)/4)"
                    },
                    "linear conditions": [
                        "s == 1 + b2",
                        "2 * e1 == -1 + b1",
                        "4 * e2 == -2 + b2",
                        "b1 >= 3",
                        "b2 >= b1",
                        "4 * e0 >= -3 + b2",
                        "4 * e0 <= -1 + b2"
                    ]
                },
                {
                    "quantifiers": {
                        "e0": "floor((-2 + b1)/4)",
                        "e1": "floor((b1)/4)",
                        "e2": "floor((-1 + b1)/2)",
                        "e3": "floor((b2)/4)"
                    },
                    "linear conditions": [
                        "s == 1 + b2",
                        "2 * e2 == -1 + b1",
                        "4 * e3 == b2",
                        "b1 >= 3",
                        "b2 >= b1",
                        "4 * e0 >= -5 + b1",
                        "4 * e0 <= -3 + b1",
                        "4 * e1 >= -3 + b1",
                        "4 * e1 <= -1 + b1"
                    ]
                }
            ],
            "formula": "((((((3/8 - 1/6 * b1 - 5/24 * b1^2) + (-13/48 + 3/8 * b1 - 1/48 * b1^2) * b2 + (1/48 + 1/48 * b1) * b2^2) + ((2/3 + 1/3 * b1) - 2/3 * b2) * floor((b1)/3)) + (((-1/6 + 2/3 * b1) - 1/3 * b2) - floor((b1)/3)) * floor((1 + b1)/3) - 1/2 * floor((1 + b1)/3)^2) + ((2/3 - 1/3 * b1) + floor((b1)/3)) * floor((b2)/3)) + (((1/3 - 2/3 * b1) + floor((b1)/3)) + floor((1 + b1)/3)) * floor((1 + b2)/3))"
        },
        {
            "domain": [
                {
                    "quantifiers": {
                        "e0": "floor((b2)/4)",
                        "e1": "floor((-2 + b2)/4)",
                        "e2": "floor((-1 + b1)/4)",
                        "e3": "floor((-3 + b1)/4)",
                        "e4": "floor((b1)/4)",
                        "e5": "floor((-1 + b2)/4)"
                    },
                    "linear conditions": [
                        "4 * e4 == b1",
                        "4 * e5 == -1 + b2",
                        "b2 >= 1 + b1",
                        "s >= 2 + b2",
                        "s <= -2 + b1 + b2",
                        "4 * e0 >= -3 + b2",
                        "4 * e0 <= -1 + b2",
                        "4 * e1 >= -5 + b2",
                        "4 * e1 <= -3 + b2",
                        "4 * e2 <= -2 + b1",
                        "4 * e2 >= -4 + b1",
                        "4 * e3 <= -4 + b1",
                        "4 * e3 >= -6 + b1"
                    ]
                }
            ],
            "formula": "((((((7/16 - 7/48 * b1 - 1/24 * b1^2) + (-11/24 + 3/8 * b1 - 1/48 * b1^2) * b2 + (1/48 + 1/48 * b1) * b2^2) + (2/3 - 2/3 * b2) * floor((b1)/3)) + (1/3 - 1/3 * b2) * floor((1 + b1)/3)) + ((2/3 - 1/3 * b1) + floor((b1)/3)) * floor((b2)/3)) + (((1/3 - 2/3 * b1) + floor((b1)/3)) + floor((1 + b1)/3)) * floor((1 + b2)/3))"
        },
        {
            "domain": [
                {
                    "quantifiers": {
                        "e0": "floor((b2)/4)",
                        "e1": "floor((-2 + b2)/4)",
                        "e2": "floor((-1 + b2)/4)",
                        "e3": "floor((-1 + b1)/4)",
                        "e4": "floor((-3 + b1)/4)",
                        "e5": "floor((-2 + b1)/4)",
                        "e6": "floor((b1)/4)",
                        "e7": "floor((-3 + b2)/4)"
                    },
                    "linear conditions": [
                        "4 * e6 == b1",
                        "4 * e7 == -3 + b2",
                        "b2 >= 1 + b1",
                        "s >= 2 + b2",
                        "s <= -2 + b1 + b2",
                        "4 * e0 >= -3 + b2",
                        "4 * e0 <= -1 + b2",
                        "4 * e1 >= -5 + b2",
                        "4 * e1 <= -3 + b2",
                        "4 * e2 >= -4 + b2",
                        "4 * e2 <= -2 + b2",
                        "4 * e3 >= -4 + b1",
                        "4 * e3 <= -2 + b1",
                        "4 * e4 >= -6 + b1",
                        "4 * e4 <= -4 + b1",
                        "4 * e5 >= -5 + b1",
                        "4 * e5 <= -3 + b1"
                    ]
                },
                {
                    "quantifiers": {
                        "e0": "floor((b2)/4)",
                        "e1": "floor((-2 + b2)/4)",
                        "e2": "floor((-1 + b1)/4)",
                        "e3": "floor((-3 + b1)/4)",
                        "e4": "floor((b1)/4)",
                        "e5": "floor((-2 + b1)/4)",
                        "e6": "floor((-1 + b2)/4)"
                    },
                    "linear conditions": [
                        "4 * e5 == -2 + b1",
                        "4 * e6 == -1 + b2",
                        "b2 >= 1 + b1",
                        "s >= 2 + b2",
                        "s <= -2 + b1 + b2",
                        "4 * e0 >= -3 + b2",
                        "4 * e0 <= -1 + b2",
                        "4 * e1 >= -5 + b2",
                        "4 * e1 <= -3 + b2",
                        "4 * e2 >= -4 + b1",
                        "4 * e2 <= -2 + b1",
                        "4 * e3 >= -6 + b1",
                        "4 * e3 <= -4 + b1",
                        "4 * e4 >= -3 + b1",
                        "4 * e4 <= -1 + b1"
                    ]
                }
            ],
            "formula": "((((((3/16 - 7/48 * b1 - 1/24 * b1^2) + (-11/24 + 3/8 * b1 - 1/48 * b1^2) * b2 + (1/48 + 1/48 * b1) * b2^2) + (2/3 - 2/3 * b2) * floor((b1)/3)) + (1/3 - 1/3 * b2) * floor((1 + b1)/3)) + ((2/3 - 1/3 * b1) + floor((b1)/3)) * floor((b2)/3)) + (((1/3 - 2/3 * b1) + floor((b1)/3)) + floor((1 + b1)/3)) * floor((1 + b2)/3))"
        },
        {
            "domain": [
                {
                    "quantifiers": {
                        "e0": "floor((b2)/4)",
                        "e1": "floor((-1 + b1)/2)",
                        "e2": "floor((-2 + b2)/4)"
                    },
                    "linear conditions": [
                        "2 * e1 == -1 + b1",
                        "4 * e2 == -2 + b2",
                        "b2 >= b1",
                        "s >= 2 + b2",
                        "s <= -2 + b1 + b2",
                        "4 * e0 >= -3 + b2",
                        "4 * e0 <= -1 + b2"
                    ]
                },
                {
                    "quantifiers": {
                        "e0": "floor((-2 + b1)/4)",
                        "e1": "floor((b1)/4)",
                        "e2": "floor((-1 + b1)/2)",
                        "e3": "floor((b2)/4)"
                    },
                    "linear conditions": [
                        "2 * e2 == -1 + b1",
                        "4 * e3 == b2",
                        "b2 >= b1",
                        "s >= 2 + b2",
                        "s <= -2 + b1 + b2",
                        "4 * e0 >= -5 + b1",
                        "4 * e0 <= -3 + b1",
                        "4 * e1 >= -3 + b1",
                        "4 * e1 <= -1 + b1"
                    ]
                }
            ],
            "formula": "((((((3/8 - 1/3 * b1 - 1/24 * b1^2) + (-13/48 + 3/8 * b1 - 1/48 * b1^2) * b2 + (1/48 + 1/48 * b1) * b2^2) + (2/3 - 2/3 * b2) * floor((b1)/3)) + (1/3 - 1/3 * b2) * floor((1 + b1)/3)) + ((2/3 - 1/3 * b1) + floor((b1)/3)) * floor((b2)/3)) + (((1/3 - 2/3 * b1) + floor((b1)/3)) + floor((1 + b1)/3)) * floor((1 + b2)/3))"
        },
        {
            "domain": [
                {
                    "quantifiers": {
                        "e0": "floor((-3 + b2)/4)",
                        "e1": "floor((-1 + b2)/4)",
                        "e2": "floor((-2 + b2)/4)",
                        "e3": "floor((-2 + b1)/4)",
                        "e4": "floor((b1)/4)",
                        "e5": "floor((b2)/4)"
                    },
                    "linear conditions": [
                        "4 * e4 == b1",
                        "4 * e5 == b2",
                        "b2 >= b1",
                        "4 * s >= b1 + 2 * b2",
                        "s <= -3 + b1",
                        "4 * e0 <= -4 + b2",
                        "4 * e0 >= -6 + b2",
                        "4 * e1 <= -2 + b2",
                        "4 * e1 >= -4 + b2",
                        "4 * e2 >= -5 + b2",
                        "4 * e2 <= -3 + b2",
                        "4 * e3 <= -3 + b1",
                        "4 * e3 >= -5 + b1"
                    ]
                }
            ],
            "formula": "(((((((((-b1 + 19/24 * b1^2 - 1/24 * b1^3) + (-1 + 43/24 * b1 - 1/16 * b1^2) * b2 + (29/48 + 1/16 * b1) * b2^2 + 1/24 * b2^3) + ((-1/3 - 1/6 * b1 + 1/4 * b1^2) + 1/3 * b2 - 1/4 * b2^2) * s + ((1/3 - 1/3 * b1) + 1/3 * b2) * s^2) + (((2/3 - 2/3 * b1) - 4/3 * b2) - 1/3 * s) * floor((b1)/3)) + (((1/3 - 4/3 * b1) - 5/3 * b2) - 2/3 * s) * floor((1 + b1)/3)) + ((((2/3 - 5/3 * b1) - 4/3 * b2) - 2/3 * s) + floor((b1)/3)) * floor((b2)/3)) + (((((1/3 - 4/3 * b1) - 2/3 * b2) - 1/3 * s) + floor((b1)/3)) + floor((1 + b1)/3)) * floor((1 + b2)/3)) + (((((2/3 - 2/3 * b1) - 1/3 * b2) + floor((b1)/3)) + floor((1 + b1)/3)) + floor((b2)/3)) * floor((2b1 + 2b2 + s)/3)) + (((((1/3 - 1/3 * b1) - 2/3 * b2) + floor((1 + b1)/3)) + floor((b2)/3)) + floor((1 + b2)/3)) * floor((1 + 2b1 + 2b2 + s)/3))"
        },
        {
            "domain": [
                {
                    "quantifiers": {
                        "e0": "floor((-3 + b2)/4)",
                        "e1": "floor((-1 + b2)/4)",
                        "e2": "floor((b1)/2)",
                        "e3": "floor((-2 + b2)/4)"
                    },
                    "linear conditions": [
                        "2 * e2 == b1",
                        "4 * e3 == -2 + b2",
                        "b2 >= b1",
                        "4 * s >= b1 + 2 * b2",
                        "s <= -3 + b1",
                        "4 * e1 >= -4 + b2",
                        "4 * e1 <= -2 + b2",
                        "4 * e0 <= -4 + b2",
                        "4 * e0 >= -6 + b2"
                    ]
                }
            ],
            "formula": "(((((((((1/4 - b1 + 19/24 * b1^2 - 1/24 * b1^3) + (-1 + 43/24 * b1 - 1/16 * b1^2) * b2 + (29/48 + 1/16 * b1) * b2^2 + 1/24 * b2^3) + ((-1/3 - 1/6 * b1 + 1/4 * b1^2) + 1/3 * b2 - 1/4 * b2^2) * s + ((1/3 - 1/3 * b1) + 1/3 * b2) * s^2) + (((2/3 - 2/3 * b1) - 4/3 * b2) - 1/3 * s) * floor((b1)/3)) + (((1/3 - 4/3 * b1) - 5/3 * b2) - 2/3 * s) * floor((1 + b1)/3)) + ((((2/3 - 5/3 * b1) - 4/3 * b2) - 2/3 * s) + floor((b1)/3)) * floor((b2)/3)) + (((((1/3 - 4/3 * b1) - 2/3 * b2) - 1/3 * s) + floor((b1)/3)) + floor((1 + b1)/3)) * floor((1 + b2)/3)) + (((((2/3 - 2/3 * b1) - 1/3 * b2) + floor((b1)/3)) + floor((1 + b1)/3)) + floor((b2)/3)) * floor((2b1 + 2b2 + s)/3)) + (((((1/3 - 1/3 * b1) - 2/3 * b2) + floor((1 + b1)/3)) + floor((b2)/3)) + floor((1 + b2)/3)) * floor((1 + 2b1 + 2b2 + s)/3))"
        },
        {
            "domain": [
                {
                    "quantifiers": {
                        "e0": "floor((-3 + b2)/4)",
                        "e1": "floor((-2 + b1)/4)",
                        "e2": "floor((b2)/4)",
                        "e3": "floor((-1 + b1)/4)",
                        "e4": "floor((-1 + b2)/4)"
                    },
                    "linear conditions": [
                        "4 * e3 == -1 + b1",
                        "4 * e4 == -1 + b2",
                        "b2 >= b1",
                        "4 * s >= 1 + b1 + 2 * b2",
                        "s <= -3 + b1",
                        "4 * e1 >= -5 + b1",
                        "4 * e1 <= -3 + b1",
                        "4 * e0 <= -4 + b2",
                        "4 * e0 >= -6 + b2",
                        "4 * e2 >= -3 + b2",
                        "4 * e2 <= -1 + b2"
                    ]
                }
            ],
            "formula": "(((((((((3/16 - 19/16 * b1 + 19/24 * b1^2 - 1/24 * b1^3) + (-19/16 + 43/24 * b1 - 1/16 * b1^2) * b2 + (29/48 + 1/16 * b1) * b2^2 + 1/24 * b2^3) + ((1/6 - 1/6 * b1 + 1/4 * b1^2) + 1/3 * b2 - 1/4 * b2^2) * s + ((1/3 - 1/3 * b1) + 1/3 * b2) * s^2) + (((2/3 - 2/3 * b1) - 4/3 * b2) - 1/3 * s) * floor((b1)/3)) + (((1/3 - 4/3 * b1) - 5/3 * b2) - 2/3 * s) * floor((1 + b1)/3)) + ((((2/3 - 5/3 * b1) - 4/3 * b2) - 2/3 * s) + floor((b1)/3)) * floor((b2)/3)) + (((((1/3 - 4/3 * b1) - 2/3 * b2) - 1/3 * s) + floor((b1)/3)) + floor((1 + b1)/3)) * floor((1 + b2)/3)) + (((((2/3 - 2/3 * b1) - 1/3 * b2) + floor((b1)/3)) + floor((1 + b1)/3)) + floor((b2)/3)) * floor((2b1 + 2b2 + s)/3)) + (((((1/3 - 1/3 * b1) - 2/3 * b2) + floor((1 + b1)/3)) + floor((b2)/3)) + floor((1 + b2)/3)) * floor((1 + 2b1 + 2b2 + s)/3))"
        },
        {
            "domain": [
                {
                    "quantifiers": {
                        "e0": "floor((b1)/4)",
                        "e1": "floor((-1 + b2)/4)",
                        "e2": "floor((-1 + b1)/4)",
                        "e3": "floor((-3 + b2)/4)"
                    },
                    "linear conditions": [
                        "4 * e2 == -1 + b1",
                        "4 * e3 == -3 + b2",
                        "b2 >= 2 + b1",
                        "4 * s >= 1 + b1 + 2 * b2",
                        "s <= -3 + b1",
                        "4 * e0 <= -1 + b1",
                        "4 * e0 >= -3 + b1",
                        "4 * e1 <= -2 + b2",
                        "4 * e1 >= -4 + b2"
                    ]
                }
            ],
            "formula": "(((((((((11/16 - 19/16 * b1 + 19/24 * b1^2 - 1/24 * b1^3) + (-19/16 + 43/24 * b1 - 1/16 * b1^2) * b2 + (29/48 + 1/16 * b1) * b2^2 + 1/24 * b2^3) + ((1/6 - 1/6 * b1 + 1/4 * b1^2) + 1/3 * b2 - 1/4 * b2^2) * s + ((1/3 - 1/3 * b1) + 1/3 * b2) * s^2) + (((2/3 - 2/3 * b1) - 4/3 * b2) - 1/3 * s) * floor((b1)/3)) + (((1/3 - 4/3 * b1) - 5/3 * b2) - 2/3 * s) * floor((1 + b1)/3)) + ((((2/3 - 5/3 * b1) - 4/3 * b2) - 2/3 * s) + floor((b1)/3)) * floor((b2)/3)) + (((((1/3 - 4/3 * b1) - 2/3 * b2) - 1/3 * s) + floor((b1)/3)) + floor((1 + b1)/3)) * floor((1 + b2)/3)) + (((((2/3 - 2/3 * b1) - 1/3 * b2) + floor((b1)/3)) + floor((1 + b1)/3)) + floor((b2)/3)) * floor((2b1 + 2b2 + s)/3)) + (((((1/3 - 1/3 * b1) - 2/3 * b2) + floor((1 + b1)/3)) + floor((b2)/3)) + floor((1 + b2)/3)) * floor((1 + 2b1 + 2b2 + s)/3))"
        },
        {
            "domain": [
                {
                    "quantifiers": {
                        "e0": "floor((b1)/4)",
                        "e1": "floor((-1 + b2)/4)",
                        "e2": "floor((-1 + b1)/4)",
                        "e3": "floor((-3 + b1)/4)",
                        "e4": "floor((-3 + b2)/4)"
                    },
                    "linear conditions": [
                        "4 * e3 == -3 + b1",
                        "4 * e4 == -3 + b2",
                        "b2 >= b1",
                        "4 * s >= 1 + b1 + 2 * b2",
                        "s <= -3 + b1",
                        "4 * e0 >= -3 + b1",
                        "4 * e0 <= -1 + b1",
                        "4 * e1 >= -4 + b2",
                        "4 * e1 <= -2 + b2",
                        "4 * e2 >= -4 + b1",
                        "4 * e2 <= -2 + b1"
                    ]
                },
                {
                    "quantifiers": {
                        "e0": "floor((-3 + b2)/4)",
                        "e1": "floor((-2 + b1)/4)",
                        "e2": "floor((b2)/4)",
                        "e3": "floor((-1 + b1)/4)",
                        "e4": "floor((-3 + b1)/4)",
                        "e5": "floor((-1 + b2)/4)"
                    },
                    "linear conditions": [
                        "4 * e4 == -3 + b1",
                        "4 * e5 == -1 + b2",
                        "b2 >= b1",
                        "4 * s >= 1 + b1 + 2 * b2",
                        "s <= -3 + b1",
                        "4 * e0 >= -6 + b2",
                        "4 * e0 <= -4 + b2",
                        "4 * e1 >= -5 + b1",
                        "4 * e1 <= -3 + b1",
                        "4 * e2 >= -3 + b2",
                        "4 * e2 <= -1 + b2",
                        "4 * e3 >= -4 + b1",
                        "4 * e3 <= -2 + b1"
                    ]
                }
            ],
            "formula": "(((((((((7/16 - 19/16 * b1 + 19/24 * b1^2 - 1/24 * b1^3) + (-19/16 + 43/24 * b1 - 1/16 * b1^2) * b2 + (29/48 + 1/16 * b1) * b2^2 + 1/24 * b2^3) + ((1/6 - 1/6 * b1 + 1/4 * b1^2) + 1/3 * b2 - 1/4 * b2^2) * s + ((1/3 - 1/3 * b1) + 1/3 * b2) * s^2) + (((2/3 - 2/3 * b1) - 4/3 * b2) - 1/3 * s) * floor((b1)/3)) + (((1/3 - 4/3 * b1) - 5/3 * b2) - 2/3 * s) * floor((1 + b1)/3)) + ((((2/3 - 5/3 * b1) - 4/3 * b2) - 2/3 * s) + floor((b1)/3)) * floor((b2)/3)) + (((((1/3 - 4/3 * b1) - 2/3 * b2) - 1/3 * s) + floor((b1)/3)) + floor((1 + b1)/3)) * floor((1 + b2)/3)) + (((((2/3 - 2/3 * b1) - 1/3 * b2) + floor((b1)/3)) + floor((1 + b1)/3)) + floor((b2)/3)) * floor((2b1 + 2b2 + s)/3)) + (((((1/3 - 1/3 * b1) - 2/3 * b2) + floor((1 + b1)/3)) + floor((b2)/3)) + floor((1 + b2)/3)) * floor((1 + 2b1 + 2b2 + s)/3))"
        },
        {
            "domain": [
                {
                    "quantifiers": {
                        "e0": "floor((b1)/4)",
                        "e1": "floor((-1 + b2)/4)",
                        "e2": "floor((-1 + b1)/4)",
                        "e3": "floor((-3 + b1)/4)",
                        "e4": "floor((-2 + b1)/4)",
                        "e5": "floor((-3 + b2)/4)"
                    },
                    "linear conditions": [
                        "4 * e4 == -2 + b1",
                        "4 * e5 == -3 + b2",
                        "b2 >= 1 + b1",
                        "4 * s >= b1 + 2 * b2",
                        "s <= -3 + b1",
                        "4 * e0 <= -1 + b1",
                        "4 * e0 >= -3 + b1",
                        "4 * e1 <= -2 + b2",
                        "4 * e1 >= -4 + b2",
                        "4 * e2 <= -2 + b1",
                        "4 * e2 >= -4 + b1",
                        "4 * e3 <= -4 + b1",
                        "4 * e3 >= -6 + b1"
                    ]
                }
            ],
            "formula": "(((((((((3/16 - 19/16 * b1 + 19/24 * b1^2 - 1/24 * b1^3) + (-1 + 43/24 * b1 - 1/16 * b1^2) * b2 + (29/48 + 1/16 * b1) * b2^2 + 1/24 * b2^3) + ((-1/12 - 1/6 * b1 + 1/4 * b1^2) + 1/3 * b2 - 1/4 * b2^2) * s + ((1/3 - 1/3 * b1) + 1/3 * b2) * s^2) + (((2/3 - 2/3 * b1) - 4/3 * b2) - 1/3 * s) * floor((b1)/3)) + (((1/3 - 4/3 * b1) - 5/3 * b2) - 2/3 * s) * floor((1 + b1)/3)) + ((((2/3 - 5/3 * b1) - 4/3 * b2) - 2/3 * s) + floor((b1)/3)) * floor((b2)/3)) + (((((1/3 - 4/3 * b1) - 2/3 * b2) - 1/3 * s) + floor((b1)/3)) + floor((1 + b1)/3)) * floor((1 + b2)/3)) + (((((2/3 - 2/3 * b1) - 1/3 * b2) + floor((b1)/3)) + floor((1 + b1)/3)) + floor((b2)/3)) * floor((2b1 + 2b2 + s)/3)) + (((((1/3 - 1/3 * b1) - 2/3 * b2) + floor((1 + b1)/3)) + floor((b2)/3)) + floor((1 + b2)/3)) * floor((1 + 2b1 + 2b2 + s)/3))"
        },
        {
            "domain": [
                {
                    "quantifiers": {
                        "e0": "floor((-3 + b2)/4)",
                        "e1": "floor((-2 + b1)/4)",
                        "e2": "floor((b2)/4)",
                        "e3": "floor((-1 + b1)/4)",
                        "e4": "floor((-3 + b1)/4)",
                        "e5": "floor((b1)/4)",
                        "e6": "floor((-1 + b2)/4)"
                    },
                    "linear conditions": [
                        "4 * e5 == b1",
                        "4 * e6 == -1 + b2",
                        "b2 >= 1 + b1",
                        "4 * s >= 2 + b1 + 2 * b2",
                        "s <= -3 + b1",
                        "4 * e0 <= -4 + b2",
                        "4 * e0 >= -6 + b2",
                        "4 * e1 <= -3 + b1",
                        "4 * e1 >= -5 + b1",
                        "4 * e2 >= -3 + b2",
                        "4 * e2 <= -1 + b2",
                        "4 * e3 <= -2 + b1",
                        "4 * e3 >= -4 + b1",
                        "4 * e4 <= -4 + b1",
                        "4 * e4 >= -6 + b1"
                    ]
                }
            ],
            "formula": "(((((((((11/16 - 19/16 * b1 + 19/24 * b1^2 - 1/24 * b1^3) + (-1 + 43/24 * b1 - 1/16 * b1^2) * b2 + (29/48 + 1/16 * b1) * b2^2 + 1/24 * b2^3) + ((-1/12 - 1/6 * b1 + 1/4 * b1^2) + 1/3 * b2 - 1/4 * b2^2) * s + ((1/3 - 1/3 * b1) + 1/3 * b2) * s^2) + (((2/3 - 2/3 * b1) - 4/3 * b2) - 1/3 * s) * floor((b1)/3)) + (((1/3 - 4/3 * b1) - 5/3 * b2) - 2/3 * s) * floor((1 + b1)/3)) + ((((2/3 - 5/3 * b1) - 4/3 * b2) - 2/3 * s) + floor((b1)/3)) * floor((b2)/3)) + (((((1/3 - 4/3 * b1) - 2/3 * b2) - 1/3 * s) + floor((b1)/3)) + floor((1 + b1)/3)) * floor((1 + b2)/3)) + (((((2/3 - 2/3 * b1) - 1/3 * b2) + floor((b1)/3)) + floor((1 + b1)/3)) + floor((b2)/3)) * floor((2b1 + 2b2 + s)/3)) + (((((1/3 - 1/3 * b1) - 2/3 * b2) + floor((1 + b1)/3)) + floor((b2)/3)) + floor((1 + b2)/3)) * floor((1 + 2b1 + 2b2 + s)/3))"
        }
    ]
}